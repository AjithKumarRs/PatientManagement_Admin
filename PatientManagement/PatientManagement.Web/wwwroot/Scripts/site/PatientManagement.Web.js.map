{"version":3,"file":"PatientManagement.Web.js","sourceRoot":"","sources":["../../../Imports/ServerTypings/Administration.CurrenciesForm.ts","../../../Imports/ServerTypings/Administration.CurrenciesRow.ts","../../../Imports/ServerTypings/Administration.CurrenciesService.ts","../../../Imports/ServerTypings/Administration.LanguageColumns.ts","../../../Imports/ServerTypings/Administration.LanguageForm.ts","../../../Imports/ServerTypings/Administration.LanguageRow.ts","../../../Imports/ServerTypings/Administration.LanguageService.ts","../../../Imports/ServerTypings/Administration.OfferLangRow.ts","../../../Imports/ServerTypings/Administration.OfferLangService.ts","../../../Imports/ServerTypings/Administration.OffersForm.ts","../../../Imports/ServerTypings/Administration.OffersRow.ts","../../../Imports/ServerTypings/Administration.OffersService.ts","../../../Imports/ServerTypings/Administration.PaymentOptionsForm.ts","../../../Imports/ServerTypings/Administration.PaymentOptionsRow.ts","../../../Imports/ServerTypings/Administration.PaymentOptionsService.ts","../../../Imports/ServerTypings/Administration.PaymentsDetailsForm.ts","../../../Imports/ServerTypings/Administration.PaymentsDetailsRow.ts","../../../Imports/ServerTypings/Administration.PaymentsDetailsService.ts","../../../Imports/ServerTypings/Administration.PaymentsForm.ts","../../../Imports/ServerTypings/Administration.PaymentsRow.ts","../../../Imports/ServerTypings/Administration.PaymentsService.ts","../../../Imports/ServerTypings/Administration.RoleColumns.ts","../../../Imports/ServerTypings/Administration.RoleForm.ts","../../../Imports/ServerTypings/Administration.RolePermissionListRequest.ts","../../../Imports/ServerTypings/Administration.RolePermissionListResponse.ts","../../../Imports/ServerTypings/Administration.RolePermissionRow.ts","../../../Imports/ServerTypings/Administration.RolePermissionService.ts","../../../Imports/ServerTypings/Administration.RolePermissionUpdateRequest.ts","../../../Imports/ServerTypings/Administration.RoleRow.ts","../../../Imports/ServerTypings/Administration.RoleService.ts","../../../Imports/ServerTypings/Administration.SergenConnection.ts","../../../Imports/ServerTypings/Administration.SergenGenerateOptions.ts","../../../Imports/ServerTypings/Administration.SergenGenerateRequest.ts","../../../Imports/ServerTypings/Administration.SergenListTablesRequest.ts","../../../Imports/ServerTypings/Administration.SergenService.ts","../../../Imports/ServerTypings/Administration.SergenTable.ts","../../../Imports/ServerTypings/Administration.SubscriptionsForm.ts","../../../Imports/ServerTypings/Administration.SubscriptionsRow.ts","../../../Imports/ServerTypings/Administration.SubscriptionsService.ts","../../../Imports/ServerTypings/Administration.TenantColumns.ts","../../../Imports/ServerTypings/Administration.TenantForm.ts","../../../Imports/ServerTypings/Administration.TenantRow.ts","../../../Imports/ServerTypings/Administration.TenantService.ts","../../../Imports/ServerTypings/Administration.TranslationItem.ts","../../../Imports/ServerTypings/Administration.TranslationListRequest.ts","../../../Imports/ServerTypings/Administration.TranslationService.ts","../../../Imports/ServerTypings/Administration.TranslationUpdateRequest.ts","../../../Imports/ServerTypings/Administration.UserColumns.ts","../../../Imports/ServerTypings/Administration.UserForm.ts","../../../Imports/ServerTypings/Administration.UserPermissionListRequest.ts","../../../Imports/ServerTypings/Administration.UserPermissionRow.ts","../../../Imports/ServerTypings/Administration.UserPermissionService.ts","../../../Imports/ServerTypings/Administration.UserPermissionUpdateRequest.ts","../../../Imports/ServerTypings/Administration.UserRoleListRequest.ts","../../../Imports/ServerTypings/Administration.UserRoleListResponse.ts","../../../Imports/ServerTypings/Administration.UserRoleRow.ts","../../../Imports/ServerTypings/Administration.UserRoleService.ts","../../../Imports/ServerTypings/Administration.UserRoleUpdateRequest.ts","../../../Imports/ServerTypings/Administration.UserRow.ts","../../../Imports/ServerTypings/Administration.UserService.ts","../../../Imports/ServerTypings/Common.Pages.UploadResponse.ts","../../../Imports/ServerTypings/Common.UserPreferenceRetrieveRequest.ts","../../../Imports/ServerTypings/Common.UserPreferenceRetrieveResponse.ts","../../../Imports/ServerTypings/Common.UserPreferenceRow.ts","../../../Imports/ServerTypings/Common.UserPreferenceService.ts","../../../Imports/ServerTypings/Common.UserPreferenceUpdateRequest.ts","../../../Imports/ServerTypings/ExcelImportRequest.ts","../../../Imports/ServerTypings/ExcelImportResponse.ts","../../../Imports/ServerTypings/GetNextNumberRequest.ts","../../../Imports/ServerTypings/GetNextNumberResponse.ts","../../../Imports/ServerTypings/Membership.ChangePasswordForm.ts","../../../Imports/ServerTypings/Membership.ChangePasswordRequest.ts","../../../Imports/ServerTypings/Membership.ForgotPasswordForm.ts","../../../Imports/ServerTypings/Membership.ForgotPasswordRequest.ts","../../../Imports/ServerTypings/Membership.LoginForm.ts","../../../Imports/ServerTypings/Membership.LoginRequest.ts","../../../Imports/ServerTypings/Membership.ResetPasswordForm.ts","../../../Imports/ServerTypings/Membership.ResetPasswordRequest.ts","../../../Imports/ServerTypings/Membership.SignUpForm.ts","../../../Imports/ServerTypings/Membership.SignUpRequest.ts","../../../Imports/ServerTypings/PatientManagement.ActivityColumns.ts","../../../Imports/ServerTypings/PatientManagement.ActivityForm.ts","../../../Imports/ServerTypings/PatientManagement.ActivityRow.ts","../../../Imports/ServerTypings/PatientManagement.ActivityService.ts","../../../Imports/ServerTypings/PatientManagement.Gender.ts","../../../Imports/ServerTypings/PatientManagement.LifeStylesColumns.ts","../../../Imports/ServerTypings/PatientManagement.LifeStylesForm.ts","../../../Imports/ServerTypings/PatientManagement.LifeStylesRow.ts","../../../Imports/ServerTypings/PatientManagement.LifeStylesService.ts","../../../Imports/ServerTypings/PatientManagement.NotesRow.ts","../../../Imports/ServerTypings/PatientManagement.NotificationsForm.ts","../../../Imports/ServerTypings/PatientManagement.NotificationsRow.ts","../../../Imports/ServerTypings/PatientManagement.NotificationsService.ts","../../../Imports/ServerTypings/PatientManagement.PatientHealthColumns.ts","../../../Imports/ServerTypings/PatientManagement.PatientHealthForm.ts","../../../Imports/ServerTypings/PatientManagement.PatientHealthRow.ts","../../../Imports/ServerTypings/PatientManagement.PatientHealthService.ts","../../../Imports/ServerTypings/PatientManagement.PatientsColumns.ts","../../../Imports/ServerTypings/PatientManagement.PatientsFileUploadsColumns.ts","../../../Imports/ServerTypings/PatientManagement.PatientsFileUploadsForm.ts","../../../Imports/ServerTypings/PatientManagement.PatientsFileUploadsRow.ts","../../../Imports/ServerTypings/PatientManagement.PatientsFileUploadsService.ts","../../../Imports/ServerTypings/PatientManagement.PatientsForm.ts","../../../Imports/ServerTypings/PatientManagement.PatientsRow.ts","../../../Imports/ServerTypings/PatientManagement.PatientsService.ts","../../../Imports/ServerTypings/PatientManagement.UserNotificationsForm.ts","../../../Imports/ServerTypings/PatientManagement.UserNotificationsRow.ts","../../../Imports/ServerTypings/PatientManagement.UserNotificationsService.ts","../../../Imports/ServerTypings/PatientManagement.VisitsColumns.ts","../../../Imports/ServerTypings/PatientManagement.VisitsForm.ts","../../../Imports/ServerTypings/PatientManagement.VisitsRow.ts","../../../Imports/ServerTypings/PatientManagement.VisitsService.ts","../../../Imports/ServerTypings/PatientManagement.VisitTypesColumns.ts","../../../Imports/ServerTypings/PatientManagement.VisitTypesForm.ts","../../../Imports/ServerTypings/PatientManagement.VisitTypesRow.ts","../../../Imports/ServerTypings/PatientManagement.VisitTypesService.ts","../../../Imports/ServerTypings/ScriptUserDefinition.ts","../../../Modules/Administration/Currencies/CurrenciesDialog.ts","../../../Modules/Administration/Currencies/CurrenciesGrid.ts","../../../Modules/Administration/Language/LanguageDialog.ts","../../../Modules/Administration/Language/LanguageGrid.ts","../../../Modules/Administration/Offers/OffersDialog.ts","../../../Modules/Administration/Offers/OffersGrid.ts","../../../Modules/Administration/PaymentOptions/PaymentOptionsDialog.ts","../../../Modules/Administration/PaymentOptions/PaymentOptionsGrid.ts","../../../Modules/Administration/Payments/PaymentsDialog.ts","../../../Modules/Administration/Payments/PaymentsGrid.ts","../../../Modules/Administration/PaymentsDetails/PaymentsDetailsDialog.ts","../../../Modules/Administration/PaymentsDetails/PaymentsDetailsGrid.ts","../../../Modules/Administration/Role/RoleDialog.ts","../../../Modules/Administration/Role/RoleGrid.ts","../../../Modules/Administration/RolePermission/RolePermissionDialog.ts","../../../Modules/Administration/Sergen/SergenPanel.ts","../../../Modules/Administration/Subscriptions/SubscriptionsDialog.ts","../../../Modules/Administration/Subscriptions/SubscriptionsGrid.ts","../../../Modules/Administration/Tenant/TenantDialog.ts","../../../Modules/Administration/Tenant/TenantGrid.ts","../../../Modules/Administration/Translation/TranslationGrid.ts","../../../Modules/Administration/User/Authentication/Authorization.ts","../../../Modules/Administration/User/UserDialog.ts","../../../Modules/Administration/User/UserGrid.ts","../../../Modules/Administration/UserPermission/PermissionCheckEditor.ts","../../../Modules/Administration/UserPermission/UserPermissionDialog.ts","../../../Modules/Administration/UserRole/RoleCheckEditor.ts","../../../Modules/Administration/UserRole/UserRoleDialog.ts","../../../Modules/Common/Helpers/BasicProgressDialog.ts","../../../Modules/Common/Helpers/BSSwitchEditor.ts","../../../Modules/Common/Helpers/BulkServiceAction.ts","../../../Modules/Common/Helpers/DialogUtils.ts","../../../Modules/Common/Helpers/EnumSelectFormatter.ts","../../../Modules/Common/Helpers/ExcelExportHelper.ts","../../../Modules/Common/Helpers/GridEditorBase.ts","../../../Modules/Common/Helpers/GridEditorDialog.ts","../../../Modules/Common/Helpers/LanguageList.ts","../../../Modules/Common/Navigation/LanguageSelection.ts","../../../Modules/Common/Navigation/NotificationDropdownMenu.ts","../../../Modules/Common/Navigation/RecieveNotificationToggle.ts","../../../Modules/Common/Navigation/SidebarSearch.ts","../../../Modules/Common/Navigation/ThemeSelection.ts","../../../Modules/Common/Reporting/PdfExportHelper.ts","../../../Modules/Common/Reporting/ReportDialog.ts","../../../Modules/Common/Reporting/ReportHelper.ts","../../../Modules/Common/Reporting/ReportPage.ts","../../../Modules/Common/ScriptInitialization.ts","../../../Modules/Common/UserPreference/UserPreferenceStorage.ts","../../../Modules/Membership/Account/ChangePassword/ChangePasswordPanel.ts","../../../Modules/Membership/Account/ForgotPassword/ForgotPasswordPanel.ts","../../../Modules/Membership/Account/LoginPanel.ts","../../../Modules/Membership/Account/ResetPassword/ResetPasswordPanel.ts","../../../Modules/Membership/Account/SignUp/OfferDropDownEditor.ts","../../../Modules/Membership/Account/SignUp/SignUpPanel.ts","../../../Modules/PatientManagement/Activity/ActivityDialog.ts","../../../Modules/PatientManagement/Patients/PatientsDialog.ts","../../../Modules/PatientManagement/Dashboard/CalendarPatientDialog.ts","../../../Modules/PatientManagement/Visits/VisitsDialog.ts","../../../Modules/PatientManagement/Dashboard/CalendarVisitsDialog.ts","../../../Modules/PatientManagement/Visits/VisitsGrid.ts","../../../Modules/PatientManagement/Dashboard/CalendarVIsitsGrid.ts","../../../Modules/PatientManagement/LifeStyles/LifeStylesDialog.ts","../../../Modules/PatientManagement/LifeStyles/LifeStylesGrid.ts","../../../Modules/PatientManagement/Notes/NotesDialog.ts","../../../Modules/PatientManagement/Notes/NotesEditor.ts","../../../Modules/PatientManagement/Notifications/NoficationsFormatter.ts","../../../Modules/PatientManagement/Notifications/NotificationsDialog.ts","../../../Modules/PatientManagement/Notifications/NotificationsGrid.ts","../../../Modules/PatientManagement/PatientHealth/PatientHealthDialog.ts","../../../Modules/PatientManagement/PatientHealth/PatientHealthGrid.ts","../../../Modules/PatientManagement/PatientsFileUploads/PatientsFileUploadsDialog.ts","../../../Modules/PatientManagement/Patients/FIleUploadsForPatientDialog.ts","../../../Modules/PatientManagement/PatientsFileUploads/PatientsFileUploadsGrid.ts","../../../Modules/PatientManagement/Patients/FileUploadsForPatientGrid.ts","../../../Modules/PatientManagement/Patients/PatientsFormatter.ts","../../../Modules/PatientManagement/Patients/PatientsGrid.ts","../../../Modules/PatientManagement/Patients/PatientVisitsDialog.ts","../../../Modules/PatientManagement/Patients/PatientVisitsGrid.ts","../../../Modules/PatientManagement/UserNotifications/UserNotificationsDialog.ts","../../../Modules/PatientManagement/UserNotifications/UserNotificationsGrid.ts","../../../Modules/PatientManagement/VisitTypes/VisitsTypesFormatter.ts","../../../Modules/PatientManagement/VisitTypes/VisitTypesDialog.ts","../../../Modules/PatientManagement/VisitTypes/VisitTypesGrid.ts","../../../Modules/PatientManagement/VisitTypes/VisiTypesBottomLeftMenu.ts"],"names":[],"mappings":"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","sourcesContent":["namespace PatientManagement.Administration {\r\n    export class CurrenciesForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Administration.Currencies';\r\n\r\n    }\r\n\r\n    export interface CurrenciesForm {\r\n        Name: Serenity.StringEditor;\r\n    }\r\n\r\n    [['Name', () => Serenity.StringEditor]].forEach(x => Object.defineProperty(CurrenciesForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    export interface CurrenciesRow {\r\n        Id?: number;\r\n        CurrencyId?: string;\r\n        Name?: string;\r\n        Rate?: number;\r\n        Enabled?: boolean;\r\n        BaseCurrencyId?: number;\r\n        UpdateUserId?: string;\r\n        UpdateDateField?: string;\r\n    }\r\n\r\n    export namespace CurrenciesRow {\r\n        export const idProperty = 'Id';\r\n        export const nameProperty = 'CurrencyId';\r\n        export const localTextPrefix = 'Administration.Currencies';\r\n\r\n        export namespace Fields {\r\n            export declare const Id;\r\n            export declare const CurrencyId;\r\n            export declare const Name;\r\n            export declare const Rate;\r\n            export declare const Enabled;\r\n            export declare const BaseCurrencyId;\r\n            export declare const UpdateUserId;\r\n            export declare const UpdateDateField;\r\n        }\r\n\r\n        ['Id', 'CurrencyId', 'Name', 'Rate', 'Enabled','BaseCurrencyId', 'UpdateUserId', 'UpdateDateField'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n\r\n","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export namespace CurrenciesService {\r\n        export const baseUrl = 'Administration/Currencies';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<CurrenciesRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Serenity.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<CurrenciesRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function UpdateAllCurrencies(request: Serenity.SaveRequest<CurrenciesRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<CurrenciesRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<CurrenciesRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const UpdateAllCurrencies: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'UpdateAllCurrencies', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>CurrenciesService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export class LanguageForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Administration.Language';\r\n\r\n    }\r\n\r\n    export interface LanguageForm {\r\n        LanguageId: Serenity.StringEditor;\r\n        LanguageName: Serenity.StringEditor;\r\n    }\r\n\r\n    [['LanguageId', () => Serenity.StringEditor], ['LanguageName', () => Serenity.StringEditor]].forEach(x => Object.defineProperty(LanguageForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface LanguageRow {\r\n        Id?: number;\r\n        LanguageId?: string;\r\n        LanguageName?: string;\r\n    }\r\n\r\n    export namespace LanguageRow {\r\n        export const idProperty = 'Id';\r\n        export const nameProperty = 'LanguageName';\r\n        export const localTextPrefix = 'Administration.Language';\r\n        export const lookupKey = 'Administration.Language';\r\n\r\n        export function getLookup(): Q.Lookup<LanguageRow> {\r\n            return Q.getLookup<LanguageRow>('Administration.Language');\r\n        }\r\n\r\n        export namespace Fields {\r\n            export declare const Id: string;\r\n            export declare const LanguageId: string;\r\n            export declare const LanguageName: string;\r\n        }\r\n\r\n        ['Id', 'LanguageId', 'LanguageName'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export namespace LanguageService {\r\n        export const baseUrl = 'Administration/Language';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<LanguageRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<LanguageRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<LanguageRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<LanguageRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>LanguageService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n\r\n","\r\nnamespace PatientManagement.Administration {\r\n    export interface OfferLangRow {\r\n        Id?: number;\r\n        OfferId?: number;\r\n        LanguageId?: number;\r\n        OfferName?: string;\r\n        Description?: string;\r\n    }\r\n\r\n    export namespace OfferLangRow {\r\n        export const idProperty = 'Id';\r\n        export const nameProperty = 'OfferName';\r\n        export const localTextPrefix = 'Administration.OfferLang';\r\n\r\n        export namespace Fields {\r\n            export declare const Id;\r\n            export declare const OfferId;\r\n            export declare const LanguageId;\r\n            export declare const OfferName;\r\n            export declare const Description;\r\n        }\r\n\r\n        ['Id', 'OfferId', 'LanguageId', 'OfferName', 'Description'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n\r\n","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export namespace OfferLangService {\r\n        export const baseUrl = 'Administration/OfferLang';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<OfferLangRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Serenity.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<OfferLangRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<OfferLangRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<OfferLangRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>OfferLangService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export class OffersForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Administration.Offers';\r\n    }\r\n\r\n    export interface OffersForm {\r\n        Name: Serenity.StringEditor;\r\n        MaximumSubscriptionTime: Serenity.StringEditor;\r\n        Description: Serenity.StringEditor;\r\n        CurrencyId: Serenity.IntegerEditor;\r\n        RoleId: Serenity.IntegerEditor;\r\n        UpdateUserId: Serenity.IntegerEditor;\r\n        UpdateDateField: Serenity.DateEditor;\r\n    }\r\n\r\n    [['Name', () => Serenity.StringEditor], ['MaximumSubscriptionTime', () => Serenity.StringEditor], ['Description', () => Serenity.StringEditor], ['CurrencyId', () => Serenity.IntegerEditor], ['RoleId', () => Serenity.IntegerEditor], ['UpdateUserId', () => Serenity.IntegerEditor], ['UpdateDateField', () => Serenity.DateEditor]].forEach(x => Object.defineProperty(OffersForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    export interface OffersRow {\r\n        OfferId?: number;\r\n        Name?: string;\r\n        MaximumSubscriptionTime?: string;\r\n        Description?: string;\r\n        CurrencyId?: number;\r\n        RoleId?: number;\r\n        UpdateUserId?: number;\r\n        UpdateDateField?: string;\r\n        CurrencyCurrencyId?: string;\r\n        CurrencyName?: string;\r\n        CurrencyRate?: number;\r\n        CurrencyEnabled?: boolean;\r\n        CurrencyBaseCurrencyId?: number;\r\n        CurrencyUpdateUserId?: number;\r\n        CurrencyUpdateDateField?: string;\r\n        RoleRoleName?: string;\r\n        RoleTenantId?: number;\r\n    }\r\n\r\n    export namespace OffersRow {\r\n        export const idProperty = 'OfferId';\r\n        export const nameProperty = 'Name';\r\n        export const localTextPrefix = 'Administration.Offers';\r\n\r\n        export namespace Fields {\r\n            export declare const Id;\r\n            export declare const Name;\r\n            export declare const MaximumSubscriptionTime;\r\n            export declare const Description;\r\n            export declare const CurrencyId;\r\n            export declare const RoleId;\r\n            export declare const UpdateUserId;\r\n            export declare const UpdateDateField;\r\n            export declare const CurrencyCurrencyId: string;\r\n            export declare const CurrencyName: string;\r\n            export declare const CurrencyRate: string;\r\n            export declare const CurrencyEnabled: string;\r\n            export declare const CurrencyBaseCurrencyId: string;\r\n            export declare const CurrencyUpdateUserId: string;\r\n            export declare const CurrencyUpdateDateField: string;\r\n            export declare const RoleRoleName: string;\r\n            export declare const RoleTenantId: string;\r\n        }\r\n\r\n        ['OfferId', 'Name', 'MaximumSubscriptionTime', 'Description', 'CurrencyId', 'RoleId', 'UpdateUserId', 'UpdateDateField', 'CurrencyCurrencyId', 'CurrencyName', 'CurrencyRate', 'CurrencyEnabled', 'CurrencyBaseCurrencyId', 'CurrencyUpdateUserId', 'CurrencyUpdateDateField', 'RoleRoleName', 'RoleTenantId'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n\r\n","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export namespace OffersService {\r\n        export const baseUrl = 'Administration/Offers';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<OffersRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Serenity.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<OffersRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<OffersRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<OffersRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>OffersService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export class PaymentOptionsForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Administration.PaymentOptions';\r\n    }\r\n\r\n    export interface PaymentOptionsForm {\r\n        Days: Serenity.IntegerEditor;\r\n        Name: Serenity.StringEditor;\r\n        InsertUserId: Serenity.IntegerEditor;\r\n        InsertDate: Serenity.DateEditor;\r\n        UpdateUserId: Serenity.IntegerEditor;\r\n        UpdateDateField: Serenity.DateEditor;\r\n    }\r\n\r\n    [['Days', () => Serenity.IntegerEditor], ['Name', () => Serenity.StringEditor], ['InsertUserId', () => Serenity.IntegerEditor], ['InsertDate', () => Serenity.DateEditor], ['UpdateUserId', () => Serenity.IntegerEditor], ['UpdateDateField', () => Serenity.DateEditor]].forEach(x => Object.defineProperty(PaymentOptionsForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    export interface PaymentOptionsRow {\r\n        PaymentOptionId?: number;\r\n        Days?: number;\r\n        Name?: string;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        UpdateUserId?: number;\r\n        UpdateDateField?: string;\r\n    }\r\n\r\n    export namespace PaymentOptionsRow {\r\n        export const idProperty = 'PaymentOptionId';\r\n        export const nameProperty = 'Name';\r\n        export const localTextPrefix = 'Administration.PaymentOptions';\r\n\r\n        export namespace Fields {\r\n            export declare const PaymentOptionId;\r\n            export declare const Days;\r\n            export declare const Name;\r\n            export declare const InsertUserId;\r\n            export declare const InsertDate;\r\n            export declare const UpdateUserId;\r\n            export declare const UpdateDateField;\r\n        }\r\n\r\n        ['PaymentOptionId', 'Days', 'Name', 'InsertUserId', 'InsertDate', 'UpdateUserId', 'UpdateDateField'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n\r\n","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export namespace PaymentOptionsService {\r\n        export const baseUrl = 'Administration/PaymentOptions';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<PaymentOptionsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Serenity.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<PaymentOptionsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<PaymentOptionsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<PaymentOptionsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>PaymentOptionsService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export class PaymentsDetailsForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Administration.PaymentsDetails';\r\n    }\r\n\r\n    export interface PaymentsDetailsForm {\r\n        BeneficiaryName: Serenity.StringEditor;\r\n        BankName: Serenity.StringEditor;\r\n        IbanBeneficient: Serenity.StringEditor;\r\n        TenantId: Serenity.IntegerEditor;\r\n        InsertUserId: Serenity.IntegerEditor;\r\n        InsertDate: Serenity.DateEditor;\r\n        UpdateUserId: Serenity.IntegerEditor;\r\n        UpdateDateField: Serenity.DateEditor;\r\n    }\r\n\r\n    [['BeneficiaryName', () => Serenity.StringEditor], ['BankName', () => Serenity.StringEditor], ['IbanBeneficient', () => Serenity.StringEditor], ['TenantId', () => Serenity.IntegerEditor], ['InsertUserId', () => Serenity.IntegerEditor], ['InsertDate', () => Serenity.DateEditor], ['UpdateUserId', () => Serenity.IntegerEditor], ['UpdateDateField', () => Serenity.DateEditor]].forEach(x => Object.defineProperty(PaymentsDetailsForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    export interface PaymentsDetailsRow {\r\n        PaymentDetailsId?: number;\r\n        BeneficiaryName?: string;\r\n        BankName?: string;\r\n        IbanBeneficient?: string;\r\n        TenantId?: number;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        UpdateUserId?: number;\r\n        UpdateDateField?: string;\r\n    }\r\n\r\n    export namespace PaymentsDetailsRow {\r\n        export const idProperty = 'PaymentDetailsId';\r\n        export const nameProperty = 'BeneficiaryName';\r\n        export const localTextPrefix = 'Administration.PaymentsDetails';\r\n\r\n        export namespace Fields {\r\n            export declare const PaymentDetailsId;\r\n            export declare const BeneficiaryName;\r\n            export declare const BankName;\r\n            export declare const IbanBeneficient;\r\n            export declare const TenantId;\r\n            export declare const InsertUserId;\r\n            export declare const InsertDate;\r\n            export declare const UpdateUserId;\r\n            export declare const UpdateDateField;\r\n        }\r\n\r\n        ['PaymentDetailsId', 'BeneficiaryName', 'BankName', 'IbanBeneficient', 'TenantId', 'InsertUserId', 'InsertDate', 'UpdateUserId', 'UpdateDateField'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n\r\n","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export namespace PaymentsDetailsService {\r\n        export const baseUrl = 'Administration/PaymentsDetails';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<PaymentsDetailsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Serenity.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<PaymentsDetailsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<PaymentsDetailsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<PaymentsDetailsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>PaymentsDetailsService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export class PaymentsForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Administration.Payments';\r\n    }\r\n\r\n    export interface PaymentsForm {\r\n        SubscriptionId: Serenity.IntegerEditor;\r\n        TenantId: Serenity.IntegerEditor;\r\n        PaymentDetailsId: Serenity.IntegerEditor;\r\n        PaymentOptionId: Serenity.IntegerEditor;\r\n        CurrencyId: Serenity.IntegerEditor;\r\n        Value: Serenity.DecimalEditor;\r\n        RoleBefore: Serenity.StringEditor;\r\n        RoleAfter: Serenity.StringEditor;\r\n        PaymentStatus: Serenity.IntegerEditor;\r\n        InsertUserId: Serenity.IntegerEditor;\r\n        InsertDate: Serenity.DateEditor;\r\n        UpdateUserId: Serenity.IntegerEditor;\r\n        UpdateDateField: Serenity.DateEditor;\r\n    }\r\n\r\n    [['SubscriptionId', () => Serenity.IntegerEditor], ['TenantId', () => Serenity.IntegerEditor], ['PaymentDetailsId', () => Serenity.IntegerEditor], ['PaymentOptionId', () => Serenity.IntegerEditor], ['CurrencyId', () => Serenity.IntegerEditor], ['Value', () => Serenity.DecimalEditor], ['RoleBefore', () => Serenity.StringEditor], ['RoleAfter', () => Serenity.StringEditor], ['PaymentStatus', () => Serenity.IntegerEditor], ['InsertUserId', () => Serenity.IntegerEditor], ['InsertDate', () => Serenity.DateEditor], ['UpdateUserId', () => Serenity.IntegerEditor], ['UpdateDateField', () => Serenity.DateEditor]].forEach(x => Object.defineProperty(PaymentsForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    export interface PaymentsRow {\r\n        PaymentId?: number;\r\n        SubscriptionId?: number;\r\n        TenantId?: number;\r\n        PaymentDetailsId?: number;\r\n        PaymentOptionId?: number;\r\n        CurrencyId?: number;\r\n        Value?: number;\r\n        RoleBefore?: string;\r\n        RoleAfter?: string;\r\n        PaymentStatus?: number;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        UpdateUserId?: number;\r\n        UpdateDateField?: string;\r\n        SubscriptionOfferId?: number;\r\n        SubscriptionTenantId?: number;\r\n        SubscriptionSubscriptionEndDate?: string;\r\n        SubscriptionInsertUserId?: number;\r\n        SubscriptionInsertDate?: string;\r\n        SubscriptionUpdateUserId?: number;\r\n        SubscriptionUpdateDateField?: string;\r\n        PaymentDetailsBeneficiaryName?: string;\r\n        PaymentDetailsBankName?: string;\r\n        PaymentDetailsIbanBeneficient?: string;\r\n        PaymentDetailsTenantId?: number;\r\n        PaymentDetailsInsertUserId?: number;\r\n        PaymentDetailsInsertDate?: string;\r\n        PaymentDetailsUpdateUserId?: number;\r\n        PaymentDetailsUpdateDateField?: string;\r\n        PaymentOptionDays?: number;\r\n        PaymentOptionName?: string;\r\n        PaymentOptionInsertUserId?: number;\r\n        PaymentOptionInsertDate?: string;\r\n        PaymentOptionUpdateUserId?: number;\r\n        PaymentOptionUpdateDateField?: string;\r\n        CurrencyCurrencyId?: string;\r\n        CurrencyName?: string;\r\n        CurrencyRate?: number;\r\n        CurrencyEnabled?: boolean;\r\n        CurrencyBaseCurrencyId?: number;\r\n        CurrencyUpdateUserId?: number;\r\n        CurrencyUpdateDateField?: string;\r\n    }\r\n\r\n    export namespace PaymentsRow {\r\n        export const idProperty = 'PaymentId';\r\n        export const nameProperty = 'RoleBefore';\r\n        export const localTextPrefix = 'Administration.Payments';\r\n\r\n        export namespace Fields {\r\n            export declare const PaymentId;\r\n            export declare const SubscriptionId;\r\n            export declare const TenantId;\r\n            export declare const PaymentDetailsId;\r\n            export declare const PaymentOptionId;\r\n            export declare const CurrencyId;\r\n            export declare const Value;\r\n            export declare const RoleBefore;\r\n            export declare const RoleAfter;\r\n            export declare const PaymentStatus;\r\n            export declare const InsertUserId;\r\n            export declare const InsertDate;\r\n            export declare const UpdateUserId;\r\n            export declare const UpdateDateField;\r\n            export declare const SubscriptionOfferId: string;\r\n            export declare const SubscriptionTenantId: string;\r\n            export declare const SubscriptionSubscriptionEndDate: string;\r\n            export declare const SubscriptionInsertUserId: string;\r\n            export declare const SubscriptionInsertDate: string;\r\n            export declare const SubscriptionUpdateUserId: string;\r\n            export declare const SubscriptionUpdateDateField: string;\r\n            export declare const PaymentDetailsBeneficiaryName: string;\r\n            export declare const PaymentDetailsBankName: string;\r\n            export declare const PaymentDetailsIbanBeneficient: string;\r\n            export declare const PaymentDetailsTenantId: string;\r\n            export declare const PaymentDetailsInsertUserId: string;\r\n            export declare const PaymentDetailsInsertDate: string;\r\n            export declare const PaymentDetailsUpdateUserId: string;\r\n            export declare const PaymentDetailsUpdateDateField: string;\r\n            export declare const PaymentOptionDays: string;\r\n            export declare const PaymentOptionName: string;\r\n            export declare const PaymentOptionInsertUserId: string;\r\n            export declare const PaymentOptionInsertDate: string;\r\n            export declare const PaymentOptionUpdateUserId: string;\r\n            export declare const PaymentOptionUpdateDateField: string;\r\n            export declare const CurrencyCurrencyId: string;\r\n            export declare const CurrencyName: string;\r\n            export declare const CurrencyRate: string;\r\n            export declare const CurrencyEnabled: string;\r\n            export declare const CurrencyBaseCurrencyId: string;\r\n            export declare const CurrencyUpdateUserId: string;\r\n            export declare const CurrencyUpdateDateField: string;\r\n        }\r\n\r\n        ['PaymentId', 'SubscriptionId', 'TenantId', 'PaymentDetailsId', 'PaymentOptionId', 'CurrencyId', 'Value', 'RoleBefore', 'RoleAfter', 'PaymentStatus', 'InsertUserId', 'InsertDate', 'UpdateUserId', 'UpdateDateField', 'SubscriptionOfferId', 'SubscriptionTenantId', 'SubscriptionSubscriptionEndDate', 'SubscriptionInsertUserId', 'SubscriptionInsertDate', 'SubscriptionUpdateUserId', 'SubscriptionUpdateDateField', 'PaymentDetailsBeneficiaryName', 'PaymentDetailsBankName', 'PaymentDetailsIbanBeneficient', 'PaymentDetailsTenantId', 'PaymentDetailsInsertUserId', 'PaymentDetailsInsertDate', 'PaymentDetailsUpdateUserId', 'PaymentDetailsUpdateDateField', 'PaymentOptionDays', 'PaymentOptionName', 'PaymentOptionInsertUserId', 'PaymentOptionInsertDate', 'PaymentOptionUpdateUserId', 'PaymentOptionUpdateDateField', 'CurrencyCurrencyId', 'CurrencyName', 'CurrencyRate', 'CurrencyEnabled', 'CurrencyBaseCurrencyId', 'CurrencyUpdateUserId', 'CurrencyUpdateDateField'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n\r\n","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export namespace PaymentsService {\r\n        export const baseUrl = 'Administration/Payments';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<PaymentsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Serenity.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<PaymentsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<PaymentsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<PaymentsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>PaymentsService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export class RoleForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Administration.Role';\r\n\r\n    }\r\n\r\n    export interface RoleForm {\r\n        RoleName: Serenity.StringEditor;\r\n    }\r\n\r\n    [['RoleName', () => Serenity.StringEditor]].forEach(x => Object.defineProperty(RoleForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface RolePermissionListRequest extends Serenity.ServiceRequest {\r\n        RoleID?: number;\r\n        Module?: string;\r\n        Submodule?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface RolePermissionListResponse extends Serenity.ListResponse<string> {\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface RolePermissionRow {\r\n        RolePermissionId?: number;\r\n        RoleId?: number;\r\n        PermissionKey?: string;\r\n        RoleRoleName?: string;\r\n    }\r\n\r\n    export namespace RolePermissionRow {\r\n        export const idProperty = 'RolePermissionId';\r\n        export const nameProperty = 'PermissionKey';\r\n        export const localTextPrefix = 'Administration.RolePermission';\r\n\r\n        export namespace Fields {\r\n            export declare const RolePermissionId: string;\r\n            export declare const RoleId: string;\r\n            export declare const PermissionKey: string;\r\n            export declare const RoleRoleName: string;\r\n        }\r\n\r\n        ['RolePermissionId', 'RoleId', 'PermissionKey', 'RoleRoleName'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export namespace RolePermissionService {\r\n        export const baseUrl = 'Administration/RolePermission';\r\n\r\n        export declare function Update(request: RolePermissionUpdateRequest, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: RolePermissionListRequest, onSuccess?: (response: RolePermissionListResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Update: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Update', 'List'].forEach(x => {\r\n            (<any>RolePermissionService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n\r\n","namespace PatientManagement.Administration {\r\n    export interface RolePermissionUpdateRequest extends Serenity.ServiceRequest {\r\n        RoleID?: number;\r\n        Module?: string;\r\n        Submodule?: string;\r\n        Permissions?: string[];\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface RoleRow {\r\n        RoleId?: number;\r\n        RoleName?: string;\r\n        TenantId?: number;\r\n    }\r\n\r\n    export namespace RoleRow {\r\n        export const idProperty = 'RoleId';\r\n        export const nameProperty = 'RoleName';\r\n        export const localTextPrefix = 'Administration.Role';\r\n        export const lookupKey = 'Administration.Role';\r\n\r\n        export function getLookup(): Q.Lookup<RoleRow> {\r\n            return Q.getLookup<RoleRow>('Administration.Role');\r\n        }\r\n\r\n        export namespace Fields {\r\n            export declare const RoleId: string;\r\n            export declare const RoleName: string;\r\n            export declare const TenantId: string;\r\n        }\r\n\r\n        ['RoleId', 'RoleName', 'TenantId'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export namespace RoleService {\r\n        export const baseUrl = 'Administration/Role';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<RoleRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<RoleRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<RoleRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<RoleRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>RoleService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n\r\n","namespace PatientManagement.Administration {\r\n    export interface SergenConnection {\r\n        Key?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface SergenGenerateOptions {\r\n        Row?: boolean;\r\n        Service?: boolean;\r\n        UI?: boolean;\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface SergenGenerateRequest extends Serenity.ServiceRequest {\r\n        ConnectionKey?: string;\r\n        Table?: SergenTable;\r\n        GenerateOptions?: SergenGenerateOptions;\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface SergenListTablesRequest extends Serenity.ServiceRequest {\r\n        ConnectionKey?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export namespace SergenService {\r\n        export const baseUrl = 'Administration/Sergen';\r\n\r\n        export declare function ListConnections(request: Serenity.ServiceRequest, onSuccess?: (response: Serenity.ListResponse<SergenConnection>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function ListTables(request: SergenListTablesRequest, onSuccess?: (response: Serenity.ListResponse<SergenTable>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Generate(request: SergenGenerateRequest, onSuccess?: (response: Serenity.ServiceResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const ListConnections: string;\r\n            export declare const ListTables: string;\r\n            export declare const Generate: string;\r\n        }\r\n\r\n        ['ListConnections', 'ListTables', 'Generate'].forEach(x => {\r\n            (<any>SergenService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface SergenTable {\r\n        Tablename?: string;\r\n        Identifier?: string;\r\n        Module?: string;\r\n        PermissionKey?: string;\r\n    }\r\n}\r\n","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export class SubscriptionsForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Administration.Subscriptions';\r\n    }\r\n\r\n    export interface SubscriptionsForm {\r\n        Name: Serenity.StringEditor;\r\n        OfferId: Serenity.IntegerEditor;\r\n        TenantId: Serenity.IntegerEditor;\r\n        SubscriptionEndDate: Serenity.DateEditor;\r\n        InsertUserId: Serenity.IntegerEditor;\r\n        InsertDate: Serenity.DateEditor;\r\n        UpdateUserId: Serenity.IntegerEditor;\r\n        UpdateDateField: Serenity.DateEditor;\r\n    }\r\n\r\n    [['Name', () => Serenity.StringEditor], ['OfferId', () => Serenity.IntegerEditor], ['TenantId', () => Serenity.IntegerEditor], ['SubscriptionEndDate', () => Serenity.DateEditor], ['InsertUserId', () => Serenity.IntegerEditor], ['InsertDate', () => Serenity.DateEditor], ['UpdateUserId', () => Serenity.IntegerEditor], ['UpdateDateField', () => Serenity.DateEditor]].forEach(x => Object.defineProperty(SubscriptionsForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    export interface SubscriptionsRow {\r\n        SubscriptionId?: number;\r\n        Name?: string;\r\n        OfferId?: number;\r\n        TenantId?: number;\r\n        SubscriptionEndDate?: string;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        UpdateUserId?: number;\r\n        UpdateDateField?: string;\r\n        OfferName?: string;\r\n        OfferMaximumSubscriptionTime?: number;\r\n        OfferMaximumUsersPerTenant?: number;\r\n        OfferMaximumVisitsPerTenant?: number;\r\n        OfferExpirationDate?: string;\r\n        OfferDescription?: string;\r\n        OfferPrice?: number;\r\n        OfferEnabled?: boolean;\r\n        OfferCurrencyId?: number;\r\n        OfferRoleId?: number;\r\n        OfferUpdateUserId?: number;\r\n        OfferUpdateDateField?: string;\r\n    }\r\n\r\n    export namespace SubscriptionsRow {\r\n        export const idProperty = 'SubscriptionId';\r\n        export const nameProperty = 'Name';\r\n        export const localTextPrefix = 'Administration.Subscriptions';\r\n\r\n        export namespace Fields {\r\n            export declare const SubscriptionId;\r\n            export declare const Name;\r\n            export declare const OfferId;\r\n            export declare const TenantId;\r\n            export declare const SubscriptionEndDate;\r\n            export declare const InsertUserId;\r\n            export declare const InsertDate;\r\n            export declare const UpdateUserId;\r\n            export declare const UpdateDateField;\r\n            export declare const OfferName: string;\r\n            export declare const OfferMaximumSubscriptionTime: string;\r\n            export declare const OfferMaximumUsersPerTenant: string;\r\n            export declare const OfferMaximumVisitsPerTenant: string;\r\n            export declare const OfferExpirationDate: string;\r\n            export declare const OfferDescription: string;\r\n            export declare const OfferPrice: string;\r\n            export declare const OfferEnabled: string;\r\n            export declare const OfferCurrencyId: string;\r\n            export declare const OfferRoleId: string;\r\n            export declare const OfferUpdateUserId: string;\r\n            export declare const OfferUpdateDateField: string;\r\n        }\r\n\r\n        ['SubscriptionId', 'Name', 'OfferId', 'TenantId', 'SubscriptionEndDate', 'InsertUserId', 'InsertDate', 'UpdateUserId', 'UpdateDateField', 'OfferName', 'OfferMaximumSubscriptionTime', 'OfferMaximumUsersPerTenant', 'OfferMaximumVisitsPerTenant', 'OfferExpirationDate', 'OfferDescription', 'OfferPrice', 'OfferEnabled', 'OfferCurrencyId', 'OfferRoleId', 'OfferUpdateUserId', 'OfferUpdateDateField'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n\r\n","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export namespace SubscriptionsService {\r\n        export const baseUrl = 'Administration/Subscriptions';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<SubscriptionsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Serenity.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<SubscriptionsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<SubscriptionsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<SubscriptionsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>SubscriptionsService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n}\r\n","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export class TenantForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Administration.Tenant';\r\n    }\r\n\r\n    export interface TenantForm {\r\n        TenantName: Serenity.StringEditor;\r\n        CurrencyId: Serenity.IntegerEditor;\r\n        SubscriptionRequired: Serenity.BooleanEditor;\r\n        SubscriptionId: Serenity.IntegerEditor;\r\n    }\r\n\r\n    [['TenantName', () => Serenity.StringEditor], ['CurrencyId', () => Serenity.IntegerEditor], ['SubscriptionRequired', () => Serenity.BooleanEditor], ['SubscriptionId', () => Serenity.IntegerEditor]].forEach(x => Object.defineProperty(TenantForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    export interface TenantRow {\r\n        TenantId?: number;\r\n        TenantName?: string;\r\n        CurrencyId?: number;\r\n        SubscriptionRequired?: boolean;\r\n        SubscriptionId?: number;\r\n        SubscriptionOfferId?: number;\r\n        SubscriptionTenantId?: number;\r\n        SubscriptionSubscriptionEndDate?: string;\r\n        SubscriptionInsertUserId?: number;\r\n        SubscriptionInsertDate?: string;\r\n        SubscriptionUpdateUserId?: number;\r\n        SubscriptionUpdateDateField?: string;\r\n    }\r\n\r\n    export namespace TenantRow {\r\n        export const idProperty = 'TenantId';\r\n        export const nameProperty = 'TenantName';\r\n        export const localTextPrefix = 'Administration.Tenant';\r\n\r\n        export namespace Fields {\r\n            export declare const TenantId;\r\n            export declare const TenantName;\r\n            export declare const CurrencyId;\r\n            export declare const SubscriptionRequired;\r\n            export declare const SubscriptionId;\r\n            export declare const SubscriptionOfferId: string;\r\n            export declare const SubscriptionTenantId: string;\r\n            export declare const SubscriptionSubscriptionEndDate: string;\r\n            export declare const SubscriptionInsertUserId: string;\r\n            export declare const SubscriptionInsertDate: string;\r\n            export declare const SubscriptionUpdateUserId: string;\r\n            export declare const SubscriptionUpdateDateField: string;\r\n        }\r\n\r\n        ['TenantId', 'TenantName', 'CurrencyId', 'SubscriptionRequired', 'SubscriptionId', 'SubscriptionOfferId', 'SubscriptionTenantId', 'SubscriptionSubscriptionEndDate', 'SubscriptionInsertUserId', 'SubscriptionInsertDate', 'SubscriptionUpdateUserId', 'SubscriptionUpdateDateField'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n\r\n","\r\n\r\nnamespace PatientManagement.Administration {\r\n    export namespace TenantService {\r\n        export const baseUrl = 'Administration/Tenant';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<TenantRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Serenity.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<TenantRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<TenantRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<TenantRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>TenantService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n    export interface TranslationItem {\r\n        Key?: string;\r\n        SourceText?: string;\r\n        TargetText?: string;\r\n        CustomText?: string;\r\n    }\r\n}\r\n\r\n","namespace PatientManagement.Administration {\r\n    export interface TranslationListRequest extends Serenity.ListRequest {\r\n        SourceLanguageID?: string;\r\n        TargetLanguageID?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export namespace TranslationService {\r\n        export const baseUrl = 'Administration/Translation';\r\n\r\n        export declare function List(request: TranslationListRequest, onSuccess?: (response: Serenity.ListResponse<TranslationItem>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: TranslationUpdateRequest, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const List: string;\r\n            export declare const Update: string;\r\n        }\r\n\r\n        ['List', 'Update'].forEach(x => {\r\n            (<any>TranslationService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n\r\n","namespace PatientManagement.Administration {\r\n    export interface TranslationUpdateRequest extends Serenity.ServiceRequest {\r\n        TargetLanguageID?: string;\r\n        Translations?: { [key: string]: string };\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export class UserForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Administration.User';\r\n\r\n    }\r\n\r\n    export interface UserForm {\r\n        Username: Serenity.StringEditor;\r\n        DisplayName: Serenity.StringEditor;\r\n        Email: Serenity.EmailEditor;\r\n        UserImage: Serenity.ImageUploadEditor;\r\n        Password: Serenity.PasswordEditor;\r\n        PasswordConfirm: Serenity.PasswordEditor;\r\n        Source: Serenity.StringEditor;\r\n        TenantId: Serenity.LookupEditor;\r\n    }\r\n\r\n    [['Username', () => Serenity.StringEditor], ['DisplayName', () => Serenity.StringEditor], ['Email', () => Serenity.EmailEditor], ['UserImage', () => Serenity.ImageUploadEditor], ['Password', () => Serenity.PasswordEditor], ['PasswordConfirm', () => Serenity.PasswordEditor], ['Source', () => Serenity.StringEditor], ['TenantId', () => Serenity.LookupEditor]].forEach(x => Object.defineProperty(UserForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface UserPermissionListRequest extends Serenity.ServiceRequest {\r\n        UserID?: number;\r\n        Module?: string;\r\n        Submodule?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface UserPermissionRow {\r\n        UserPermissionId?: number;\r\n        UserId?: number;\r\n        PermissionKey?: string;\r\n        Granted?: boolean;\r\n        Username?: string;\r\n        User?: string;\r\n    }\r\n\r\n    export namespace UserPermissionRow {\r\n        export const idProperty = 'UserPermissionId';\r\n        export const nameProperty = 'PermissionKey';\r\n        export const localTextPrefix = 'Administration.UserPermission';\r\n\r\n        export namespace Fields {\r\n            export declare const UserPermissionId: string;\r\n            export declare const UserId: string;\r\n            export declare const PermissionKey: string;\r\n            export declare const Granted: string;\r\n            export declare const Username: string;\r\n            export declare const User: string;\r\n        }\r\n\r\n        ['UserPermissionId', 'UserId', 'PermissionKey', 'Granted', 'Username', 'User'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export namespace UserPermissionService {\r\n        export const baseUrl = 'Administration/UserPermission';\r\n\r\n        export declare function Update(request: UserPermissionUpdateRequest, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: UserPermissionListRequest, onSuccess?: (response: Serenity.ListResponse<UserPermissionRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function ListRolePermissions(request: UserPermissionListRequest, onSuccess?: (response: Serenity.ListResponse<string>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function ListPermissionKeys(request: Serenity.ServiceRequest, onSuccess?: (response: Serenity.ListResponse<string>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Update: string;\r\n            export declare const List: string;\r\n            export declare const ListRolePermissions: string;\r\n            export declare const ListPermissionKeys: string;\r\n        }\r\n\r\n        ['Update', 'List', 'ListRolePermissions', 'ListPermissionKeys'].forEach(x => {\r\n            (<any>UserPermissionService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n\r\n","namespace PatientManagement.Administration {\r\n    export interface UserPermissionUpdateRequest extends Serenity.ServiceRequest {\r\n        UserID?: number;\r\n        Module?: string;\r\n        Submodule?: string;\r\n        Permissions?: UserPermissionRow[];\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface UserRoleListRequest extends Serenity.ServiceRequest {\r\n        UserID?: number;\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface UserRoleListResponse extends Serenity.ListResponse<number> {\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface UserRoleRow {\r\n        UserRoleId?: number;\r\n        UserId?: number;\r\n        RoleId?: number;\r\n        Username?: string;\r\n        User?: string;\r\n    }\r\n\r\n    export namespace UserRoleRow {\r\n        export const idProperty = 'UserRoleId';\r\n        export const localTextPrefix = 'Administration.UserRole';\r\n\r\n        export namespace Fields {\r\n            export declare const UserRoleId: string;\r\n            export declare const UserId: string;\r\n            export declare const RoleId: string;\r\n            export declare const Username: string;\r\n            export declare const User: string;\r\n        }\r\n\r\n        ['UserRoleId', 'UserId', 'RoleId', 'Username', 'User'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export namespace UserRoleService {\r\n        export const baseUrl = 'Administration/UserRole';\r\n\r\n        export declare function Update(request: UserRoleUpdateRequest, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: UserRoleListRequest, onSuccess?: (response: UserRoleListResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Update: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Update', 'List'].forEach(x => {\r\n            (<any>UserRoleService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n\r\n","namespace PatientManagement.Administration {\r\n    export interface UserRoleUpdateRequest extends Serenity.ServiceRequest {\r\n        UserID?: number;\r\n        Roles?: number[];\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export interface UserRow {\r\n        UserId?: number;\r\n        Username?: string;\r\n        Source?: string;\r\n        PasswordHash?: string;\r\n        PasswordSalt?: string;\r\n        DisplayName?: string;\r\n        Email?: string;\r\n        UserImage?: string;\r\n        LastDirectoryUpdate?: string;\r\n        IsActive?: number;\r\n        Password?: string;\r\n        PasswordConfirm?: string;\r\n        TenantId?: number;\r\n        TenantName?: string;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        UpdateUserId?: number;\r\n        UpdateDate?: string;\r\n    }\r\n\r\n    export namespace UserRow {\r\n        export const idProperty = 'UserId';\r\n        export const isActiveProperty = 'IsActive';\r\n        export const nameProperty = 'Username';\r\n        export const localTextPrefix = 'Administration.User';\r\n        export const lookupKey = 'Administration.User';\r\n\r\n        export function getLookup(): Q.Lookup<UserRow> {\r\n            return Q.getLookup<UserRow>('Administration.User');\r\n        }\r\n\r\n        export namespace Fields {\r\n            export declare const UserId: string;\r\n            export declare const Username: string;\r\n            export declare const Source: string;\r\n            export declare const PasswordHash: string;\r\n            export declare const PasswordSalt: string;\r\n            export declare const DisplayName: string;\r\n            export declare const Email: string;\r\n            export declare const UserImage: string;\r\n            export declare const LastDirectoryUpdate: string;\r\n            export declare const IsActive: string;\r\n            export declare const Password: string;\r\n            export declare const PasswordConfirm: string;\r\n            export declare const TenantId: string;\r\n            export declare const TenantName: string;\r\n            export declare const InsertUserId: string;\r\n            export declare const InsertDate: string;\r\n            export declare const UpdateUserId: string;\r\n            export declare const UpdateDate: string;\r\n        }\r\n\r\n        ['UserId', 'Username', 'Source', 'PasswordHash', 'PasswordSalt', 'DisplayName', 'Email', 'UserImage', 'LastDirectoryUpdate', 'IsActive', 'Password', 'PasswordConfirm', 'TenantId', 'TenantName', 'InsertUserId', 'InsertDate', 'UpdateUserId', 'UpdateDate'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.Administration {\r\n    export namespace UserService {\r\n        export const baseUrl = 'Administration/User';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<UserRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<UserRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Undelete(request: Serenity.UndeleteRequest, onSuccess?: (response: Serenity.UndeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<UserRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<UserRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Undelete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Undelete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>UserService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n\r\n","namespace PatientManagement.Common.Pages {\r\n    export interface UploadResponse extends Serenity.ServiceResponse {\r\n        TemporaryFile?: string;\r\n        Size?: number;\r\n        IsImage?: boolean;\r\n        Width?: number;\r\n        Height?: number;\r\n    }\r\n}\r\n","namespace PatientManagement.Common {\r\n    export interface UserPreferenceRetrieveRequest extends Serenity.ServiceRequest {\r\n        PreferenceType?: string;\r\n        Name?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Common {\r\n    export interface UserPreferenceRetrieveResponse extends Serenity.ServiceResponse {\r\n        Value?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Common {\r\n    export interface UserPreferenceRow {\r\n        UserPreferenceId?: number;\r\n        UserId?: number;\r\n        PreferenceType?: string;\r\n        Name?: string;\r\n        Value?: string;\r\n    }\r\n\r\n    export namespace UserPreferenceRow {\r\n        export const idProperty = 'UserPreferenceId';\r\n        export const nameProperty = 'Name';\r\n        export const localTextPrefix = 'Common.UserPreference';\r\n\r\n        export namespace Fields {\r\n            export declare const UserPreferenceId: string;\r\n            export declare const UserId: string;\r\n            export declare const PreferenceType: string;\r\n            export declare const Name: string;\r\n            export declare const Value: string;\r\n        }\r\n\r\n        ['UserPreferenceId', 'UserId', 'PreferenceType', 'Name', 'Value'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.Common {\r\n    export namespace UserPreferenceService {\r\n        export const baseUrl = 'Common/UserPreference';\r\n\r\n        export declare function Update(request: UserPreferenceUpdateRequest, onSuccess?: (response: Serenity.ServiceResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: UserPreferenceRetrieveRequest, onSuccess?: (response: UserPreferenceRetrieveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Update: string;\r\n            export declare const Retrieve: string;\r\n        }\r\n\r\n        ['Update', 'Retrieve'].forEach(x => {\r\n            (<any>UserPreferenceService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n\r\n","namespace PatientManagement.Common {\r\n    export interface UserPreferenceUpdateRequest extends Serenity.ServiceRequest {\r\n        PreferenceType?: string;\r\n        Name?: string;\r\n        Value?: string;\r\n    }\r\n}\r\n","namespace PatientManagement {\r\n    export interface ExcelImportRequest extends Serenity.ServiceRequest {\r\n        FileName?: string;\r\n    }\r\n}\r\n","namespace PatientManagement {\r\n    export interface ExcelImportResponse extends Serenity.ServiceResponse {\r\n        Inserted?: number;\r\n        Updated?: number;\r\n        ErrorList?: string[];\r\n    }\r\n}\r\n","namespace PatientManagement {\r\n    export interface GetNextNumberRequest extends Serenity.ServiceRequest {\r\n        Prefix?: string;\r\n        Length?: number;\r\n    }\r\n}\r\n","namespace PatientManagement {\r\n    export interface GetNextNumberResponse extends Serenity.ServiceResponse {\r\n        Number?: number;\r\n        Serial?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Membership {\r\n    export class ChangePasswordForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Membership.ChangePassword';\r\n\r\n    }\r\n\r\n    export interface ChangePasswordForm {\r\n        OldPassword: Serenity.PasswordEditor;\r\n        NewPassword: Serenity.PasswordEditor;\r\n        ConfirmPassword: Serenity.PasswordEditor;\r\n    }\r\n\r\n    [['OldPassword', () => Serenity.PasswordEditor], ['NewPassword', () => Serenity.PasswordEditor], ['ConfirmPassword', () => Serenity.PasswordEditor]].forEach(x => Object.defineProperty(ChangePasswordForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.Membership {\r\n    export interface ChangePasswordRequest extends Serenity.ServiceRequest {\r\n        OldPassword?: string;\r\n        NewPassword?: string;\r\n        ConfirmPassword?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Membership {\r\n    export class ForgotPasswordForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Membership.ForgotPassword';\r\n\r\n    }\r\n\r\n    export interface ForgotPasswordForm {\r\n        Email: Serenity.EmailEditor;\r\n    }\r\n\r\n    [['Email', () => Serenity.EmailEditor]].forEach(x => Object.defineProperty(ForgotPasswordForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.Membership {\r\n    export interface ForgotPasswordRequest extends Serenity.ServiceRequest {\r\n        Email?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Membership {\r\n    export class LoginForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Membership.Login';\r\n\r\n    }\r\n\r\n    export interface LoginForm {\r\n        Username: Serenity.StringEditor;\r\n        Password: Serenity.PasswordEditor;\r\n    }\r\n\r\n    [['Username', () => Serenity.StringEditor], ['Password', () => Serenity.PasswordEditor]].forEach(x => Object.defineProperty(LoginForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.Membership {\r\n    export interface LoginRequest extends Serenity.ServiceRequest {\r\n        Username?: string;\r\n        Password?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Membership {\r\n    export class ResetPasswordForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Membership.ResetPassword';\r\n\r\n    }\r\n\r\n    export interface ResetPasswordForm {\r\n        NewPassword: Serenity.PasswordEditor;\r\n        ConfirmPassword: Serenity.PasswordEditor;\r\n    }\r\n\r\n    [['NewPassword', () => Serenity.PasswordEditor], ['ConfirmPassword', () => Serenity.PasswordEditor]].forEach(x => Object.defineProperty(ResetPasswordForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.Membership {\r\n    export interface ResetPasswordRequest extends Serenity.ServiceRequest {\r\n        Token?: string;\r\n        NewPassword?: string;\r\n        ConfirmPassword?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Membership {\r\n    export class SignUpForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Membership.SignUp';\r\n\r\n    }\r\n\r\n    export interface SignUpForm {\r\n        DisplayName: Serenity.StringEditor;\r\n        Email: Serenity.EmailEditor;\r\n        ConfirmEmail: Serenity.EmailEditor;\r\n        Password: Serenity.PasswordEditor;\r\n        ConfirmPassword: Serenity.PasswordEditor;\r\n    }\r\n\r\n    [['DisplayName', () => Serenity.StringEditor], ['Email', () => Serenity.EmailEditor], ['ConfirmEmail', () => Serenity.EmailEditor], ['Password', () => Serenity.PasswordEditor], ['ConfirmPassword', () => Serenity.PasswordEditor]].forEach(x => Object.defineProperty(SignUpForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.Membership {\r\n    export interface SignUpRequest extends Serenity.ServiceRequest {\r\n        DisplayName?: string;\r\n        Email?: string;\r\n        Password?: string;\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export class ActivityForm extends Serenity.PrefixedContext {\r\n        static formKey = 'PatientManagement.Activity';\r\n\r\n    }\r\n\r\n    export interface ActivityForm {\r\n        MovementAndTraining: Serenity.TextAreaEditor;\r\n        Profession: Serenity.TextAreaEditor;\r\n    }\r\n\r\n    [['MovementAndTraining', () => Serenity.TextAreaEditor], ['Profession', () => Serenity.TextAreaEditor]].forEach(x => Object.defineProperty(ActivityForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export interface ActivityRow {\r\n        PatientId?: number;\r\n        MovementAndTraining?: string;\r\n        Profession?: string;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n    }\r\n\r\n    export namespace ActivityRow {\r\n        export const idProperty = 'PatientId';\r\n        export const nameProperty = 'MovementAndTraining';\r\n        export const localTextPrefix = 'PatientManagement.Activity';\r\n        export const lookupKey = 'PatientManagement.LifeStyles';\r\n\r\n        export function getLookup(): Q.Lookup<ActivityRow> {\r\n            return Q.getLookup<ActivityRow>('PatientManagement.LifeStyles');\r\n        }\r\n\r\n        export namespace Fields {\r\n            export declare const PatientId: string;\r\n            export declare const MovementAndTraining: string;\r\n            export declare const Profession: string;\r\n            export declare const InsertUserId: string;\r\n            export declare const InsertDate: string;\r\n        }\r\n\r\n        ['PatientId', 'MovementAndTraining', 'Profession', 'InsertUserId', 'InsertDate'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export namespace ActivityService {\r\n        export const baseUrl = 'PatientManagement/Activity';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<ActivityRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<ActivityRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<ActivityRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<ActivityRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>ActivityService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export enum Gender {\r\n        Male = 1,\r\n        Female = 2\r\n    }\r\n    Serenity.Decorators.registerEnum(Gender, 'PatientManagement.PatientManagement.Entities.Gender');\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export class LifeStylesForm extends Serenity.PrefixedContext {\r\n        static formKey = 'PatientManagement.LifeStyles';\r\n\r\n    }\r\n\r\n    export interface LifeStylesForm {\r\n        PatientId: Serenity.LookupEditor;\r\n        BadHabits: Serenity.TextAreaEditor;\r\n        RemarksForFoodTake: Serenity.TextAreaEditor;\r\n        Regime: Serenity.TextAreaEditor;\r\n        DailyMeals: Serenity.TextAreaEditor;\r\n        FavoriteFood: Serenity.TextAreaEditor;\r\n        NotEating: Serenity.TextAreaEditor;\r\n    }\r\n\r\n    [['PatientId', () => Serenity.LookupEditor], ['BadHabits', () => Serenity.TextAreaEditor], ['RemarksForFoodTake', () => Serenity.TextAreaEditor], ['Regime', () => Serenity.TextAreaEditor], ['DailyMeals', () => Serenity.TextAreaEditor], ['FavoriteFood', () => Serenity.TextAreaEditor], ['NotEating', () => Serenity.TextAreaEditor]].forEach(x => Object.defineProperty(LifeStylesForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export interface LifeStylesRow {\r\n        PatientId?: number;\r\n        RemarksForFoodTake?: string;\r\n        Regime?: string;\r\n        DailyMeals?: string;\r\n        FavoriteFood?: string;\r\n        NotEating?: string;\r\n        BadHabits?: string;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        PatientName?: string;\r\n        TenantId?: number;\r\n    }\r\n\r\n    export namespace LifeStylesRow {\r\n        export const idProperty = 'PatientId';\r\n        export const nameProperty = 'Regime';\r\n        export const localTextPrefix = 'PatientManagement.LifeStyles';\r\n        export const lookupKey = 'PatientManagement.LifeStyles';\r\n\r\n        export function getLookup(): Q.Lookup<LifeStylesRow> {\r\n            return Q.getLookup<LifeStylesRow>('PatientManagement.LifeStyles');\r\n        }\r\n\r\n        export namespace Fields {\r\n            export declare const PatientId: string;\r\n            export declare const RemarksForFoodTake: string;\r\n            export declare const Regime: string;\r\n            export declare const DailyMeals: string;\r\n            export declare const FavoriteFood: string;\r\n            export declare const NotEating: string;\r\n            export declare const BadHabits: string;\r\n            export declare const InsertUserId: string;\r\n            export declare const InsertDate: string;\r\n            export declare const PatientName: string;\r\n            export declare const TenantId: string;\r\n        }\r\n\r\n        ['PatientId', 'RemarksForFoodTake', 'Regime', 'DailyMeals', 'FavoriteFood', 'NotEating', 'BadHabits', 'InsertUserId', 'InsertDate', 'PatientName', 'TenantId'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export namespace LifeStylesService {\r\n        export const baseUrl = 'PatientManagement/LifeStyles';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<LifeStylesRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<LifeStylesRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<LifeStylesRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<LifeStylesRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>LifeStylesService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export interface NotesRow {\r\n        NoteId?: number;\r\n        EntityType?: string;\r\n        EntityId?: number;\r\n        Text?: string;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        InsertUserDisplayName?: string;\r\n    }\r\n\r\n    export namespace NotesRow {\r\n        export const idProperty = 'NoteId';\r\n        export const nameProperty = 'EntityType';\r\n        export const localTextPrefix = 'PatientManagement.Notes';\r\n\r\n        export namespace Fields {\r\n            export declare const NoteId: string;\r\n            export declare const EntityType: string;\r\n            export declare const EntityId: string;\r\n            export declare const Text: string;\r\n            export declare const InsertUserId: string;\r\n            export declare const InsertDate: string;\r\n            export declare const InsertUserDisplayName: string;\r\n        }\r\n\r\n        ['NoteId', 'EntityType', 'EntityId', 'Text', 'InsertUserId', 'InsertDate', 'InsertUserDisplayName'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n    export class NotificationsForm extends Serenity.PrefixedContext {\r\n        static formKey = 'PatientManagement.Notifications';\r\n    }\r\n\r\n    export interface NotificationsForm {\r\n        EntityType: Serenity.StringEditor;\r\n        EntityId: Serenity.IntegerEditor;\r\n        Text: Serenity.StringEditor;\r\n        InsertUserId: Serenity.IntegerEditor;\r\n        InsertDate: Serenity.DateEditor;\r\n    }\r\n\r\n    [['EntityType', () => Serenity.StringEditor], ['EntityId', () => Serenity.IntegerEditor], ['Text', () => Serenity.StringEditor], ['InsertUserId', () => Serenity.IntegerEditor], ['InsertDate', () => Serenity.DateEditor]].forEach(x => Object.defineProperty(NotificationsForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n    export interface NotificationsRow {\r\n        NotificationId?: number;\r\n        EntityType?: string;\r\n        EntityId?: number;\r\n        Text?: string;\r\n        InsertUserId?: number;\r\n        InsertUserDisplayName?: string;\r\n        InsertUserPicture?: string;\r\n        InsertDate?: string;\r\n        InsertDateFormated?: string;\r\n    }\r\n\r\n    export namespace NotificationsRow {\r\n        export const idProperty = 'NotificationId';\r\n        export const nameProperty = 'EntityType';\r\n        export const localTextPrefix = 'PatientManagement.Notifications';\r\n\r\n        export namespace Fields {\r\n            export declare const NotificationId;\r\n            export declare const EntityType;\r\n            export declare const EntityId;\r\n            export declare const Text;\r\n            export declare const InsertUserId;\r\n            export declare const InsertUserDisplayName;\r\n            export declare const InsertUserPicture;\r\n            export declare const InsertDate;\r\n            export declare const InsertDateFormated;\r\n        }\r\n\r\n        ['NotificationId', 'EntityType', 'EntityId', 'Text', 'InsertUserId', 'InsertUserDisplayName', 'InsertUserPicture', 'InsertDate', 'InsertDateFormated'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n\r\n","\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n    export namespace NotificationsService {\r\n        export const baseUrl = 'PatientManagement/Notifications';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<NotificationsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Serenity.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<NotificationsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<NotificationsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<NotificationsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function ListForDropdown(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<NotificationsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function CountNotifications(request: Serenity.ListRequest, onSuccess?: (response: number) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n            export declare const ListForDropdown: string;\r\n            export declare const CountNotifications: number;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List', 'CountNotifications', 'ListForDropdown'].forEach(x => {\r\n            (<any>NotificationsService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}","namespace PatientManagement.PatientManagement {\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export class PatientHealthForm extends Serenity.PrefixedContext {\r\n        static formKey = 'PatientManagement.PatientHealth';\r\n\r\n    }\r\n\r\n    export interface PatientHealthForm {\r\n        PatientId: Serenity.LookupEditor;\r\n        Diseases: Serenity.TextAreaEditor;\r\n        MedicinesIntake: Serenity.TextAreaEditor;\r\n    }\r\n\r\n    [['PatientId', () => Serenity.LookupEditor], ['Diseases', () => Serenity.TextAreaEditor], ['MedicinesIntake', () => Serenity.TextAreaEditor]].forEach(x => Object.defineProperty(PatientHealthForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export interface PatientHealthRow {\r\n        PatientId?: number;\r\n        Diseases?: string;\r\n        MedicinesIntake?: string;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        PatientName?: string;\r\n        TenantId?: number;\r\n    }\r\n\r\n    export namespace PatientHealthRow {\r\n        export const idProperty = 'PatientId';\r\n        export const nameProperty = 'Diseases';\r\n        export const localTextPrefix = 'PatientManagement.PatientHealth';\r\n        export const lookupKey = 'PatientManagement.PatientHealth';\r\n\r\n        export function getLookup(): Q.Lookup<PatientHealthRow> {\r\n            return Q.getLookup<PatientHealthRow>('PatientManagement.PatientHealth');\r\n        }\r\n\r\n        export namespace Fields {\r\n            export declare const PatientId: string;\r\n            export declare const Diseases: string;\r\n            export declare const MedicinesIntake: string;\r\n            export declare const InsertUserId: string;\r\n            export declare const InsertDate: string;\r\n            export declare const PatientName: string;\r\n            export declare const TenantId: string;\r\n        }\r\n\r\n        ['PatientId', 'Diseases', 'MedicinesIntake', 'InsertUserId', 'InsertDate', 'PatientName', 'TenantId'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export namespace PatientHealthService {\r\n        export const baseUrl = 'PatientManagement/PatientHealth';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<PatientHealthRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<PatientHealthRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<PatientHealthRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<PatientHealthRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>PatientHealthService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export class PatientsFileUploadsForm extends Serenity.PrefixedContext {\r\n        static formKey = 'PatientManagement.PatientsFileUploads';\r\n\r\n    }\r\n\r\n    export interface PatientsFileUploadsForm {\r\n        PatientId: Serenity.LookupEditor;\r\n        Description: Serenity.TextAreaEditor;\r\n        FilePath: Serenity.MultipleImageUploadEditor;\r\n    }\r\n\r\n    [['PatientId', () => Serenity.LookupEditor], ['Description', () => Serenity.TextAreaEditor], ['FilePath', () => Serenity.MultipleImageUploadEditor]].forEach(x => Object.defineProperty(PatientsFileUploadsForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export interface PatientsFileUploadsRow {\r\n        PatientFileUploadId?: number;\r\n        PatientId?: number;\r\n        FilePath?: string;\r\n        Description?: string;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        PatientName?: string;\r\n        TenantId?: number;\r\n    }\r\n\r\n    export namespace PatientsFileUploadsRow {\r\n        export const idProperty = 'PatientFileUploadId';\r\n        export const nameProperty = 'FilePath';\r\n        export const localTextPrefix = 'PatientManagement.PatientsFileUploads';\r\n        export const lookupKey = 'PatientManagement.PatientsFileUploads';\r\n\r\n        export function getLookup(): Q.Lookup<PatientsFileUploadsRow> {\r\n            return Q.getLookup<PatientsFileUploadsRow>('PatientManagement.PatientsFileUploads');\r\n        }\r\n\r\n        export namespace Fields {\r\n            export declare const PatientFileUploadId: string;\r\n            export declare const PatientId: string;\r\n            export declare const FilePath: string;\r\n            export declare const Description: string;\r\n            export declare const InsertUserId: string;\r\n            export declare const InsertDate: string;\r\n            export declare const PatientName: string;\r\n            export declare const TenantId: string;\r\n        }\r\n\r\n        ['PatientFileUploadId', 'PatientId', 'FilePath', 'Description', 'InsertUserId', 'InsertDate', 'PatientName', 'TenantId'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export namespace PatientsFileUploadsService {\r\n        export const baseUrl = 'PatientManagement/PatientsFileUploads';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<PatientsFileUploadsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<PatientsFileUploadsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<PatientsFileUploadsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<PatientsFileUploadsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>PatientsFileUploadsService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export class PatientsForm extends Serenity.PrefixedContext {\r\n        static formKey = 'PatientManagement.Patients';\r\n\r\n    }\r\n\r\n    export interface PatientsForm {\r\n        PatientId: Serenity.IntegerEditor;\r\n        Name: Serenity.StringEditor;\r\n        Gender: Serenity.EnumEditor;\r\n        PersonalNumber: Serenity.StringEditor;\r\n        PhoneNumber: Serenity.StringEditor;\r\n        FirstRegistrationDate: Serenity.DateTimeEditor;\r\n        Address: Serenity.StringEditor;\r\n        Height: Serenity.IntegerEditor;\r\n        Weight: Serenity.IntegerEditor;\r\n        WantedWeight: Serenity.StringEditor;\r\n        NoteList: NotesEditor;\r\n    }\r\n\r\n    [['PatientId', () => Serenity.IntegerEditor], ['Name', () => Serenity.StringEditor], ['Gender', () => Serenity.EnumEditor], ['PersonalNumber', () => Serenity.StringEditor], ['PhoneNumber', () => Serenity.StringEditor], ['FirstRegistrationDate', () => Serenity.DateTimeEditor], ['Address', () => Serenity.StringEditor], ['Height', () => Serenity.IntegerEditor], ['Weight', () => Serenity.IntegerEditor], ['WantedWeight', () => Serenity.StringEditor], ['NoteList', () => NotesEditor]].forEach(x => Object.defineProperty(PatientsForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export interface PatientsRow {\r\n        PatientId?: number;\r\n        Name?: string;\r\n        PersonalNumber?: number;\r\n        PhoneNumber?: string;\r\n        Gender?: Gender;\r\n        FirstRegistrationDate?: string;\r\n        Address?: string;\r\n        Height?: number;\r\n        Weight?: number;\r\n        WantedWeight?: string;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        NoteList?: NotesRow[];\r\n        TenantId?: number;\r\n    }\r\n\r\n    export namespace PatientsRow {\r\n        export const idProperty = 'PatientId';\r\n        export const nameProperty = 'Name';\r\n        export const localTextPrefix = 'PatientManagement.Patients';\r\n        export const lookupKey = 'PatientManagement.Patients';\r\n\r\n        export function getLookup(): Q.Lookup<PatientsRow> {\r\n            return Q.getLookup<PatientsRow>('PatientManagement.Patients');\r\n        }\r\n\r\n        export namespace Fields {\r\n            export declare const PatientId: string;\r\n            export declare const Name: string;\r\n            export declare const PersonalNumber: string;\r\n            export declare const PhoneNumber: string;\r\n            export declare const Gender: string;\r\n            export declare const FirstRegistrationDate: string;\r\n            export declare const Address: string;\r\n            export declare const Height: string;\r\n            export declare const Weight: string;\r\n            export declare const WantedWeight: string;\r\n            export declare const InsertUserId: string;\r\n            export declare const InsertDate: string;\r\n            export declare const NoteList: string;\r\n            export declare const TenantId: string;\r\n        }\r\n\r\n        ['PatientId', 'Name', 'PersonalNumber', 'PhoneNumber', 'Gender', 'FirstRegistrationDate', 'Address', 'Height', 'Weight', 'WantedWeight', 'InsertUserId', 'InsertDate', 'NoteList', 'TenantId'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export namespace PatientsService {\r\n        export const baseUrl = 'PatientManagement/Patients';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<PatientsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<PatientsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<PatientsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<PatientsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>PatientsService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n","\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n    export class UserNotificationsForm extends Serenity.PrefixedContext {\r\n        static formKey = 'PatientManagement.UserNotifications';\r\n    }\r\n\r\n    export interface UserNotificationsForm {\r\n        NotificationId: Serenity.IntegerEditor;\r\n        SeenAt: Serenity.DateEditor;\r\n        UserId: Serenity.IntegerEditor;\r\n    }\r\n\r\n    [['NotificationId', () => Serenity.IntegerEditor], ['SeenAt', () => Serenity.DateEditor], ['UserId', () => Serenity.IntegerEditor]].forEach(x => Object.defineProperty(UserNotificationsForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n    export interface UserNotificationsRow {\r\n        UserNotificationId?: number;\r\n        NotificationId?: number;\r\n        SeenAt?: string;\r\n        UserId?: number;\r\n        NotificationEntityType?: string;\r\n        NotificationEntityId?: number;\r\n        NotificationText?: string;\r\n        NotificationInsertUserId?: number;\r\n        NotificationInsertDate?: string;\r\n        NotificationTenantId?: number;\r\n    }\r\n\r\n    export namespace UserNotificationsRow {\r\n        export const idProperty = 'UserNotificationId';\r\n        export const localTextPrefix = 'PatientManagement.UserNotifications';\r\n\r\n        export namespace Fields {\r\n            export declare const UserNotificationId;\r\n            export declare const NotificationId;\r\n            export declare const SeenAt;\r\n            export declare const UserId;\r\n            export declare const NotificationEntityType: string;\r\n            export declare const NotificationEntityId: string;\r\n            export declare const NotificationText: string;\r\n            export declare const NotificationInsertUserId: string;\r\n            export declare const NotificationInsertDate: string;\r\n            export declare const NotificationTenantId: string;\r\n        }\r\n\r\n        ['UserNotificationId', 'NotificationId', 'SeenAt', 'UserId', 'NotificationEntityType', 'NotificationEntityId', 'NotificationText', 'NotificationInsertUserId', 'NotificationInsertDate', 'NotificationTenantId'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n\r\n","\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n    export namespace UserNotificationsService {\r\n        export const baseUrl = 'PatientManagement/UserNotifications';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<UserNotificationsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Serenity.ServiceOptions<any>): JQueryXHR;\r\n        export declare function CreateList(request: Serenity.SaveRequest<UserNotificationsRow[]>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Serenity.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<UserNotificationsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<UserNotificationsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<UserNotificationsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const CreateList: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List', 'CreateList'].forEach(x => {\r\n            (<any>UserNotificationsService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}","namespace PatientManagement.PatientManagement {\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export class VisitsForm extends Serenity.PrefixedContext {\r\n        static formKey = 'PatientManagement.Visits';\r\n\r\n    }\r\n\r\n    export interface VisitsForm {\r\n        PatientId: Serenity.LookupEditor;\r\n        VisitTypeId: Serenity.LookupEditor;\r\n        StartDate: Serenity.DateTimeEditor;\r\n        EndDate: Serenity.DateTimeEditor;\r\n        Description: Serenity.TextAreaEditor;\r\n    }\r\n\r\n    [['PatientId', () => Serenity.LookupEditor], ['VisitTypeId', () => Serenity.LookupEditor], ['StartDate', () => Serenity.DateTimeEditor], ['EndDate', () => Serenity.DateTimeEditor], ['Description', () => Serenity.TextAreaEditor]].forEach(x => Object.defineProperty(VisitsForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export interface VisitsRow {\r\n        VisitId?: number;\r\n        PatientId?: number;\r\n        VisitTypeId?: number;\r\n        Description?: string;\r\n        StartDate?: string;\r\n        EndDate?: string;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        PatientGender?: Gender;\r\n        PhoneNumber?: string;\r\n        PatientName?: string;\r\n        VisitTypeName?: string;\r\n        VisitTypeBackgroundColor?: string;\r\n        VisitTypeBorderColor?: string;\r\n        TenantId?: number;\r\n    }\r\n\r\n    export namespace VisitsRow {\r\n        export const idProperty = 'VisitId';\r\n        export const localTextPrefix = 'PatientManagement.Visits';\r\n        export const lookupKey = 'PatientManagement.Visits';\r\n\r\n        export function getLookup(): Q.Lookup<VisitsRow> {\r\n            return Q.getLookup<VisitsRow>('PatientManagement.Visits');\r\n        }\r\n\r\n        export namespace Fields {\r\n            export declare const VisitId: string;\r\n            export declare const PatientId: string;\r\n            export declare const VisitTypeId: string;\r\n            export declare const Description: string;\r\n            export declare const StartDate: string;\r\n            export declare const EndDate: string;\r\n            export declare const InsertUserId: string;\r\n            export declare const InsertDate: string;\r\n            export declare const PatientGender: string;\r\n            export declare const PhoneNumber: string;\r\n            export declare const PatientName: string;\r\n            export declare const VisitTypeName: string;\r\n            export declare const VisitTypeBackgroundColor: string;\r\n            export declare const VisitTypeBorderColor: string;\r\n            export declare const TenantId: string;\r\n        }\r\n\r\n        ['VisitId', 'PatientId', 'VisitTypeId', 'Description', 'StartDate', 'EndDate', 'InsertUserId', 'InsertDate', 'PatientGender', 'PhoneNumber', 'PatientName', 'VisitTypeName', 'VisitTypeBackgroundColor', 'VisitTypeBorderColor', 'TenantId'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export namespace VisitsService {\r\n        export const baseUrl = 'PatientManagement/Visits';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<VisitsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<VisitsRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<VisitsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<VisitsRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>VisitsService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export class VisitTypesForm extends Serenity.PrefixedContext {\r\n        static formKey = 'PatientManagement.VisitTypes';\r\n\r\n    }\r\n\r\n    export interface VisitTypesForm {\r\n        Name: Serenity.StringEditor;\r\n        BorderColor: Serenity.StringEditor;\r\n        BackgroundColor: Serenity.StringEditor;\r\n    }\r\n\r\n    [['Name', () => Serenity.StringEditor], ['BorderColor', () => Serenity.StringEditor], ['BackgroundColor', () => Serenity.StringEditor]].forEach(x => Object.defineProperty(VisitTypesForm.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as any)()); }, enumerable: true, configurable: true }));\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export interface VisitTypesRow {\r\n        VisitTypeId?: number;\r\n        Name?: string;\r\n        BorderColor?: string;\r\n        BackgroundColor?: string;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        TenantId?: number;\r\n    }\r\n\r\n    export namespace VisitTypesRow {\r\n        export const idProperty = 'VisitTypeId';\r\n        export const nameProperty = 'Name';\r\n        export const localTextPrefix = 'PatientManagement.VisitTypes';\r\n        export const lookupKey = 'PatientManagement.VisitTypes';\r\n\r\n        export function getLookup(): Q.Lookup<VisitTypesRow> {\r\n            return Q.getLookup<VisitTypesRow>('PatientManagement.VisitTypes');\r\n        }\r\n\r\n        export namespace Fields {\r\n            export declare const VisitTypeId: string;\r\n            export declare const Name: string;\r\n            export declare const BorderColor: string;\r\n            export declare const BackgroundColor: string;\r\n            export declare const InsertUserId: string;\r\n            export declare const InsertDate: string;\r\n            export declare const TenantId: string;\r\n        }\r\n\r\n        ['VisitTypeId', 'Name', 'BorderColor', 'BackgroundColor', 'InsertUserId', 'InsertDate', 'TenantId'].forEach(x => (<any>Fields)[x] = x);\r\n    }\r\n}\r\n","namespace PatientManagement.PatientManagement {\r\n    export namespace VisitTypesService {\r\n        export const baseUrl = 'PatientManagement/VisitTypes';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<VisitTypesRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<VisitTypesRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<VisitTypesRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<VisitTypesRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export namespace Methods {\r\n            export declare const Create: string;\r\n            export declare const Update: string;\r\n            export declare const Delete: string;\r\n            export declare const Retrieve: string;\r\n            export declare const List: string;\r\n        }\r\n\r\n        ['Create', 'Update', 'Delete', 'Retrieve', 'List'].forEach(x => {\r\n            (<any>VisitTypesService)[x] = function (r, s, o) { return Q.serviceRequest(baseUrl + '/' + x, r, s, o); };\r\n            (<any>Methods)[x] = baseUrl + '/' + x;\r\n        });\r\n    }\r\n}\r\n","namespace PatientManagement {\r\n    export interface ScriptUserDefinition {\r\n        Username?: string;\r\n        DisplayName?: string;\r\n        IsAdmin?: boolean;\r\n        Permissions?: { [key: string]: boolean };\r\n    }\r\n}\r\n","\r\nnamespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class CurrenciesDialog extends Serenity.EntityDialog<CurrenciesRow, any> {\r\n\r\n        protected getFormKey() { return CurrenciesForm.formKey; }\r\n        protected getIdProperty() { return CurrenciesRow.idProperty; }\r\n        protected getLocalTextPrefix() { return CurrenciesRow.localTextPrefix; }\r\n        protected getNameProperty() { return CurrenciesRow.nameProperty; }\r\n        protected getService() { return CurrenciesService.baseUrl; }\r\n\r\n        protected form = new CurrenciesForm(this.idPrefix);\r\n\r\n  \r\n    }\r\n}","/// <reference types=\"jqueryui\" />\r\n\r\nnamespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class CurrenciesGrid extends Serenity.EntityGrid<CurrenciesRow, any> {\r\n        protected getColumnsKey() { return 'Administration.Currencies'; }\r\n        protected getDialogType() { return CurrenciesDialog; }\r\n        protected getIdProperty() { return CurrenciesRow.idProperty; }\r\n        protected getLocalTextPrefix() { return CurrenciesRow.localTextPrefix; }\r\n        protected getService() { return CurrenciesService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected getButtons() {\r\n            var buttons = super.getButtons();\r\n\r\n\r\n            buttons.push({\r\n                title: 'Update All Currencies ',\r\n                cssClass: 'multiple-add-button',\r\n                onClick: () => {\r\n                    Q.confirm(\"Are You sure that you want to update all Currencies?\", () => {\r\n                        var joined = \"\";\r\n                        var url = \"http://api.fixer.io/latest\";\r\n\r\n                        var entities = CurrenciesService.List({}, response => {\r\n\r\n\r\n                            joined = response.Entities.map(o => o.CurrencyId).join(',');;\r\n\r\n                            if (response.Entities.length > 1) {\r\n                                url = url + \"?symbols=\" + joined;\r\n                            }\r\n                            $.get(url, function (data) {\r\n                                for (var curr in data.rates) {\r\n\r\n                                    var row = <CurrenciesRow>{};\r\n                                    row.CurrencyId = curr;\r\n                                    row.BaseCurrencyId = 1;\r\n                                    row.Rate = data.rates[curr];\r\n\r\n                                    CurrenciesService.UpdateAllCurrencies({\r\n                                        Entity: row\r\n                                    }, response => {\r\n                                        $('.refresh-button').click();\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                        });\r\n                    });\r\n\r\n                }\r\n            });\r\n\r\n            return buttons;\r\n        }\r\n\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class LanguageDialog extends Serenity.EntityDialog<LanguageRow, any> {\r\n        protected getFormKey() { return LanguageForm.formKey; }\r\n        protected getIdProperty() { return LanguageRow.idProperty; }\r\n        protected getLocalTextPrefix() { return LanguageRow.localTextPrefix; }\r\n        protected getNameProperty() { return LanguageRow.nameProperty; }\r\n        protected getService() { return LanguageService.baseUrl; }\r\n\r\n        protected form = new LanguageForm(this.idPrefix);\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class LanguageGrid extends Serenity.EntityGrid<LanguageRow, any> {\r\n        protected getColumnsKey() { return \"Administration.Language\"; }\r\n        protected getDialogType() { return LanguageDialog; }\r\n        protected getIdProperty() { return LanguageRow.idProperty; }\r\n        protected getLocalTextPrefix() { return LanguageRow.localTextPrefix; }\r\n        protected getService() { return LanguageService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected getDefaultSortBy() {\r\n            return [LanguageRow.Fields.LanguageName];\r\n        }\r\n    }\r\n}","\r\nnamespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class OffersDialog extends Serenity.EntityDialog<OffersRow, any> {\r\n        protected getFormKey() { return OffersForm.formKey; }\r\n        protected getIdProperty() { return OffersRow.idProperty; }\r\n        protected getLocalTextPrefix() { return OffersRow.localTextPrefix; }\r\n        protected getNameProperty() { return OffersRow.nameProperty; }\r\n        protected getService() { return OffersService.baseUrl; }\r\n\r\n        protected form = new OffersForm(this.idPrefix);\r\n\r\n    }\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class OffersGrid extends Serenity.EntityGrid<OffersRow, any> {\r\n        protected getColumnsKey() { return 'Administration.Offers'; }\r\n        protected getDialogType() { return OffersDialog; }\r\n        protected getIdProperty() { return OffersRow.idProperty; }\r\n        protected getLocalTextPrefix() { return OffersRow.localTextPrefix; }\r\n        protected getService() { return OffersService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","\r\nnamespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class PaymentOptionsDialog extends Serenity.EntityDialog<PaymentOptionsRow, any> {\r\n        protected getFormKey() { return PaymentOptionsForm.formKey; }\r\n        protected getIdProperty() { return PaymentOptionsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return PaymentOptionsRow.localTextPrefix; }\r\n        protected getNameProperty() { return PaymentOptionsRow.nameProperty; }\r\n        protected getService() { return PaymentOptionsService.baseUrl; }\r\n\r\n        protected form = new PaymentOptionsForm(this.idPrefix);\r\n\r\n    }\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class PaymentOptionsGrid extends Serenity.EntityGrid<PaymentOptionsRow, any> {\r\n        protected getColumnsKey() { return 'Administration.PaymentOptions'; }\r\n        protected getDialogType() { return PaymentOptionsDialog; }\r\n        protected getIdProperty() { return PaymentOptionsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return PaymentOptionsRow.localTextPrefix; }\r\n        protected getService() { return PaymentOptionsService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","\r\nnamespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class PaymentsDialog extends Serenity.EntityDialog<PaymentsRow, any> {\r\n        protected getFormKey() { return PaymentsForm.formKey; }\r\n        protected getIdProperty() { return PaymentsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return PaymentsRow.localTextPrefix; }\r\n        protected getNameProperty() { return PaymentsRow.nameProperty; }\r\n        protected getService() { return PaymentsService.baseUrl; }\r\n\r\n        protected form = new PaymentsForm(this.idPrefix);\r\n\r\n        constructor() {\r\n            super();\r\n            //this.form.SubscriptionId.changeSelect2(e => {\r\n            //    //var customerID = this.form.SubscriptionId.value;\r\n              \r\n            //    //SubscriptionsService.Retrieve({\r\n            //    //    EntityId: customerID\r\n            //    //}, response => {\r\n            //    //    this.setCustomerDetails(response.Entity);\r\n            //    //});\r\n\r\n\r\n            //    console.log(\"hey\")\r\n            //});\r\n        }\r\n        private setCustomerDetails(details: SubscriptionsRow) {\r\n\r\n        }\r\n        \r\n    }\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class PaymentsGrid extends Serenity.EntityGrid<PaymentsRow, any> {\r\n        protected getColumnsKey() { return 'Administration.Payments'; }\r\n        protected getDialogType() { return PaymentsDialog; }\r\n        protected getIdProperty() { return PaymentsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return PaymentsRow.localTextPrefix; }\r\n        protected getService() { return PaymentsService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","\r\nnamespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class PaymentsDetailsDialog extends Serenity.EntityDialog<PaymentsDetailsRow, any> {\r\n        protected getFormKey() { return PaymentsDetailsForm.formKey; }\r\n        protected getIdProperty() { return PaymentsDetailsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return PaymentsDetailsRow.localTextPrefix; }\r\n        protected getNameProperty() { return PaymentsDetailsRow.nameProperty; }\r\n        protected getService() { return PaymentsDetailsService.baseUrl; }\r\n\r\n        protected form = new PaymentsDetailsForm(this.idPrefix);\r\n\r\n    }\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class PaymentsDetailsGrid extends Serenity.EntityGrid<PaymentsDetailsRow, any> {\r\n        protected getColumnsKey() { return 'Administration.PaymentsDetails'; }\r\n        protected getDialogType() { return PaymentsDetailsDialog; }\r\n        protected getIdProperty() { return PaymentsDetailsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return PaymentsDetailsRow.localTextPrefix; }\r\n        protected getService() { return PaymentsDetailsService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class RoleDialog extends Serenity.EntityDialog<RoleRow, any> {\r\n        protected getFormKey() { return RoleForm.formKey; }\r\n        protected getIdProperty() { return RoleRow.idProperty; }\r\n        protected getLocalTextPrefix() { return RoleRow.localTextPrefix; }\r\n        protected getNameProperty() { return RoleRow.nameProperty; }\r\n        protected getService() { return RoleService.baseUrl; }\r\n\r\n        protected form = new RoleForm(this.idPrefix);\r\n\r\n        protected getToolbarButtons()\r\n        {\r\n            let buttons = super.getToolbarButtons();\r\n\r\n            buttons.push({\r\n                title: Q.text('Site.RolePermissionDialog.EditButton'),\r\n                cssClass: 'edit-permissions-button',\r\n                icon: 'icon-lock-open text-green',\r\n                onClick: () =>\r\n                {\r\n                    new RolePermissionDialog({\r\n                        roleID: this.entity.RoleId,\r\n                        title: this.entity.RoleName\r\n                    }).dialogOpen();\r\n                }\r\n            });\r\n\r\n            return buttons;\r\n        }\r\n\r\n        protected updateInterface() {\r\n            super.updateInterface();\r\n\r\n            this.toolbar.findButton(\"edit-permissions-button\").toggleClass(\"disabled\", this.isNewOrDeleted());\r\n        }\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class RoleGrid extends Serenity.EntityGrid<RoleRow, any> {\r\n        protected getColumnsKey() { return \"Administration.Role\"; }\r\n        protected getDialogType() { return RoleDialog; }\r\n        protected getIdProperty() { return RoleRow.idProperty; }\r\n        protected getLocalTextPrefix() { return RoleRow.localTextPrefix; }\r\n        protected getService() { return RoleService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected getDefaultSortBy() {\r\n            return [RoleRow.Fields.RoleName];\r\n        }\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class RolePermissionDialog extends Serenity.TemplatedDialog<RolePermissionDialogOptions> {\r\n\r\n        private permissions: PermissionCheckEditor;\r\n\r\n        constructor(opt: RolePermissionDialogOptions) {\r\n            super(opt);\r\n\r\n            this.permissions = new PermissionCheckEditor(this.byId('Permissions'), {\r\n                showRevoke: false\r\n            });\r\n\r\n            RolePermissionService.List({\r\n                RoleID: this.options.roleID,\r\n                Module: null,\r\n                Submodule: null\r\n            }, response => {\r\n                this.permissions.set_value(response.Entities.map(x => (<UserPermissionRow>{ PermissionKey: x })));\r\n            });\r\n        }\r\n\r\n        protected getDialogOptions(): JQueryUI.DialogOptions {\r\n            let opt = super.getDialogOptions();\r\n\r\n            opt.buttons = [\r\n                {\r\n                    text: Q.text('Dialogs.OkButton'),\r\n                    click: e => {\r\n                        RolePermissionService.Update({\r\n                            RoleID: this.options.roleID,\r\n                            Permissions: this.permissions.get_value().map(x => x.PermissionKey),\r\n                            Module: null,\r\n                            Submodule: null\r\n                        }, response => {\r\n                            this.dialogClose();\r\n                            window.setTimeout(() => Q.notifySuccess(Q.text('Site.RolePermissionDialog.SaveSuccess')), 0);\r\n                        });\r\n                    }\r\n                }, {\r\n                    text: Q.text('Dialogs.CancelButton'),\r\n                    click: () => this.dialogClose()\r\n                }];\r\n\r\n            opt.title = Q.format(Q.text('Site.RolePermissionDialog.DialogTitle'),\r\n                this.options.title);\r\n\r\n            return opt;\r\n        }\r\n\r\n        protected getTemplate(): string {\r\n            return '<div id=\"~_Permissions\"></div>';\r\n        }\r\n    }\r\n\r\n    export interface RolePermissionDialogOptions {\r\n        roleID?: number;\r\n        title?: string;\r\n    }\r\n}","declare var Vue;\r\n\r\nnamespace PatientManagement.Administration {\r\n    export class SergenPanel extends Serenity.Widget<any> {\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n\r\n            var vm = new Vue({\r\n                el: $('<div/>').appendTo(this.element)[0],\r\n                data: {\r\n                    connection: \"\",\r\n                    connections: [],\r\n                    tables: [],\r\n                    generate: {\r\n                        Row: true,\r\n                        Service: true,\r\n                        UI: true\r\n                    }\r\n                },\r\n                methods: {\r\n                    generateCode: function (table) {\r\n                        if (!table.Identifier) {\r\n                            Q.notifyError(\"Identifier cannot be empty!\");\r\n                            return;\r\n                        }\r\n\r\n                        if (!table.Module) {\r\n                            Q.notifyError(\"Module cannot be empty!\");\r\n                            return;\r\n                        }\r\n\r\n                        SergenService.Generate({\r\n                            ConnectionKey: this.connection,\r\n                            Table: table,\r\n                            GenerateOptions: this.generate\r\n                        }, r => {\r\n                            Q.notifySuccess(\"Code for selected table is generated. You'll need to rebuild your project.\");\r\n                        });\r\n                    }\r\n                },\r\n                watch: {\r\n                    connection: function (val) {\r\n                        if (!val || !val.length)\r\n                            vm.tables = [];\r\n                        else\r\n                            SergenService.ListTables({\r\n                                ConnectionKey: val\r\n                            }, response => vm.tables = response.Entities)\r\n                    }\r\n                },\r\n                template: Q.getTemplate('Administration.SergenPanel')\r\n            });\r\n\r\n            SergenService.ListConnections({}, response => vm.connections = response.Entities);\r\n        }\r\n    }\r\n}","\r\nnamespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class SubscriptionsDialog extends Serenity.EntityDialog<SubscriptionsRow, any> {\r\n        protected getFormKey() { return SubscriptionsForm.formKey; }\r\n        protected getIdProperty() { return SubscriptionsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return SubscriptionsRow.localTextPrefix; }\r\n        protected getNameProperty() { return SubscriptionsRow.nameProperty; }\r\n        protected getService() { return SubscriptionsService.baseUrl; }\r\n\r\n        protected form = new SubscriptionsForm(this.idPrefix);\r\n\r\n    }\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class SubscriptionsGrid extends Serenity.EntityGrid<SubscriptionsRow, any> {\r\n        protected getColumnsKey() { return 'Administration.Subscriptions'; }\r\n        protected getDialogType() { return SubscriptionsDialog; }\r\n        protected getIdProperty() { return SubscriptionsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return SubscriptionsRow.localTextPrefix; }\r\n        protected getService() { return SubscriptionsService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","\r\nnamespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class TenantDialog extends Serenity.EntityDialog<TenantRow, any> {\r\n        protected getFormKey() { return TenantForm.formKey; }\r\n        protected getIdProperty() { return TenantRow.idProperty; }\r\n        protected getLocalTextPrefix() { return TenantRow.localTextPrefix; }\r\n        protected getNameProperty() { return TenantRow.nameProperty; }\r\n        protected getService() { return TenantService.baseUrl; }\r\n\r\n        protected form = new TenantForm(this.idPrefix);\r\n\r\n    }\r\n}","\r\nnamespace PatientManagement.Administration {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class TenantGrid extends Serenity.EntityGrid<TenantRow, any> {\r\n        protected getColumnsKey() { return 'Administration.Tenant'; }\r\n        protected getDialogType() { return TenantDialog; }\r\n        protected getIdProperty() { return TenantRow.idProperty; }\r\n        protected getLocalTextPrefix() { return TenantRow.localTextPrefix; }\r\n        protected getService() { return TenantService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class TranslationGrid extends Serenity.EntityGrid<TranslationItem, any> {\r\n        protected getIdProperty() { return \"Key\"; }\r\n        protected getLocalTextPrefix() { return \"Administration.Translation\"; }\r\n        protected getService() { return TranslationService.baseUrl; }\r\n\r\n        private hasChanges: boolean;\r\n        private searchText: string;\r\n        private sourceLanguage: Serenity.LookupEditor; \r\n        private targetLanguage: Serenity.LookupEditor;\r\n        private targetLanguageKey: string;\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n\r\n            this.element.on('keyup.' + this.uniqueName + ' change.' + this.uniqueName,\r\n                'input.custom-text', e =>\r\n            {\r\n                var value = Q.trimToNull($(e.target).val());\r\n                if (value === '') {\r\n                    value = null;\r\n                }\r\n                this.view.getItemById($(e.target).data('key')).CustomText = value;\r\n                this.hasChanges = true;\r\n            });\r\n        }\r\n\r\n        protected onClick(e: JQueryEventObject, row: number, cell: number): any {\r\n            super.onClick(e, row, cell);\r\n\r\n            if (e.isDefaultPrevented()) {\r\n                return;\r\n            }\r\n\r\n            let item = this.itemAt(row);\r\n            let done: () => void;\r\n\r\n            if ($(e.target).hasClass('source-text')) {\r\n                e.preventDefault();\r\n                \r\n                done = () => {\r\n                    item.CustomText = item.SourceText;\r\n                    this.view.updateItem(item.Key, item);\r\n                    this.hasChanges = true;\r\n                };\r\n\r\n                if (Q.isTrimmedEmpty(item.CustomText) ||\r\n                    (Q.trimToEmpty(item.CustomText) === Q.trimToEmpty(item.SourceText))) {\r\n                    done();\r\n                    return;\r\n                }\r\n\r\n                Q.confirm(Q.text('Db.Administration.Translation.OverrideConfirmation'), done);\r\n                return;\r\n            }\r\n\r\n            if ($(e.target).hasClass('target-text')) {\r\n                e.preventDefault();\r\n\r\n                done = () => {\r\n                    item.CustomText = item.TargetText;\r\n                    this.view.updateItem(item.Key, item);\r\n                    this.hasChanges = true;\r\n                };\r\n\r\n                if (Q.isTrimmedEmpty(item.CustomText) ||\r\n                    (Q.trimToEmpty(item.CustomText) === Q.trimToEmpty(item.TargetText))) {\r\n                    done();\r\n                    return;\r\n                }\r\n\r\n                Q.confirm(Q.text('Db.Administration.Translation.OverrideConfirmation'), done);\r\n                return;\r\n            }\r\n        }\r\n\r\n        protected getColumns(): Slick.Column[] {\r\n\r\n            var columns: Slick.Column[] = [];\r\n            columns.push({ field: 'Key', width: 300, sortable: false });\r\n\r\n            columns.push({\r\n                field: 'SourceText',\r\n                width: 300,\r\n                sortable: false,\r\n                format: ctx => {\r\n                    return Q.outerHtml($('<a/>')\r\n                        .addClass('source-text')\r\n                        .text(ctx.value || ''));\r\n                }\r\n            });\r\n\r\n            columns.push({\r\n                field: 'CustomText',\r\n                width: 300,\r\n                sortable: false,\r\n                format: ctx => Q.outerHtml($('<input/>')\r\n                    .addClass('custom-text')\r\n                    .attr('value', ctx.value)\r\n                    .attr('type', 'text')\r\n                    .attr('data-key', ctx.item.Key))\r\n            });\r\n\r\n            columns.push({\r\n                field: 'TargetText',\r\n                width: 300,\r\n                sortable: false,\r\n                format: ctx => Q.outerHtml($('<a/>')\r\n                    .addClass('target-text')\r\n                    .text(ctx.value || ''))\r\n            });\r\n\r\n            return columns;\r\n        }\r\n\r\n        protected createToolbarExtensions(): void {\r\n            super.createToolbarExtensions();\r\n\r\n            let opt: Serenity.LookupEditorOptions = {\r\n                lookupKey: 'Administration.Language'\r\n            };\r\n\r\n            this.sourceLanguage = Serenity.Widget.create({\r\n                type: Serenity.LookupEditor,\r\n                element: el => el.appendTo(this.toolbar.element).attr('placeholder', '--- ' +\r\n                    Q.text('Db.Administration.Translation.SourceLanguage') + ' ---'),\r\n                options: opt\r\n            });\r\n\r\n            this.sourceLanguage.changeSelect2(e => {\r\n                if (this.hasChanges) {\r\n                    this.saveChanges(this.targetLanguageKey).then(() => this.refresh());\r\n                }\r\n                else {\r\n                    this.refresh();\r\n                }\r\n            });\r\n\r\n            this.targetLanguage = Serenity.Widget.create({\r\n                type: Serenity.LookupEditor,\r\n                element: el => el.appendTo(this.toolbar.element).attr('placeholder', '--- ' +\r\n                    Q.text('Db.Administration.Translation.TargetLanguage') + ' ---'),\r\n                options: opt\r\n            });\r\n\r\n            this.targetLanguage.changeSelect2(e => {\r\n                if (this.hasChanges) {\r\n                    this.saveChanges(this.targetLanguageKey).then(() => this.refresh());\r\n                }\r\n                else {\r\n                    this.refresh();\r\n                }\r\n            });\r\n        }\r\n\r\n        protected saveChanges(language: string): RSVP.Promise<any> {\r\n            var translations: { [key: string]: string } = {};\r\n            for (let item of this.getItems()) {\r\n                translations[item.Key] = item.CustomText;\r\n            }\r\n\r\n            return RSVP.resolve(TranslationService.Update({\r\n                TargetLanguageID: language,\r\n                Translations: translations\r\n            })).then(() => {\r\n                this.hasChanges = false;\r\n                language = Q.trimToNull(language) || 'invariant';\r\n                Q.notifySuccess('User translations in \"' + language +\r\n                    '\" language are saved to \"user.texts.' +\r\n                    language + '.json\" ' + 'file under \"~/App_Data/texts/\"', '');\r\n            });\r\n        }\r\n\r\n        protected onViewSubmit(): boolean {\r\n            var request = this.view.params;\r\n            request.SourceLanguageID = this.sourceLanguage.value;\r\n            this.targetLanguageKey = this.targetLanguage.value || '';\r\n            request.TargetLanguageID = this.targetLanguageKey;\r\n            this.hasChanges = false;\r\n            return super.onViewSubmit();\r\n        }\r\n    \r\n        protected getButtons(): Serenity.ToolButton[] {\r\n            return [{\r\n                title: Q.text('Db.Administration.Translation.SaveChangesButton'),\r\n                onClick: e => this.saveChanges(this.targetLanguageKey).then(() => this.refresh()),\r\n                cssClass: 'apply-changes-button'\r\n            }];\r\n        }\r\n\r\n        protected createQuickSearchInput() {\r\n            Serenity.GridUtils.addQuickSearchInputCustom(this.toolbar.element,\r\n                (field, searchText) => {\r\n                    this.searchText = searchText;\r\n                    this.view.setItems(this.view.getItems(), true);\r\n                });\r\n        }\r\n\r\n        protected onViewFilter(item: TranslationItem) {\r\n            if (!super.onViewFilter(item)) {\r\n                return false;\r\n            }\r\n\r\n            if (!this.searchText) {\r\n                return true;\r\n            }\r\n\r\n            var sd = Select2.util.stripDiacritics;\r\n            var searching = sd(this.searchText).toLowerCase();\r\n\r\n            function match(str: string) {\r\n                if (!str)\r\n                    return false;\r\n\r\n                return str.toLowerCase().indexOf(searching) >= 0;\r\n            }\r\n\r\n            return Q.isEmptyOrNull(searching) || match(item.Key) || match(item.SourceText) ||\r\n                match(item.TargetText) || match(item.CustomText);\r\n        }\r\n\r\n        protected usePager() {\r\n            return false;\r\n        }\r\n    }\r\n}","namespace PatientManagement.Authorization {\r\n    export declare let userDefinition: ScriptUserDefinition;\r\n\r\n    Object.defineProperty(Authorization, 'userDefinition', {\r\n        get: function () {\r\n            return Q.getRemoteData('UserData');\r\n        }\r\n    });\r\n\r\n    export function hasPermission(permissionKey: string) {\r\n        let ud = userDefinition;\r\n        return ud.Username === 'admin' || !!ud.Permissions[permissionKey];\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class UserDialog extends Serenity.EntityDialog<UserRow, any> {\r\n        protected getFormKey() { return UserForm.formKey; }\r\n        protected getIdProperty() { return UserRow.idProperty; }\r\n        protected getIsActiveProperty() { return UserRow.isActiveProperty; }\r\n        protected getLocalTextPrefix() { return UserRow.localTextPrefix; }\r\n        protected getNameProperty() { return UserRow.nameProperty; }\r\n        protected getService() { return UserService.baseUrl; }\r\n\r\n        protected form = new UserForm(this.idPrefix);\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.form.Password.addValidationRule(this.uniqueName, e => {\r\n                if (this.form.Password.value.length < 7)\r\n                    return \"Password must be at least 7 characters!\";\r\n            });\r\n\r\n            this.form.PasswordConfirm.addValidationRule(this.uniqueName, e => {\r\n                if (this.form.Password.value != this.form.PasswordConfirm.value)\r\n                    return \"The passwords entered doesn't match!\";\r\n            });\r\n        }\r\n\r\n        protected getPropertyItems() {\r\n            var items = super.getPropertyItems();\r\n            if (!Q.Authorization.hasPermission(\"Administration:Tenants\"))\r\n                items = items.filter(x => x.name != UserRow.Fields.TenantId);\r\n            return items;\r\n        }\r\n\r\n        protected getToolbarButtons()\r\n        {\r\n            let buttons = super.getToolbarButtons();\r\n\r\n            buttons.push({\r\n                title: Q.text('Site.UserDialog.EditRolesButton'),\r\n                cssClass: 'edit-roles-button',\r\n                icon: 'icon-people text-blue',\r\n                onClick: () =>\r\n                {\r\n                    new UserRoleDialog({\r\n                        userID: this.entity.UserId,\r\n                        username: this.entity.Username\r\n                    }).dialogOpen();\r\n                }\r\n            });\r\n\r\n            buttons.push({\r\n                title: Q.text('Site.UserDialog.EditPermissionsButton'),\r\n                cssClass: 'edit-permissions-button',\r\n                icon: 'icon-lock-open text-green',\r\n                onClick: () =>\r\n                {\r\n                    new UserPermissionDialog({\r\n                        userID: this.entity.UserId,\r\n                        username: this.entity.Username\r\n                    }).dialogOpen();\r\n                }\r\n            });\r\n\r\n            return buttons;\r\n        }\r\n\r\n        protected updateInterface() {\r\n            super.updateInterface();\r\n\r\n            this.toolbar.findButton('edit-roles-button').toggleClass('disabled', this.isNewOrDeleted());\r\n            this.toolbar.findButton(\"edit-permissions-button\").toggleClass(\"disabled\", this.isNewOrDeleted());\r\n        }\r\n\r\n        protected afterLoadEntity() {\r\n            super.afterLoadEntity();\r\n\r\n            // these fields are only required in new record mode\r\n            this.form.Password.element.toggleClass('required', this.isNew())\r\n                .closest('.field').find('sup').toggle(this.isNew());\r\n            this.form.PasswordConfirm.element.toggleClass('required', this.isNew())\r\n                .closest('.field').find('sup').toggle(this.isNew());\r\n        }\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class UserGrid extends Serenity.EntityGrid<UserRow, any> {\r\n        protected getColumnsKey() { return \"Administration.User\"; }\r\n        protected getDialogType() { return UserDialog; }\r\n        protected getIdProperty() { return UserRow.idProperty; }\r\n        protected getIsActiveProperty() { return UserRow.isActiveProperty; }\r\n        protected getLocalTextPrefix() { return UserRow.localTextPrefix; }\r\n        protected getService() { return UserService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected getDefaultSortBy() {\r\n            return [UserRow.Fields.Username];\r\n        }\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerEditor([Serenity.IGetEditValue, Serenity.ISetEditValue])\r\n    export class PermissionCheckEditor extends Serenity.DataGrid<PermissionCheckItem, PermissionCheckEditorOptions> {\r\n\r\n        protected getIdProperty() { return \"Key\"; }\r\n\r\n        private searchText: string;\r\n        private byParentKey: Q.Grouping<PermissionCheckItem>;\r\n        private rolePermissions: Q.Dictionary<boolean> = {};\r\n\r\n        constructor(container: JQuery, opt: PermissionCheckEditorOptions) {\r\n            super(container, opt);\r\n\r\n            let titleByKey: Q.Dictionary<string> = {};\r\n            let permissionKeys = this.getSortedGroupAndPermissionKeys(titleByKey);\r\n            let items = permissionKeys.map(key => <PermissionCheckItem>{\r\n                Key: key,\r\n                ParentKey: this.getParentKey(key),\r\n                Title: titleByKey[key],\r\n                GrantRevoke: null,\r\n                IsGroup: key.charAt(key.length - 1) === ':'\r\n            });\r\n\r\n            this.byParentKey = Q.toGrouping(items, x => x.ParentKey);\r\n            this.setItems(items);\r\n        }\r\n\r\n        private getItemGrantRevokeClass(item: PermissionCheckItem, grant: boolean): string {\r\n            if (!item.IsGroup) {\r\n                return ((item.GrantRevoke === grant) ? ' checked' : '');\r\n            }\r\n\r\n            let desc = this.getDescendants(item, true);\r\n            let granted = desc.filter(x => x.GrantRevoke === grant);\r\n\r\n            if (!granted.length) {\r\n                return '';\r\n            }\r\n\r\n            if (desc.length === granted.length) {\r\n                return 'checked';\r\n            }\r\n\r\n            return 'checked partial';\r\n        }\r\n\r\n        private getItemEffectiveClass(item: PermissionCheckItem): string {\r\n\r\n            if (item.IsGroup) {\r\n                let desc = this.getDescendants(item, true);\r\n                let grantCount = Q.count(desc, x => x.GrantRevoke === true ||\r\n                    (x.GrantRevoke == null && this.rolePermissions[x.Key]));\r\n\r\n                if (grantCount === desc.length || desc.length === 0) {\r\n                    return 'allow';\r\n                }\r\n\r\n                if (grantCount === 0) {\r\n                    return 'deny';\r\n                }\r\n\r\n                return 'partial';\r\n            }\r\n\r\n            let granted = item.GrantRevoke === true ||\r\n                (item.GrantRevoke == null && this.rolePermissions[item.Key]);\r\n\r\n            return (granted ? ' allow' : ' deny');\r\n        }\r\n\r\n        protected getColumns(): Slick.Column[] {\r\n            let columns: Slick.Column[] = [{\r\n                name: Q.text('Site.UserPermissionDialog.Permission'),\r\n                field: 'Title',\r\n                format: Serenity.SlickFormatting.treeToggle(() => this.view, x => x.Key, ctx => {\r\n                    let item = ctx.item;\r\n                    let klass = this.getItemEffectiveClass(item);\r\n                    return '<span class=\"effective-permission ' + klass + '\">' + Q.htmlEncode(ctx.value) + '</span>';\r\n                }),\r\n                width: 495,\r\n                sortable: false\r\n            }, {\r\n                name: Q.text('Site.UserPermissionDialog.Grant'), field: 'Grant',\r\n                format: ctx => {\r\n                    let item1 = ctx.item;\r\n                    let klass1 = this.getItemGrantRevokeClass(item1, true);\r\n                    return \"<span class='check-box grant no-float \" + klass1 + \"'></span>\";\r\n                },\r\n                width: 65,\r\n                sortable: false,\r\n                headerCssClass: 'align-center',\r\n                cssClass: 'align-center'\r\n            }];\r\n\r\n            if (this.options.showRevoke) {\r\n                columns.push({\r\n                    name: Q.text('Site.UserPermissionDialog.Revoke'), field: 'Revoke',\r\n                    format: ctx => {\r\n                        let item2 = ctx.item;\r\n                        let klass2 = this.getItemGrantRevokeClass(item2, false);\r\n                        return '<span class=\"check-box revoke no-float ' + klass2 + '\"></span>';\r\n                    },\r\n                    width: 65,\r\n                    sortable: false,\r\n                    headerCssClass: 'align-center',\r\n                    cssClass: 'align-center'\r\n                });\r\n            }\r\n\r\n            return columns;\r\n        }\r\n\r\n        public setItems(items: PermissionCheckItem[]): void {\r\n            Serenity.SlickTreeHelper.setIndents(items, x => x.Key, x => x.ParentKey, false);\r\n            this.view.setItems(items, true);\r\n        }\r\n\r\n        protected onViewSubmit() {\r\n            return false;\r\n        }\r\n\r\n        protected onViewFilter(item: PermissionCheckItem): boolean {\r\n            if (!super.onViewFilter(item)) {\r\n                return false;\r\n            }\r\n\r\n            if (!Serenity.SlickTreeHelper.filterById(item, this.view, x => x.ParentKey))\r\n                return false;\r\n\r\n            if (this.searchText) {\r\n                return this.matchContains(item) || item.IsGroup && Q.any(this.getDescendants(item, false), x => this.matchContains(x));\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        private matchContains(item: PermissionCheckItem): boolean {\r\n            return Select2.util.stripDiacritics(item.Title || '').toLowerCase().indexOf(this.searchText) >= 0;\r\n        }\r\n\r\n        private getDescendants(item: PermissionCheckItem, excludeGroups: boolean): PermissionCheckItem[] {\r\n            let result: PermissionCheckItem[] = [];\r\n            let stack = [item];\r\n            while (stack.length > 0) {\r\n                let i = stack.pop();\r\n                let children = this.byParentKey[i.Key];\r\n                if (!children)\r\n                    continue;\r\n\r\n                for (let child of children) {\r\n                    if (!excludeGroups || !child.IsGroup) {\r\n                        result.push(child);\r\n                    }\r\n\r\n                    stack.push(child);\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        protected onClick(e, row, cell): void {\r\n            super.onClick(e, row, cell);\r\n\r\n            if (!e.isDefaultPrevented()) {\r\n                Serenity.SlickTreeHelper.toggleClick(e, row, cell, this.view, x => x.Key);\r\n            }\r\n\r\n            if (e.isDefaultPrevented()) {\r\n                return;\r\n            }\r\n\r\n            let target = $(e.target);\r\n            let grant = target.hasClass('grant');\r\n\r\n            if (grant || target.hasClass('revoke')) {\r\n                e.preventDefault();\r\n\r\n                let item = this.itemAt(row);\r\n                let checkedOrPartial = target.hasClass('checked') || target.hasClass('partial');\r\n\r\n                if (checkedOrPartial) {\r\n                    grant = null;\r\n                }\r\n                else {\r\n                    grant = grant !== checkedOrPartial;\r\n                }\r\n\r\n                if (item.IsGroup) {\r\n                    for (var d of this.getDescendants(item, true)) {\r\n                        d.GrantRevoke = grant;\r\n                    }\r\n                }\r\n                else\r\n                    item.GrantRevoke = grant;\r\n\r\n                this.slickGrid.invalidate();\r\n            }\r\n        }\r\n\r\n        private getParentKey(key): string {\r\n            if (key.charAt(key.length - 1) === ':') {\r\n                key = key.substr(0, key.length - 1);\r\n            }\r\n\r\n            let idx = key.lastIndexOf(':');\r\n            if (idx >= 0) {\r\n                return key.substr(0, idx + 1);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        protected getButtons(): Serenity.ToolButton[] {\r\n            return [];\r\n        }\r\n\r\n        protected createToolbarExtensions(): void {\r\n            super.createToolbarExtensions();\r\n            Serenity.GridUtils.addQuickSearchInputCustom(this.toolbar.element, (field, text) => {\r\n                this.searchText = Select2.util.stripDiacritics(Q.trimToNull(text) || '').toLowerCase();\r\n                this.view.setItems(this.view.getItems(), true);\r\n            });\r\n        }\r\n\r\n        private getSortedGroupAndPermissionKeys(titleByKey: Q.Dictionary<string>): string[] {\r\n            let keys = <string[]>Q.getRemoteData('Administration.PermissionKeys').Entities;\r\n            let titleWithGroup = {};\r\n            for (var k of keys) {\r\n                let s = k;\r\n\r\n                if (!s) {\r\n                    continue;\r\n                }\r\n\r\n                if (s.charAt(s.length - 1) == ':') {\r\n                    s = s.substr(0, s.length - 1);\r\n                    if (s.length === 0) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                if (titleByKey[s]) {\r\n                    continue;\r\n                }\r\n\r\n                titleByKey[s] = Q.coalesce(Q.tryGetText('Permission.' + s), s);\r\n                let parts = s.split(':');\r\n                let group = '';\r\n                let groupTitle = '';\r\n                for (let i = 0; i < parts.length - 1; i++) {\r\n                    group = group + parts[i] + ':';\r\n                    let txt = Q.tryGetText('Permission.' + group);\r\n                    if (txt == null) {\r\n                        txt = parts[i];\r\n                    }\r\n                    titleByKey[group] = txt;\r\n                    groupTitle = groupTitle + titleByKey[group] + ':';\r\n                    titleWithGroup[group] = groupTitle;\r\n                }\r\n\r\n                titleWithGroup[s] = groupTitle + titleByKey[s];\r\n            }\r\n\r\n            keys = Object.keys(titleByKey);\r\n            keys = keys.sort((x, y) => Q.turkishLocaleCompare(titleWithGroup[x], titleWithGroup[y]));\r\n\r\n            return keys;\r\n        }\r\n\r\n        get_value(): UserPermissionRow[] {\r\n\r\n            let result: UserPermissionRow[] = [];\r\n\r\n            for (let item of this.view.getItems()) {\r\n                if (item.GrantRevoke != null && item.Key.charAt(item.Key.length - 1) != ':') {\r\n                    result.push({ PermissionKey: item.Key, Granted: item.GrantRevoke });\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        set_value(value: UserPermissionRow[]) {\r\n\r\n            for (let item of this.view.getItems()) {\r\n                item.GrantRevoke = null;\r\n            }\r\n\r\n            if (value != null) {\r\n                for (let row of value) {\r\n                    let r = this.view.getItemById(row.PermissionKey);\r\n                    if (r) {\r\n                        r.GrantRevoke = Q.coalesce(row.Granted, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.setItems(this.getItems());\r\n        }\r\n\r\n        get_rolePermissions(): string[] {\r\n            return Object.keys(this.rolePermissions);\r\n        }\r\n\r\n        set_rolePermissions(value: string[]) {\r\n            this.rolePermissions = {};\r\n\r\n            if (value) {\r\n                for (let k of value) {\r\n                    this.rolePermissions[k] = true;\r\n                }\r\n            }\r\n\r\n            this.setItems(this.getItems());\r\n        }\r\n    }\r\n\r\n    export interface PermissionCheckEditorOptions {\r\n        showRevoke?: boolean;\r\n    }\r\n\r\n    export interface PermissionCheckItem {\r\n        ParentKey?: string;\r\n        Key?: string;\r\n        Title?: string;\r\n        IsGroup?: boolean;\r\n        GrantRevoke?: boolean;\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class UserPermissionDialog extends Serenity.TemplatedDialog<UserPermissionDialogOptions> {\r\n\r\n        private permissions: PermissionCheckEditor;\r\n\r\n        constructor(opt: UserPermissionDialogOptions) {\r\n            super(opt);\r\n\r\n            this.permissions = new PermissionCheckEditor(this.byId('Permissions'), {\r\n                showRevoke: true\r\n            });\r\n\r\n            UserPermissionService.List({\r\n                UserID: this.options.userID,\r\n                Module: null,\r\n                Submodule: null\r\n            }, response => {\r\n                this.permissions.set_value(response.Entities);\r\n            });\r\n\r\n            UserPermissionService.ListRolePermissions({\r\n                UserID: this.options.userID,\r\n                Module: null,\r\n                Submodule: null,\r\n            }, response => {\r\n                this.permissions.set_rolePermissions(response.Entities);\r\n            });\r\n        }\r\n\r\n        protected getDialogOptions(): JQueryUI.DialogOptions {\r\n            let opt = super.getDialogOptions();\r\n\r\n            opt.buttons = [\r\n                {\r\n                    text: Q.text('Dialogs.OkButton'),\r\n                    click: e => {\r\n                        UserPermissionService.Update({\r\n                            UserID: this.options.userID,\r\n                            Permissions: this.permissions.get_value(),\r\n                            Module: null,\r\n                            Submodule: null\r\n                        }, response => {\r\n                            this.dialogClose();\r\n                            window.setTimeout(() => Q.notifySuccess(Q.text('Site.UserPermissionDialog.SaveSuccess')), 0);\r\n                        });\r\n                    }\r\n                }, {\r\n                    text: Q.text('Dialogs.CancelButton'),\r\n                    click: () => this.dialogClose()\r\n                }];\r\n\r\n            opt.title = Q.format(Q.text('Site.UserPermissionDialog.DialogTitle'),\r\n                this.options.username);\r\n\r\n            return opt;\r\n        }\r\n\r\n        protected getTemplate(): string {\r\n            return '<div id=\"~_Permissions\"></div>';\r\n        }\r\n    }\r\n\r\n    export interface UserPermissionDialogOptions {\r\n        userID?: number;\r\n        username?: string;\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerEditor()\r\n    export class RoleCheckEditor extends Serenity.CheckTreeEditor<Serenity.CheckTreeItem<any>, any> {\r\n\r\n        private searchText: string;\r\n\r\n        constructor(div: JQuery) {\r\n            super(div);\r\n        }\r\n\r\n        protected createToolbarExtensions() {\r\n            super.createToolbarExtensions();\r\n\r\n            Serenity.GridUtils.addQuickSearchInputCustom(this.toolbar.element, (field, text) => {\r\n                this.searchText = Select2.util.stripDiacritics(text || '').toUpperCase();\r\n                this.view.setItems(this.view.getItems(), true);\r\n            });\r\n        }\r\n\r\n        protected getButtons() {\r\n            return [];\r\n        }\r\n\r\n        protected getTreeItems() {\r\n            return RoleRow.getLookup().items.map(role => <Serenity.CheckTreeItem<any>>{\r\n                id: role.RoleId.toString(),\r\n                text: role.RoleName\r\n            });\r\n        }\r\n\r\n        protected onViewFilter(item) {\r\n            return super.onViewFilter(item) &&\r\n                (Q.isEmptyOrNull(this.searchText) ||\r\n                 Select2.util.stripDiacritics(item.text || '')\r\n                     .toUpperCase().indexOf(this.searchText) >= 0);\r\n        }\r\n    }\r\n}","namespace PatientManagement.Administration {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class UserRoleDialog extends Serenity.TemplatedDialog<UserRoleDialogOptions> {\r\n\r\n        private permissions: RoleCheckEditor;\r\n\r\n        constructor(opt: UserRoleDialogOptions) {\r\n            super(opt);\r\n\r\n            this.permissions = new RoleCheckEditor(this.byId('Roles'));\r\n\r\n            UserRoleService.List({\r\n                UserID: this.options.userID\r\n            }, response => {\r\n                this.permissions.value = response.Entities.map(x => x.toString());\r\n            });\r\n        }\r\n\r\n        protected getDialogOptions() {\r\n            var opt = super.getDialogOptions();\r\n\r\n            opt.buttons = [{\r\n                text: Q.text('Dialogs.OkButton'),\r\n                click: () => {\r\n                    Q.serviceRequest('Administration/UserRole/Update', {\r\n                        UserID: this.options.userID,\r\n                        Roles: this.permissions.value.map(x => parseInt(x, 10))\r\n                    }, response => {\r\n                        this.dialogClose();\r\n                        Q.notifySuccess(Q.text('Site.UserRoleDialog.SaveSuccess'));\r\n                    });\r\n                }\r\n            }, {\r\n                text: Q.text('Dialogs.CancelButton'),\r\n                click: () => this.dialogClose()\r\n            }];\r\n\r\n            opt.title = Q.format(Q.text('Site.UserRoleDialog.DialogTitle'), this.options.username);\r\n            return opt;\r\n        }\r\n\r\n        protected getTemplate() {\r\n            return \"<div id='~_Roles'></div>\";\r\n        }\r\n    }\r\n\r\n    export interface UserRoleDialogOptions {\r\n        userID: number;\r\n        username: string;\r\n    }\r\n}","namespace PatientManagement {\r\n\r\n    export class BasicProgressDialog extends Serenity.TemplatedDialog<any> {\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.byId('ProgressBar').progressbar({\r\n                max: 100,\r\n                value: 0,\r\n                change: (e, v) => {\r\n                    this.byId('ProgressLabel').text(this.value + ' / ' + this.max);\r\n                }\r\n            });\r\n        }\r\n\r\n        public cancelled: boolean;\r\n\r\n        public get max(): number {\r\n            return this.byId('ProgressBar').progressbar().progressbar('option', 'max');\r\n        }\r\n\r\n        public set max(value: number) {\r\n            this.byId('ProgressBar').progressbar().progressbar('option', 'max', value);\r\n        }\r\n\r\n        public get value(): number {\r\n            return this.byId('ProgressBar').progressbar('value');\r\n        }\r\n\r\n        public set value(value: number) {\r\n            this.byId('ProgressBar').progressbar().progressbar('value', value);\r\n        }\r\n\r\n        public get title(): string {\r\n            return this.element.dialog().dialog('option', 'title');\r\n        }\r\n\r\n        public set title(value: string) {\r\n            this.element.dialog().dialog('option', 'title', value);\r\n        }\r\n\r\n        public cancelTitle: string;\r\n\r\n        getDialogOptions() {\r\n            var opt = super.getDialogOptions();\r\n            opt.title = Q.text('Site.BasicProgressDialog.PleaseWait');\r\n            opt.width = 600;\r\n            opt.buttons = [{\r\n                text: Q.text('Dialogs.CancelButton'),\r\n                click: () => {\r\n                    this.cancelled = true;\r\n                    this.element.closest('.ui-dialog')\r\n                        .find('.ui-dialog-buttonpane .ui-button')\r\n                        .attr('disabled', 'disabled')\r\n                        .css('opacity', '0.5');\r\n\r\n                    this.element.dialog('option', 'title', Q.trimToNull(this.cancelTitle) ||\r\n                        Q.text('Site.BasicProgressDialog.CancelTitle'));\r\n                }\r\n            }];\r\n\r\n            return opt;\r\n        }\r\n\r\n        initDialog() {\r\n            super.initDialog();\r\n            this.element.closest('.ui-dialog').find('.ui-dialog-titlebar-close').hide();\r\n        }\r\n\r\n        getTemplate() {\r\n            return (\r\n                \"<div class='s-DialogContent s-BasicProgressDialogContent'>\" +\r\n                    \"<div id='~_StatusText' class='status-text' ></div>\" +\r\n                    \"<div id='~_ProgressBar' class='progress-bar'>\" +\r\n                        \"<div id='~_ProgressLabel' class='progress-label' ></div>\" +\r\n                    \"</div>\" +\r\n                \"</div>\");\r\n        }\r\n    }\r\n}","namespace PatientManagement {\r\n    @Serenity.Decorators.element('<input type=\"checkbox\"/>')\r\n    @Serenity.Decorators.registerClass([Serenity.IGetEditValue, Serenity.ISetEditValue])\r\n    export class BsSwitchEditor extends Serenity.Widget<BootstrapSwitchOptions>\r\n    implements Serenity.IGetEditValue, Serenity.ISetEditValue {\r\n\r\n        constructor(element: JQuery, opt: BootstrapSwitchOptions) {\r\n            super(element, opt);\r\n\r\n            this.options.size = \"mini\";\r\n            element.attr('type', 'checkbox').bootstrapSwitch(this.options);\r\n        }\r\n\r\n        public setEditValue(source: any, property: Serenity.PropertyItem): void {\r\n            if (this.element.hasClass('required')) this.element.removeClass('required');\r\n            this.element.bootstrapSwitch('state', source[property.name]);\r\n        }\r\n\r\n        public getEditValue(property: Serenity.PropertyItem, target: any): void {\r\n            target[property.name] = this.element.bootstrapSwitch('state');\r\n        }\r\n    }\r\n    export interface BootstrapSwitchOptions {\r\n        state?: boolean;\r\n        size?: string;\r\n        animate?: boolean;\r\n        disabled?: boolean;\r\n        readonly?: boolean;\r\n        indeterminate?: boolean;\r\n        invers?: boolean;\r\n        radioAllOff?: boolean;\r\n        onColor?: string;\r\n        offColor?: string;\r\n        onText?: string;\r\n        offText?: string;\r\n        labelText?: string;\r\n        handleWidth?: string;\r\n        labelWidth?: string;\r\n        baseClass?: string;\r\n        wrapperClass?: string;\r\n        onInit?: any;\r\n        onSwitchChange?: any;\r\n    }\r\n}\r\n","namespace PatientManagement.Common {\r\n\r\n    export class BulkServiceAction {\r\n\r\n        protected keys: string[];\r\n        protected queue: string[];\r\n        protected queueIndex: number;\r\n        protected progressDialog: BasicProgressDialog;\r\n        protected pendingRequests: number;\r\n        protected completedRequests: number;\r\n        protected errorByKey: Q.Dictionary<Serenity.ServiceError>;\r\n        private successCount;\r\n        private errorCount;\r\n        public done: () => void;\r\n\r\n        protected createProgressDialog() {\r\n            this.progressDialog = new BasicProgressDialog();\r\n            this.progressDialog.dialogOpen();\r\n            this.progressDialog.max = this.keys.length;\r\n            this.progressDialog.value = 0;\r\n        }\r\n\r\n        protected getConfirmationFormat() {\r\n            return Q.text('Site.BulkServiceAction.ConfirmationFormat');\r\n        }\r\n\r\n        protected getConfirmationMessage(targetCount) {\r\n            return Q.format(this.getConfirmationFormat(), targetCount);\r\n        }\r\n\r\n        protected confirm(targetCount, action) {\r\n            Q.confirm(this.getConfirmationMessage(targetCount), action);\r\n        }\r\n\r\n        protected getNothingToProcessMessage() {\r\n            return Q.text('Site.BulkServiceAction.NothingToProcess');\r\n        }\r\n\r\n        protected nothingToProcess() {\r\n            Q.notifyError(this.getNothingToProcessMessage());\r\n        }\r\n\r\n        protected getParallelRequests() {\r\n            return 1;\r\n        }\r\n\r\n        protected getBatchSize() {\r\n            return 1;\r\n        }\r\n\r\n        protected startParallelExecution() {\r\n            this.createProgressDialog();\r\n            this.successCount = 0;\r\n            this.errorCount = 0;\r\n            this.pendingRequests = 0;\r\n            this.completedRequests = 0;\r\n            this.errorCount = 0;\r\n            this.errorByKey = {};\r\n            this.queue = this.keys.slice();\r\n            this.queueIndex = 0;\r\n            var parallelRequests = this.getParallelRequests();\r\n            while (parallelRequests-- > 0) {\r\n                this.executeNextBatch();\r\n            }\r\n        }\r\n\r\n        protected serviceCallCleanup() {\r\n            this.pendingRequests--;\r\n            this.completedRequests++;\r\n\r\n            var title = Q.text((this.progressDialog.cancelled ?\r\n                'Site.BasicProgressDialog.CancelTitle' : 'Site.BasicProgressDialog.PleaseWait'));\r\n\r\n            title += ' (';\r\n            if (this.successCount > 0) {\r\n                title += Q.format(Q.text('Site.BulkServiceAction.SuccessCount'), this.successCount);\r\n            }\r\n\r\n            if (this.errorCount > 0) {\r\n                if (this.successCount > 0) {\r\n                    title += ', ';\r\n                }\r\n\r\n                title += Q.format(Q.text('Site.BulkServiceAction.ErrorCount'), this.errorCount);\r\n            }\r\n\r\n            this.progressDialog.title = title + ')';\r\n            this.progressDialog.value = this.successCount + this.errorCount;\r\n            if (!this.progressDialog.cancelled && this.progressDialog.value < this.keys.length) {\r\n                this.executeNextBatch();\r\n            }\r\n\r\n            else if (this.pendingRequests === 0) {\r\n                this.progressDialog.dialogClose();\r\n                this.showResults();\r\n                if (this.done) {\r\n                    this.done();\r\n                    this.done = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        protected executeForBatch(batch: string[]) {\r\n        }\r\n\r\n        protected executeNextBatch() {\r\n            var batchSize = this.getBatchSize();\r\n            var batch = [];\r\n            while (true) {\r\n                if (batch.length >= batchSize) {\r\n                    break;\r\n                }\r\n\r\n                if (this.queueIndex >= this.queue.length) {\r\n                    break;\r\n                }\r\n\r\n                batch.push(this.queue[this.queueIndex++]);\r\n            }\r\n\r\n            if (batch.length > 0) {\r\n                this.pendingRequests++;\r\n                this.executeForBatch(batch);\r\n            }\r\n        }\r\n\r\n        protected getAllHadErrorsFormat() {\r\n            return Q.text('Site.BulkServiceAction.AllHadErrorsFormat');\r\n        }\r\n\r\n        protected showAllHadErrors() {\r\n            Q.notifyError(Q.format(this.getAllHadErrorsFormat(), this.errorCount));\r\n        }\r\n\r\n        protected getSomeHadErrorsFormat() {\r\n            return Q.text('Site.BulkServiceAction.SomeHadErrorsFormat');\r\n        }\r\n\r\n        protected showSomeHadErrors() {\r\n            Q.notifyWarning(Q.format(this.getSomeHadErrorsFormat(), this.successCount, this.errorCount));\r\n        }\r\n\r\n        protected getAllSuccessFormat() {\r\n            return Q.text('Site.BulkServiceAction.AllSuccessFormat');\r\n        }\r\n\r\n        protected showAllSuccess() {\r\n            Q.notifySuccess(Q.format(this.getAllSuccessFormat(), this.successCount));\r\n        }\r\n\r\n        protected showResults() {\r\n            if (this.errorCount === 0 && this.successCount === 0) {\r\n                this.nothingToProcess();\r\n                return;\r\n            }\r\n\r\n            if (this.errorCount > 0 && this.successCount === 0) {\r\n                this.showAllHadErrors();\r\n                return;\r\n            }\r\n\r\n            if (this.errorCount > 0) {\r\n                this.showSomeHadErrors();\r\n                return;\r\n            }\r\n\r\n            this.showAllSuccess();\r\n        }\r\n\r\n        public execute(keys: string[]) {\r\n            this.keys = keys;\r\n            if (this.keys.length === 0) {\r\n                this.nothingToProcess();\r\n                return;\r\n            }\r\n            this.confirm(this.keys.length, () => this.startParallelExecution());\r\n        }\r\n\r\n        get_successCount() {\r\n            return this.successCount;\r\n        }\r\n\r\n        set_successCount(value: number) {\r\n            this.successCount = value;\r\n        }\r\n\r\n        get_errorCount() {\r\n            return this.errorCount;\r\n        }\r\n\r\n        set_errorCount(value: number) {\r\n            this.errorCount = value;\r\n        }\r\n    }\r\n}","namespace PatientManagement.DialogUtils {\r\n    export function pendingChangesConfirmation(element: JQuery, hasPendingChanges: () => boolean) {\r\n        element.bind('dialogbeforeclose', function (e) {\r\n            if (!Serenity.WX.hasOriginalEvent(e) || !hasPendingChanges()) {\r\n                return;\r\n            }\r\n\r\n            e.preventDefault();\r\n            Q.confirm('You have pending changes. Save them?',\r\n                () => element.find('div.save-and-close-button').click(),\r\n                {\r\n                    onNo: function () {\r\n                        element.dialog().dialog('close');\r\n                    }\r\n                });\r\n        });\r\n    }\r\n}\r\n","namespace PatientManagement.Common {\r\n\r\n    @Serenity.Decorators.registerFormatter()\r\n    export class EnumSelectFormatter implements Slick.Formatter {\r\n        constructor() {\r\n            this.allowClear = true;\r\n        }\r\n\r\n        format(ctx: Slick.FormatterContext) {\r\n            var enumType = Serenity.EnumTypeRegistry.get(this.enumKey);\r\n\r\n            var sb = \"<select>\";\r\n            if (this.allowClear) {\r\n                sb += '<option value=\"\">';\r\n                sb += Q.htmlEncode(this.emptyItemText || Q.text(\"Controls.SelectEditor.EmptyItemText\"));\r\n                sb += '</option>';\r\n            }\r\n\r\n            for (var x of Object.keys(enumType).filter(v => !isNaN(parseInt(v, 10)))) {\r\n                sb += '<option value=\"' + x + '\"';\r\n                if (x == ctx.value)\r\n                    sb += \" selected\";\r\n                var name = enumType[x];\r\n                sb += \">\";\r\n                sb += Q.htmlEncode(Q.tryGetText(\"Enums.\" + this.enumKey + \".\" + name) || name);\r\n                sb += \"</option>\";\r\n            }\r\n\r\n            sb += \"</select>\";\r\n\r\n            return sb;\r\n        }\r\n\r\n        @Serenity.Decorators.option()\r\n        public enumKey: string;\r\n\r\n        @Serenity.Decorators.option()\r\n        public allowClear: boolean;\r\n\r\n        @Serenity.Decorators.option()\r\n        public emptyItemText: string;\r\n    }\r\n}","namespace PatientManagement.Common {\r\n\r\n    export interface ExcelExportOptions {\r\n        grid: Serenity.DataGrid<any, any>;\r\n        service: string;\r\n        onViewSubmit: () => boolean;\r\n        title?: string;\r\n        hint?: string;\r\n        separator?: boolean;\r\n    }\r\n\r\n    export namespace ExcelExportHelper {\r\n\r\n        export function createToolButton(options: ExcelExportOptions): Serenity.ToolButton {\r\n\r\n            return {\r\n                hint: Q.coalesce(options.title, 'Excel'),\r\n                title: Q.coalesce(options.hint, ''),\r\n                cssClass: 'export-xlsx-button',\r\n                onClick: function () {\r\n                    if (!options.onViewSubmit()) {\r\n                        return;\r\n                    }\r\n\r\n                    let grid = options.grid;\r\n\r\n                    var request = Q.deepClone(grid.getView().params) as Serenity.ListRequest;\r\n                    request.Take = 0;\r\n                    request.Skip = 0;\r\n                    var sortBy = grid.getView().sortBy;\r\n                    if (sortBy) {\r\n                        request.Sort = sortBy;\r\n                    }\r\n\r\n                    request.IncludeColumns = [];\r\n                    let columns = grid.getGrid().getColumns();\r\n                    for (let column of columns) {\r\n                        request.IncludeColumns.push(column.id || column.field);\r\n                    }\r\n                    Q.postToService({ service: options.service, request: request, target: '_blank' });\r\n                },\r\n                separator: options.separator\r\n            };\r\n        }\r\n    }\r\n}","namespace PatientManagement.Common {\r\n\r\n    @Serenity.Decorators.registerClass([Serenity.IGetEditValue, Serenity.ISetEditValue])\r\n    @Serenity.Decorators.editor()\r\n    @Serenity.Decorators.element(\"<div/>\")\r\n    export class GridEditorBase<TEntity> extends Serenity.EntityGrid<TEntity, any>\r\n        implements Serenity.IGetEditValue, Serenity.ISetEditValue {\r\n\r\n        protected getIdProperty() { return \"__id\"; }\r\n\r\n        protected nextId = 1;\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected id(entity: TEntity) {\r\n            return (entity as any)[this.getIdProperty()];\r\n        }\r\n\r\n        protected getNextId() {\r\n            return \"`\" + this.nextId++;\r\n        }\r\n\r\n        protected setNewId(entity: TEntity) {\r\n            entity[this.getIdProperty()] = this.getNextId();\r\n        }\r\n\r\n        protected save(opt: Serenity.ServiceOptions<any>, callback: (r: Serenity.ServiceResponse) => void) {\r\n            var request = opt.request as Serenity.SaveRequest<TEntity>;\r\n            var row = Q.deepClone(request.Entity);\r\n\r\n            var id = this.id(row);\r\n            if (id == null) {\r\n                (row as any)[this.getIdProperty()] = this.getNextId();\r\n            }\r\n\r\n            if (!this.validateEntity(row, id)) {\r\n                return;\r\n            }\r\n\r\n            var items = this.view.getItems().slice();\r\n            if (id == null) {\r\n                items.push(row);\r\n            }\r\n            else {\r\n                var index = Q.indexOf(items, x => this.id(x) === id);\r\n                items[index] = Q.deepClone({} as TEntity, items[index], row);\r\n            }\r\n\r\n            this.setEntities(items);\r\n            callback({});\r\n        }\r\n\r\n        protected deleteEntity(id: number) {\r\n            this.view.deleteItem(id);\r\n            return true;\r\n        }\r\n\r\n        protected validateEntity(row: TEntity, id: number) {\r\n            return true;\r\n        }\r\n\r\n        protected setEntities(items: TEntity[]) {\r\n            this.view.setItems(items, true);\r\n        }\r\n\r\n        protected getNewEntity(): TEntity {\r\n            return {} as TEntity;\r\n        }\r\n\r\n        protected getButtons(): Serenity.ToolButton[] {\r\n            return [{\r\n                title: this.getAddButtonCaption(),\r\n                cssClass: 'add-button',\r\n                onClick: () => {\r\n                    this.createEntityDialog(this.getItemType(), dlg => {\r\n                        var dialog = dlg as GridEditorDialog<TEntity>;\r\n                        dialog.onSave = (opt, callback) => this.save(opt, callback);\r\n                        dialog.loadEntityAndOpenDialog(this.getNewEntity());\r\n                    });\r\n                }\r\n            }];\r\n        }\r\n\r\n        protected editItem(entityOrId: any): void {\r\n\r\n            var id = entityOrId;\r\n            var item = this.view.getItemById(id);\r\n            this.createEntityDialog(this.getItemType(), dlg => {\r\n                var dialog = dlg as GridEditorDialog<TEntity>;\r\n                dialog.onDelete = (opt, callback) => {\r\n                    if (!this.deleteEntity(id)) {\r\n                        return;\r\n                    }\r\n                    callback({});\r\n                };\r\n\r\n                dialog.onSave = (opt, callback) => this.save(opt, callback);\r\n                dialog.loadEntityAndOpenDialog(item);\r\n            });;\r\n        }\r\n\r\n        public getEditValue(property, target) {\r\n            target[property.name] = this.value;\r\n        }\r\n\r\n        public setEditValue(source, property) {\r\n            this.value = source[property.name];\r\n        }\r\n\r\n        public get value(): TEntity[] {\r\n            var p = this.getIdProperty();\r\n            return this.view.getItems().map(x => {\r\n                var y = Q.deepClone(x);\r\n                var id = y[p];\r\n                if (id && id.toString().charAt(0) == '`')\r\n                    delete y[p];\r\n                return y;\r\n            });\r\n        }\r\n\r\n        public set value(value: TEntity[]) {\r\n            var p = this.getIdProperty();\r\n            this.view.setItems((value || []).map(x => {\r\n                var y = Q.deepClone(x);\r\n                if ((y as any)[p] == null)\r\n                    (y as any)[p] = \"`\" + this.getNextId();\r\n                return y;\r\n            }), true);\r\n        }\r\n\r\n        protected getGridCanLoad() {\r\n            return false;\r\n        }\r\n\r\n        protected usePager() {\r\n            return false;\r\n        }\r\n\r\n        protected getInitialTitle() {\r\n            return null;\r\n        }\r\n\r\n        protected createQuickSearchInput() {\r\n        }\r\n    }\r\n}","namespace PatientManagement.Common {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class GridEditorDialog<TEntity> extends Serenity.EntityDialog<TEntity, any> {\r\n        protected getIdProperty() { return \"__id\"; }\r\n\r\n        public onSave: (options: Serenity.ServiceOptions<Serenity.SaveResponse>,\r\n            callback: (response: Serenity.SaveResponse) => void) => void;\r\n\r\n        public onDelete: (options: Serenity.ServiceOptions<Serenity.DeleteResponse>,\r\n            callback: (response: Serenity.DeleteResponse) => void) => void;\r\n\r\n        public destroy() {\r\n            this.onSave = null;\r\n            this.onDelete = null;\r\n            super.destroy();\r\n        }\r\n\r\n        protected updateInterface() {\r\n            super.updateInterface();\r\n\r\n            // apply changes button doesn't work properly with in-memory grids yet\r\n            if (this.applyChangesButton) {\r\n                this.applyChangesButton.hide();\r\n            }\r\n        }\r\n\r\n        protected saveHandler(options: Serenity.ServiceOptions<Serenity.SaveResponse>,\r\n            callback: (response: Serenity.SaveResponse) => void): void {\r\n            this.onSave && this.onSave(options, callback);\r\n        }\r\n\r\n        protected deleteHandler(options: Serenity.ServiceOptions<Serenity.DeleteResponse>,\r\n            callback: (response: Serenity.DeleteResponse) => void): void {\r\n            this.onDelete && this.onDelete(options, callback);\r\n        }\r\n    }\r\n}","namespace PatientManagement.LanguageList {\r\n    export function getValue() {\r\n        var result: string[][] = [];\r\n        for (var k of Administration.LanguageRow.getLookup().items) {\r\n            if (k.LanguageId !== 'en') {\r\n                result.push([k.Id.toString(), k.LanguageName]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","namespace PatientManagement.Common {\r\n    export class LanguageSelection extends Serenity.Widget<any> {\r\n        constructor(select: JQuery, currentLanguage: string) {\r\n            super(select);\r\n\r\n            currentLanguage = Q.coalesce(currentLanguage, 'en');\r\n\r\n            this.change(e => {\r\n                $.cookie('LanguagePreference', select.val(), {\r\n                    path: Q.Config.applicationPath,\r\n                    expires: 365\r\n                });\r\n                window.location.reload(true);\r\n            });\r\n\r\n            Q.getLookupAsync<Administration.LanguageRow>('Administration.Language').then(x => {\r\n                if (!Q.any(x.items, z => z.LanguageId === currentLanguage)) {\r\n                    var idx = currentLanguage.lastIndexOf('-');\r\n                    if (idx >= 0) {\r\n                        currentLanguage = currentLanguage.substr(0, idx);\r\n                        if (!Q.any(x.items, y => y.LanguageId === currentLanguage)) {\r\n                            currentLanguage = 'en';\r\n                        }\r\n                    }\r\n                    else {\r\n                        currentLanguage = 'en';\r\n                    }\r\n                }\r\n\r\n                for (var l of x.items) {\r\n                    Q.addOption(select, l.LanguageId, l.LanguageName);\r\n                }\r\n\r\n                select.val(currentLanguage);\r\n            });\r\n        }\r\n    }\r\n}","/// <reference types=\"jqueryui\" />\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    export class NotificationDropdownMenu extends Serenity.TemplatedWidget<any> {\r\n        protected getService() { return NotificationsService.baseUrl; }\r\n        private notificationIds: number[];\r\n\r\n        constructor(elem: JQuery, opt: {}) {\r\n            super(elem, opt);\r\n\r\n            this.byId('NotificationDropdownMenuHeader').text(Q.text(\"Site.Layout.NotificationMenuHeader\"));\r\n            this.byId('NotificationDropdownMenuFooter').text(Q.text(\"Site.Layout.NotificationMenuFooter\"));\r\n\r\n            var toggleMenuButton = this.byId('NotificationDropdownMenuToggle');\r\n            toggleMenuButton.click((e) => this.openClick(e));\r\n            PatientManagement.NotificationsService.CountNotifications({},\r\n                resp => {\r\n                    this.byId('NotificationCounterLabel').text(resp);\r\n\r\n                });\r\n\r\n        };\r\n\r\n        public updateNotifications = (): void => {\r\n\r\n            PatientManagement.NotificationsService.ListForDropdown({},\r\n                resp => {\r\n\r\n                    this.byId('NotificationCounterLabel').text(resp.Entities.length);\r\n\r\n                    var notifactionList = this.byId('NotificationDropdownMenuMessages');\r\n\r\n                    notifactionList.children().remove();\r\n\r\n                    if (resp.Entities.length > 0) {\r\n\r\n\r\n                        var index = 0;\r\n                        this.notificationIds = new Array<number>();\r\n\r\n                        for (var t1 = 0; t1 < resp.Entities.length; t1++) {\r\n                            var item = resp.Entities[t1];\r\n\r\n                            this.notificationIds.push(item.NotificationId);\r\n                            var a = $('<a/>');\r\n\r\n                            var div = \"<div class='pull-left'><img src='\" + item.InsertUserPicture + \"' class='img-circle' alt='User Image'></div>\";\r\n                            a.append(div);\r\n\r\n                            //TODO Fix date\r\n                            var dateInserted = Q.formatDate(item.InsertDate);\r\n                            var userH4 = \"<h4><div>\" + item.InsertUserDisplayName + \"</div><small> <i class='fa fa-clock-o'> </i> \" + dateInserted + \"</small></h4>\";\r\n                            a.append(userH4);\r\n\r\n                            var p = $('<p/>').text(item.Text);\r\n                            a.append(p);\r\n\r\n                            notifactionList.append(a);\r\n\r\n                        }\r\n                    } else {\r\n                        var a = $('<a/>');\r\n                        var h4 = $('<h4/>');\r\n\r\n                        h4.text(Q.text(\"Site.Layout.NoNotificationMenu\"));\r\n                        a.append(h4)\r\n                        notifactionList.append(a);\r\n                    }\r\n\r\n\r\n                    this.markAsSeen();\r\n\r\n                });\r\n        };\r\n\r\n        protected openClick(e)\r\n        {\r\n            e.preventDefault();\r\n            if ($('#NotificationDropdownMenu').hasClass(\"open\"))\r\n                return;\r\n\r\n            //if (this.byId('Preloader').length) {\r\n                this.updateNotifications();\r\n\r\n\r\n         \r\n\r\n        }\r\n\r\n        protected markAsSeen() {\r\n\r\n            var entities = new Array<PatientManagement.UserNotificationsRow>();\r\n            for (var id in this.notificationIds) {\r\n                var entity = <PatientManagement.UserNotificationsRow>{};\r\n\r\n                entity.NotificationId = this.notificationIds[Number(id)];\r\n\r\n                if (entities.indexOf(this.notificationIds[Number(id)]) > -1)\r\n                    return;\r\n\r\n                entities.push(entity);\r\n            }\r\n\r\n            PatientManagement.UserNotificationsService.CreateList({\r\n                Entity: entities\r\n            }, resp => {\r\n                this.byId('NotificationCounterLabel').text(0);\r\n\r\n            });\r\n        }\r\n}\r\n\r\n}\r\n","namespace PatientManagement.Common {\r\n\r\n    export class RecieveNotificationToggle extends Serenity.Widget<any> {\r\n\r\n        constructor(input: JQuery, opt: BootstrapSwitchOptions) {\r\n            super(input, opt);\r\n\r\n            console.log(this.options.state);\r\n\r\n            this.options.onSwitchChange = (event, state) => {\r\n                $.cookie('NotificationPreference', state, {\r\n                    path: Q.Config.applicationPath,\r\n                    expires: 365\r\n                });\r\n            };\r\n            this.options.onText = Q.text(\"Site.Layout.RecieveNotificationToggleOn\");\r\n            this.options.offText = Q.text(\"Site.Layout.RecieveNotificationToggleOff\");\r\n            this.options.onColor = \"success\";\r\n            this.options.offColor = \"warning\";\r\n            input.attr('type', 'checkbox').bootstrapSwitch(this.options);\r\n\r\n           \r\n        }\r\n    }\r\n}","namespace PatientManagement.Common {\r\n    export class SidebarSearch extends Serenity.Widget<any> {\r\n        private menuUL: JQuery;\r\n\r\n        constructor(input: JQuery, menuUL: JQuery) {\r\n            super(input);\r\n\r\n            new Serenity.QuickSearchInput(input, {\r\n                onSearch: (field, text, success) => {\r\n                    this.updateMatchFlags(text);\r\n                    success(true);\r\n                }\r\n            });\r\n\r\n            this.menuUL = menuUL;\r\n        }\r\n\r\n        protected updateMatchFlags(text: string) {\r\n            var liList = this.menuUL.find('li').removeClass('non-match');\r\n\r\n            text = Q.trimToNull(text);\r\n\r\n            if (text == null) {\r\n                liList.show();\r\n                liList.removeClass('expanded');\r\n                return;\r\n            }\r\n\r\n            var parts = text.replace(',', ' ').split(' ').filter(x => !Q.isTrimmedEmpty(x));\r\n\r\n            for (var i = 0; i < parts.length; i++) {\r\n                parts[i] = Q.trimToNull(Select2.util.stripDiacritics(parts[i]).toUpperCase());\r\n            }\r\n\r\n            var items = liList;\r\n            items.each(function (idx, e) {\r\n                var x = $(e);\r\n                var title = Select2.util.stripDiacritics(Q.coalesce(x.text(), '').toUpperCase());\r\n                for (var p of parts) {\r\n                    if (p != null && !(title.indexOf(p) !== -1)) {\r\n                        x.addClass('non-match');\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n\r\n            var matchingItems = items.not('.non-match');\r\n\r\n            var visibles = matchingItems.parents('li').add(matchingItems);\r\n\r\n            var nonVisibles = liList.not(visibles);\r\n            nonVisibles.hide().addClass('non-match');\r\n\r\n            visibles.show();\r\n            liList.addClass('expanded');\r\n        }\r\n    }\r\n}","namespace PatientManagement.Common {\r\n    export class ThemeSelection extends Serenity.Widget<any> {\r\n        constructor(select: JQuery) {\r\n            super(select);\r\n\r\n            this.change(e => {\r\n                $.cookie('ThemePreference', select.val(), {\r\n                    path: Q.Config.applicationPath,\r\n                    expires: 365\r\n                });\r\n                $('body').removeClass('skin-' + this.getCurrentTheme());\r\n                $('body').addClass('skin-' + select.val());\r\n            });\r\n\r\n            Q.addOption(select, 'blue', Q.text('Site.Layout.ThemeBlue'));\r\n            Q.addOption(select, 'blue-light', Q.text('Site.Layout.ThemeBlueLight'));\r\n            Q.addOption(select, 'purple', Q.text('Site.Layout.ThemePurple'));\r\n            Q.addOption(select, 'purple-light', Q.text('Site.Layout.ThemePurpleLight'));\r\n            Q.addOption(select, 'red', Q.text('Site.Layout.ThemeRed'));\r\n            Q.addOption(select, 'red-light', Q.text('Site.Layout.ThemeRedLight'));\r\n            Q.addOption(select, 'green', Q.text('Site.Layout.ThemeGreen'));\r\n            Q.addOption(select, 'green-light', Q.text('Site.Layout.ThemeGreenLight'));\r\n            Q.addOption(select, 'yellow', Q.text('Site.Layout.ThemeYellow'));\r\n            Q.addOption(select, 'yellow-light', Q.text('Site.Layout.ThemeYellowLight'));\r\n            Q.addOption(select, 'black', Q.text('Site.Layout.ThemeBlack'));\r\n            Q.addOption(select, 'black-light', Q.text('Site.Layout.ThemeBlackLight'));\r\n\r\n            select.val(this.getCurrentTheme());\r\n        }\r\n\r\n        protected getCurrentTheme() {\r\n            var skinClass = Q.first(($('body').attr('class') || '').split(' '), x => Q.startsWith(x, 'skin-'));\r\n            if (skinClass) {\r\n                return skinClass.substr(5);\r\n            }\r\n\r\n            return 'blue';\r\n        }\r\n    }\r\n}","declare var jsPDF;\r\n\r\nnamespace PatientManagement.Common {\r\n    export interface PdfExportOptions {\r\n        grid: Serenity.DataGrid<any, any>;\r\n        onViewSubmit: () => boolean;\r\n        title?: string;\r\n        hint?: string;\r\n        separator?: boolean;\r\n        reportTitle?: string;\r\n        titleTop?: number;\r\n        titleFontSize?: number;\r\n        fileName?: string;\r\n        pageNumbers?: boolean;\r\n        columnTitles?: { [key: string]: string };\r\n        tableOptions?: jsPDF.AutoTableOptions;\r\n        output?: string;\r\n        autoPrint?: boolean;\r\n    }\r\n\r\n    export namespace PdfExportHelper {\r\n\r\n        function toAutoTableColumns(srcColumns: Slick.Column[], columnStyles: { [dataKey: string]: jsPDF.AutoTableStyles; },\r\n                columnTitles: { [key: string]: string }) {\r\n            return srcColumns.map(src => {\r\n                let col: jsPDF.AutoTableColumn = {\r\n                    dataKey: src.id || src.field,\r\n                    title: src.name || ''\r\n                };\r\n\r\n                if (columnTitles && columnTitles[col.dataKey] != null)\r\n                    col.title = columnTitles[col.dataKey];\r\n\r\n                let style: jsPDF.AutoTableStyles = {};\r\n                if ((src.cssClass || '').indexOf(\"align-right\") >= 0)\r\n                    style.halign = 'right';\r\n                else if ((src.cssClass || '').indexOf(\"align-center\") >= 0)\r\n                    style.halign = 'center';\r\n\r\n                columnStyles[col.dataKey] = style;\r\n\r\n                return col;\r\n            });\r\n        }\r\n\r\n        function toAutoTableData(entities: any[], keys: string[], srcColumns: Slick.Column[] ) {\r\n            let el = document.createElement('span');\r\n            let row = 0;\r\n            return entities.map(item => {\r\n                let dst = {};\r\n                for (let cell = 0; cell < srcColumns.length; cell++) {\r\n                    let src = srcColumns[cell];\r\n                    let fld = src.field || '';\r\n                    let key = keys[cell];\r\n                    let txt;\r\n                    let html: string;\r\n                    if (src.formatter) {\r\n                        html = src.formatter(row, cell, item[fld], src, item);\r\n                    }\r\n                    else if (src.format) {\r\n                        html = src.format({ row: row, cell: cell, item: item, value: item[fld] });\r\n                    }\r\n                    else {\r\n                        dst[key] = item[fld];\r\n                        continue;\r\n                    }\r\n\r\n                    if (!html || (html.indexOf('<') < 0 && html.indexOf('&') < 0))\r\n                        dst[key] = html;\r\n                    else {\r\n                        el.innerHTML = html;\r\n                        if (el.children.length == 1 &&\r\n                            $(el.children[0]).is(\":input\")) {\r\n                            dst[key] = $(el.children[0]).val();\r\n                        }\r\n                        else if (el.children.length == 1 &&\r\n                            $(el.children).is('.check-box')) {\r\n                            dst[key] = $(el.children).hasClass(\"checked\") ? \"X\" : \"\"\r\n                        }\r\n                        else\r\n                            dst[key] = el.textContent || '';\r\n                    }\r\n                }\r\n                row++;\r\n                return dst;\r\n            });\r\n        }\r\n\r\n        export function exportToPdf(options: PdfExportOptions): void {\r\n\r\n            var g = options.grid;\r\n\r\n            if (!options.onViewSubmit())\r\n                return;\r\n\r\n            includeAutoTable();\r\n\r\n            var request = Q.deepClone(g.view.params) as Serenity.ListRequest;\r\n            request.Take = 0;\r\n            request.Skip = 0;\r\n\r\n            var sortBy = g.view.sortBy;\r\n            if (sortBy != null)\r\n                request.Sort = sortBy;\r\n\r\n            var gridColumns = g.slickGrid.getColumns();\r\n            gridColumns = gridColumns.filter(x => x.id !== \"__select__\");\r\n\r\n            request.IncludeColumns = [];\r\n            for (var column of gridColumns)\r\n                request.IncludeColumns.push(column.id || column.field);\r\n\r\n            Q.serviceCall({\r\n                url: g.view.url,\r\n                request: request,\r\n                onSuccess: response => {\r\n                    let doc = new jsPDF('l', 'pt');\r\n                    let srcColumns = gridColumns;\r\n                    let columnStyles: { [dataKey: string]: jsPDF.AutoTableStyles; } = {};\r\n                    let columns = toAutoTableColumns(srcColumns, columnStyles, options.columnTitles);\r\n                    var keys = columns.map(x => x.dataKey);\r\n                    let entities = (<Serenity.ListResponse<any>>response).Entities || [];\r\n                    let data = toAutoTableData(entities, keys, srcColumns);\r\n\r\n                    doc.setFontSize(options.titleFontSize || 10);\r\n                    doc.setFontStyle('bold');\r\n                    let reportTitle = options.reportTitle || g.getTitle() || \"Report\";\r\n\r\n                    doc.autoTableText(reportTitle, doc.internal.pageSize.width / 2,\r\n                        options.titleTop || 25, { halign: 'center' });\r\n\r\n                    var totalPagesExp = \"{{T}}\";\r\n\r\n                    let pageNumbers = options.pageNumbers == null || options.pageNumbers;\r\n                    var autoOptions = $.extend({\r\n                        margin: { top: 25, left: 25, right: 25, bottom: pageNumbers ? 25 : 30 },\r\n                        startY: 60,\r\n                        styles: {\r\n                            fontSize: 8,\r\n                            overflow: 'linebreak',\r\n                            cellPadding: 2,\r\n                            valign: 'middle'\r\n                        },\r\n                        columnStyles: columnStyles\r\n                    }, options.tableOptions);\r\n\r\n                    if (pageNumbers) {\r\n                        var footer = function (data) {\r\n                            var str = data.pageCount;\r\n                            // Total page number plugin only available in jspdf v1.0+\r\n                            if (typeof doc.putTotalPages === 'function') {\r\n                                str = str + \" / \" + totalPagesExp;\r\n                            }\r\n                            doc.autoTableText(str, doc.internal.pageSize.width / 2,\r\n                                doc.internal.pageSize.height - autoOptions.margin.bottom, {\r\n                                    halign: 'center'\r\n                                });\r\n                        };\r\n                        autoOptions.afterPageContent = footer;\r\n                    }\r\n\r\n                    doc.autoTable(columns, data, autoOptions);\r\n\r\n                    if (typeof doc.putTotalPages === 'function') {\r\n                        doc.putTotalPages(totalPagesExp);\r\n                    }\r\n\r\n\r\n                    if (!options.output || options.output == \"file\") {\r\n                        var fileName = options.reportTitle || \"{0}_{1}.pdf\";\r\n                        fileName = Q.format(fileName, g.getTitle() || \"report\",\r\n                            Q.formatDate(new Date(), \"yyyyMMdd_HHmm\"));\r\n                        doc.save(fileName);\r\n                        return;\r\n                    }\r\n\r\n                    if (options.autoPrint)\r\n                        doc.autoPrint();\r\n\r\n                    var output = options.output;\r\n                    if (output == 'newwindow' || '_blank')\r\n                        output = 'dataurlnewwindow';\r\n                    else if (output == 'window')\r\n                        output = 'datauri';\r\n\r\n                    doc.output(output);\r\n                }\r\n            }); \r\n        }\r\n\r\n        export function createToolButton(options: PdfExportOptions) {\r\n\r\n            return <Serenity.ToolButton>{\r\n                title: options.title || '',\r\n                hint: options.hint || 'PDF',\r\n                cssClass: 'export-pdf-button',\r\n                onClick: () => exportToPdf(options),\r\n                separator: options.separator\r\n            };\r\n        }\r\n\r\n        function includeJsPDF() {\r\n            if (typeof jsPDF !== \"undefined\")\r\n                return;\r\n\r\n            var script = $(\"jsPDFScript\");\r\n            if (script.length > 0)\r\n                return;\r\n\r\n            $(\"<script/>\")\r\n                .attr(\"type\", \"text/javascript\")\r\n                .attr(\"id\", \"jsPDFScript\")\r\n                .attr(\"src\", Q.resolveUrl(\"~/Scripts/jspdf.min.js\"))\r\n                .appendTo(document.head);\r\n        }\r\n\r\n        function includeAutoTable() {\r\n            includeJsPDF();\r\n\r\n            if (typeof jsPDF === \"undefined\" ||\r\n                typeof (jsPDF as any).API == \"undefined\" ||\r\n                typeof (jsPDF as any).API.autoTable !== \"undefined\")\r\n                return;\r\n\r\n            var script = $(\"jsPDFAutoTableScript\");\r\n            if (script.length > 0)\r\n                return;\r\n\r\n            $(\"<script/>\")\r\n                .attr(\"type\", \"text/javascript\")\r\n                .attr(\"id\", \"jsPDFAutoTableScript\")\r\n                .attr(\"src\", Q.resolveUrl(\"~/Scripts/jspdf.plugin.autotable.min.js\"))\r\n                .appendTo(document.head);\r\n        }\r\n    }\r\n}\r\n","declare var jsPDF;\r\n\r\nnamespace PatientManagement.Common {\r\n    export class ReportDialog extends Serenity.TemplatedDialog<ReportDialogOptions> {\r\n\r\n        private report: Serenity.Reporting.ReportRetrieveResponse;\r\n        private propertyGrid: Serenity.PropertyGrid;\r\n\r\n        constructor(options: ReportDialogOptions) {\r\n            super(options);\r\n\r\n            this.updateInterface();\r\n            this.loadReport(this.options.reportKey);\r\n        }\r\n\r\n        protected getDialogButtons() {\r\n            return null;\r\n        }\r\n\r\n        protected createPropertyGrid() {\r\n            this.propertyGrid && this.byId('PropertyGrid').html('').attr('class', '');\r\n            this.propertyGrid = new Serenity.PropertyGrid(this.byId('PropertyGrid'), {\r\n                idPrefix: this.idPrefix,\r\n                useCategories: true,\r\n                items: this.report.Properties\r\n            }).init(null);\r\n        }\r\n\r\n        protected loadReport(reportKey: string) {\r\n            Q.serviceCall({\r\n                url: Q.resolveUrl('~/Report/Retrieve'),\r\n                request: {\r\n                    ReportKey: reportKey\r\n                },\r\n                onSuccess: response => {\r\n                    this.report = response as Serenity.Reporting.ReportRetrieveResponse;\r\n                    this.element.dialog().dialog('option', 'title', this.report.Title);\r\n                    this.createPropertyGrid();\r\n                    this.propertyGrid.load(this.report.InitialSettings || {});\r\n                    this.updateInterface();\r\n                    this.dialogOpen();\r\n                }\r\n            });\r\n        }\r\n\r\n        protected updateInterface() {\r\n            this.toolbar.findButton('print-preview-button')\r\n                .toggle(this.report && !this.report.IsDataOnlyReport);\r\n\r\n            this.toolbar.findButton('export-pdf-button')\r\n                .toggle(this.report && !this.report.IsDataOnlyReport);\r\n\r\n            this.toolbar.findButton('export-xlsx-button')\r\n                .toggle(this.report && this.report.IsDataOnlyReport);\r\n        }\r\n\r\n        executeReport(target: string, ext: string, download: boolean) {\r\n            if (!this.validateForm()) {\r\n                return;\r\n            }\r\n\r\n            var opt = {};\r\n            this.propertyGrid.save(opt);\r\n            ReportHelper.execute({\r\n                download: download,\r\n                reportKey: this.report.ReportKey,\r\n                extension: ext as any,\r\n                target: target,\r\n                params: opt\r\n            });\r\n        }\r\n    \r\n        getToolbarButtons() {\r\n            return [\r\n                {\r\n                    title: 'Preview',\r\n                    cssClass: 'print-preview-button',\r\n                    onClick: () => this.executeReport('_blank', null, false)\r\n                },\r\n                {\r\n                    title: 'PDF',\r\n                    cssClass: 'export-pdf-button',\r\n                    onClick: () => this.executeReport('_blank', 'pdf', true)\r\n                },\r\n                {\r\n                    title: 'Excel',\r\n                    cssClass: 'export-xlsx-button',\r\n                    onClick: () => this.executeReport('_blank', 'xlsx', true)\r\n                }\r\n            ];\r\n        }\r\n    }\r\n\r\n    export interface ReportDialogOptions {\r\n        reportKey: string;\r\n    }\r\n}\r\n","namespace PatientManagement.Common {\r\n\r\n    export interface ReportExecuteOptions {\r\n        reportKey: string;\r\n        download?: boolean;\r\n        extension?: 'pdf' | 'htm' | 'html' | 'xlsx' | 'docx';\r\n        getParams?: () => any;\r\n        params?: { [key: string]: any }\r\n        target?: string;\r\n    }\r\n\r\n    export interface ReportButtonOptions extends ReportExecuteOptions {\r\n        title?: string;\r\n        cssClass?: string;\r\n        icon?: string;\r\n    }\r\n\r\n    export namespace ReportHelper {\r\n\r\n        export function createToolButton(options: ReportButtonOptions): Serenity.ToolButton {\r\n            return {\r\n                title: Q.coalesce(options.title, 'Report'),\r\n                cssClass: Q.coalesce(options.cssClass, 'print-button'),\r\n                icon: options.icon,\r\n                onClick: () => {\r\n                    ReportHelper.execute(options);\r\n                }\r\n            };\r\n        }\r\n\r\n        export function execute(options: ReportExecuteOptions) {\r\n            var opt = options.getParams ? options.getParams() : options.params;\r\n\r\n            Q.postToUrl({\r\n                url: '~/Report/' + (options.download ? 'Download' : 'Render'),\r\n                params: {\r\n                    key: options.reportKey,\r\n                    ext: Q.coalesce(options.extension, 'pdf'),\r\n                    opt: opt ? $.toJSON(opt) : ''\r\n                },\r\n                target: Q.coalesce(options.target, '_blank')\r\n            });\r\n        }\r\n    }\r\n}","declare var jsPDF;\r\n\r\nnamespace PatientManagement.Common {\r\n    export class ReportPage extends Serenity.Widget<any> {\r\n\r\n        private reportKey: string;\r\n        private propertyItems: Serenity.PropertyItem[];\r\n        private propertyGrid: Serenity.PropertyGrid;\r\n\r\n        constructor(element: JQuery) {\r\n            super(element);\r\n\r\n            $('.report-link', element).click(e => this.reportLinkClick(e));\r\n            $('div.line', element).click(e => this.categoryClick(e));\r\n            new Serenity.QuickSearchInput($('.s-QuickSearchBar input', element), {\r\n                onSearch: (field, text, done) => {\r\n                    this.updateMatchFlags(text);\r\n                    done(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        protected updateMatchFlags(text: string) {\r\n            var liList = $('.report-list', this.element).find('li').removeClass('non-match');\r\n            text = Q.trimToNull(text);\r\n            if (!text) {\r\n                liList.children('ul').hide();\r\n                liList.show().removeClass('expanded');\r\n                return;\r\n            }\r\n\r\n            text = Select2.util.stripDiacritics(text).toUpperCase();\r\n\r\n            var reportItems = liList.filter('.report-item');\r\n            reportItems.each(function (ix, e) {\r\n                var x = $(e);\r\n                var title = Select2.util.stripDiacritics(Q.coalesce(x.text(), '').toUpperCase());\r\n                if (title.indexOf(text) < 0) {\r\n                    x.addClass('non-match');\r\n                }\r\n            });\r\n\r\n            var matchingItems = reportItems.not('.non-match');\r\n            var visibles = matchingItems.parents('li').add(matchingItems);\r\n            var nonVisibles = liList.not(visibles);\r\n            nonVisibles.hide().addClass('non-match');\r\n            visibles.show();\r\n            if (visibles.length <= 100) {\r\n                liList.children('ul').show();\r\n                liList.addClass('expanded');\r\n            }\r\n        }\r\n\r\n        protected categoryClick(e) {\r\n            var li = $(e.target).closest('li');\r\n            if (li.hasClass('expanded')) {\r\n                li.find('ul').hide('fast');\r\n                li.removeClass('expanded');\r\n                li.find('li').removeClass('expanded');\r\n            }\r\n            else {\r\n                li.addClass('expanded');\r\n                li.children('ul').show('fast');\r\n                if (li.children('ul').children('li').length === 1 && !li.children('ul').children('li').hasClass('expanded')) {\r\n                    li.children('ul').children('li').children('.line').click();\r\n                }\r\n            }\r\n        }\r\n\r\n        protected reportLinkClick(e) {\r\n            e.preventDefault();\r\n            new ReportDialog({\r\n                reportKey: $(e.target).data('key')\r\n            }).dialogOpen();\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"../Common/Helpers/LanguageList.ts\" />\r\n\r\nnamespace PatientManagement.ScriptInitialization {\r\n    Q.Config.responsiveDialogs = true;\r\n    Q.Config.rootNamespaces.push('PatientManagement');\r\n    Serenity.EntityDialog.defaultLanguageList = LanguageList.getValue;\r\n}","namespace PatientManagement.Common {\r\n    export class UserPreferenceStorage implements Serenity.SettingStorage {\r\n        getItem(key: string): string {\r\n            let value: string;\r\n\r\n            UserPreferenceService.Retrieve({\r\n                PreferenceType: \"UserPreferenceStorage\",\r\n                Name: key\r\n            },\r\n            response => value = response.Value,\r\n            {\r\n                async: false\r\n            });\r\n\r\n            return value;\r\n        }\r\n\r\n        setItem(key: string, data: string): void {\r\n            UserPreferenceService.Update({\r\n                PreferenceType: \"UserPreferenceStorage\",\r\n                Name: key,\r\n                Value: data\r\n            });\r\n        }\r\n    }\r\n}","namespace PatientManagement.Membership {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class ChangePasswordPanel extends Serenity.PropertyPanel<ChangePasswordRequest, any> {\r\n\r\n        protected getFormKey() { return ChangePasswordForm.formKey; }\r\n\r\n        private form: ChangePasswordForm;\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n\r\n            this.form = new ChangePasswordForm(this.idPrefix);\r\n            this.form.NewPassword.addValidationRule(this.uniqueName, e => {\r\n                if (this.form.w('ConfirmPassword', Serenity.PasswordEditor).value.length < 7) {\r\n                    return Q.format(Q.text('Validation.MinRequiredPasswordLength'), 7);\r\n                }\r\n            });\r\n\r\n            this.form.ConfirmPassword.addValidationRule(this.uniqueName, e => {\r\n                if (this.form.ConfirmPassword.value !== this.form.NewPassword.value) {\r\n                    return Q.text('Validation.PasswordConfirm');\r\n                }\r\n            });\r\n\r\n            this.byId('SubmitButton').click(e => {\r\n                e.preventDefault();\r\n\r\n                if (!this.validateForm()) {\r\n                    return;\r\n                }\r\n\r\n                var request = this.getSaveEntity();\r\n                Q.serviceCall({\r\n                    url: Q.resolveUrl('~/Account/ChangePassword'),\r\n                    request: request,\r\n                    onSuccess: response => {\r\n                        Q.information(Q.text('Forms.Membership.ChangePassword.Success'), () => {\r\n                            window.location.href = Q.resolveUrl('~/');\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n}","namespace PatientManagement.Membership {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class ForgotPasswordPanel extends Serenity.PropertyPanel<ForgotPasswordRequest, any> {\r\n\r\n        protected getFormKey() { return ForgotPasswordForm.formKey; }\r\n\r\n        private form: ForgotPasswordForm;\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n\r\n            this.form = new ForgotPasswordForm(this.idPrefix);\r\n\r\n            this.byId('SubmitButton').click(e => {\r\n                e.preventDefault();\r\n\r\n                if (!this.validateForm()) {\r\n                    return;\r\n                }\r\n\r\n                var request = this.getSaveEntity();\r\n                Q.serviceCall({\r\n                    url: Q.resolveUrl('~/Account/ForgotPassword'),\r\n                    request: request,\r\n                    onSuccess: response => {\r\n                        Q.information(Q.text('Forms.Membership.ForgotPassword.Success'), () => {\r\n                            window.location.href = Q.resolveUrl('~/');\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n}","namespace PatientManagement.Membership {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class LoginPanel extends Serenity.PropertyPanel<LoginRequest, any> {\r\n\r\n        protected getFormKey() { return LoginForm.formKey; }\r\n\r\n        private form: LoginForm;\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n\r\n            $(function () {\r\n                ($('body') as any).vegas({\r\n                    delay: 10000,\r\n                    cover: true,\r\n                    overlay: Q.resolveUrl(\"~/Scripts/vegas/overlays/01.png\"),\r\n                    slides: [\r\n                        { src: Q.resolveUrl('~/Content/site/slides/slide1.jpg'), transition: 'fade' },\r\n                        { src: Q.resolveUrl('~/Content/site/slides/slide2.jpg'), transition: 'fade' },\r\n                        { src: Q.resolveUrl('~/Content/site/slides/slide3.jpg'), transition: 'zoomOut' },\r\n                        { src: Q.resolveUrl('~/Content/site/slides/slide4.jpg'), transition: 'blur' }\r\n                    ]\r\n                });\r\n            });\r\n\r\n            this.form = new LoginForm(this.idPrefix);\r\n\r\n            this.byId('LoginButton').click(e => {\r\n                e.preventDefault();\r\n\r\n                if (!this.validateForm()) {\r\n                    return;\r\n                }\r\n\r\n                var request = this.getSaveEntity();\r\n                Q.serviceCall({\r\n                    url: Q.resolveUrl('~/Account/Login'),\r\n                    request: request,\r\n                    onSuccess: function (response) {\r\n                        var q = Q.parseQueryString();\r\n                        var returnUrl = q['returnUrl'] || q['ReturnUrl'];\r\n                        if (returnUrl) {\r\n                            window.location.href = returnUrl;\r\n                        }\r\n                        else {\r\n                            window.location.href = Q.resolveUrl('~/');\r\n                        }\r\n                    }\r\n                });\r\n\r\n            });\r\n        }\r\n    }\r\n}","namespace PatientManagement.Membership {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class ResetPasswordPanel extends Serenity.PropertyPanel<ResetPasswordRequest, any> {\r\n\r\n        protected getFormKey() { return ResetPasswordForm.formKey; }\r\n\r\n        private form: ResetPasswordForm;\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n\r\n            this.form = new ResetPasswordForm(this.idPrefix);\r\n\r\n            this.form.NewPassword.addValidationRule(this.uniqueName, e => {\r\n                if (this.form.ConfirmPassword.value.length < 7) {\r\n                    return Q.format(Q.text('Validation.MinRequiredPasswordLength'), 7);\r\n                }\r\n            });\r\n\r\n            this.form.ConfirmPassword.addValidationRule(this.uniqueName, e => {\r\n                if (this.form.ConfirmPassword.value !== this.form.NewPassword.value) {\r\n                    return Q.text('Validation.PasswordConfirm');\r\n                }\r\n            });\r\n\r\n            this.byId('SubmitButton').click(e => {\r\n                e.preventDefault();\r\n\r\n                if (!this.validateForm()) {\r\n                    return;\r\n                }\r\n\r\n                var request = this.getSaveEntity();\r\n                request.Token = this.byId('Token').val();\r\n                Q.serviceCall({\r\n                    url: Q.resolveUrl('~/Account/ResetPassword'),\r\n                    request: request,\r\n                    onSuccess: response => {\r\n                        Q.information(Q.text('Forms.Membership.ResetPassword.Success'), () => {\r\n                            window.location.href = Q.resolveUrl('~/Account/Login');\r\n                        });\r\n                    }\r\n                });\r\n\r\n            });\r\n        }\r\n    }\r\n}","/// <reference types=\"jqueryui\" />\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n    @Serenity.Decorators.registerEditor()\r\n    export class OfferDropDownEditor extends Serenity.Select2Editor<any, any> {\r\n        constructor(container: JQuery) {\r\n            super(container, null);\r\n\r\n            $.get(\"/api/offers/bgn\", data => {\r\n                console.log(data);\r\n              //  var offers = $.parseJSON(data);\r\n              \r\n            });\r\n\r\n            \r\n            this.addOption(\"key2\", \"Text 2\");\r\n        }\r\n    }\r\n}","namespace PatientManagement.Membership {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class SignUpPanel extends Serenity.PropertyPanel<SignUpRequest, any> {\r\n\r\n        protected getFormKey() { return SignUpForm.formKey; }\r\n\r\n        private form: SignUpForm;\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n\r\n            this.form = new SignUpForm(this.idPrefix);\r\n\r\n            this.form.ConfirmEmail.addValidationRule(this.uniqueName, e => {\r\n                if (this.form.ConfirmEmail.value !== this.form.Email.value) {\r\n                    return Q.text('Validation.EmailConfirm');\r\n                }\r\n            });\r\n\r\n            this.form.ConfirmPassword.addValidationRule(this.uniqueName, e => {\r\n                if (this.form.ConfirmPassword.value !== this.form.Password.value) {\r\n                    return Q.text('Validation.PasswordConfirm');\r\n                }\r\n            });\r\n\r\n            \r\n            this.byId('SubmitButton').click(e => {\r\n                e.preventDefault();\r\n\r\n                if (!this.validateForm()) {\r\n                    return;\r\n                }\r\n\r\n                Q.serviceCall({\r\n                    url: Q.resolveUrl('~/Account/SignUp'),\r\n                    request: {\r\n                        DisplayName: this.form.DisplayName.value,\r\n                        Email: this.form.Email.value,\r\n                        Password: this.form.Password.value\r\n                    },\r\n                    onSuccess: response => {\r\n                        Q.information(Q.text('Forms.Membership.SignUp.Success'), () => {\r\n                            window.location.href = Q.resolveUrl('~/');\r\n                        });\r\n                    }\r\n                });\r\n\r\n            });\r\n        }\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class ActivityDialog extends Serenity.EntityDialog<ActivityRow, any> {\r\n        protected getFormKey() { return ActivityForm.formKey; }\r\n        protected getIdProperty() { return ActivityRow.idProperty; }\r\n        protected getLocalTextPrefix() { return ActivityRow.localTextPrefix; }\r\n        protected getNameProperty() { return ActivityRow.nameProperty; }\r\n        protected getService() { return ActivityService.baseUrl; }\r\n\r\n        protected form = new ActivityForm(this.idPrefix);\r\n\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.maximizable()\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class PatientsDialog extends Serenity.EntityDialog<PatientsRow, any> {\r\n        protected getFormKey() { return PatientsForm.formKey; }\r\n        protected getIdProperty() { return PatientsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return PatientsRow.localTextPrefix; }\r\n        protected getNameProperty() { return PatientsRow.nameProperty; }\r\n        protected getService() { return PatientsService.baseUrl; }\r\n\r\n        protected form = new PatientsForm(this.idPrefix);\r\n        private visitsGrid: PatientVisitsGrid;\r\n        private loadedState: string;\r\n\r\n        private patientHealthForm: PatientHealthForm;\r\n        private patientHealthGrid: Serenity.PropertyGrid;\r\n        private patientValidator: JQueryValidation.Validator;\r\n        private selfChange = 0;\r\n\r\n        private lifeStyleForm: LifeStylesForm;\r\n        private lifeStyleGrid: Serenity.PropertyGrid;\r\n\r\n        private patientActivityForm: ActivityForm;\r\n        private patientActivityGrid: Serenity.PropertyGrid;\r\n\r\n        private patientsFileUploadsGrid: FIleUploadsForPatientGrid;\r\n\r\n        private checkEgn = (egn) => {\r\n            if (egn.length != 10)\r\n                return false;\r\n            if (/[^0-9]/.test(egn))\r\n                return false;\r\n          \r\n            return true;\r\n\r\n        }\r\n        protected isValidDate = (y, m, d):boolean => {\r\n            var date = new Date(y, m - 1, d);\r\n            return date && (date.getMonth() + 1) == m && date.getDate() == Number(d);\r\n        } \r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.form.PersonalNumber.addValidationRule(this.uniqueName, e => {\r\n                if (!this.checkEgn(this.form.PersonalNumber.value)) {\r\n                    return Q.text(\"Site.ValidationError.ValidateEgnNotCorrect\");\r\n                }\r\n\r\n                return null;\r\n            });\r\n\r\n\r\n            //Initialize new instance of visits grid\r\n            this.visitsGrid = new PatientVisitsGrid(this.byId(\"VisitsGrid\"));\r\n            this.visitsGrid.element.flexHeightOnly(1);\r\n\r\n            //Initialize new instance of patient health grid and form\r\n            this.patientHealthGrid = new Serenity.PropertyGrid(this.byId(\"PatientHealthPropertyGrid\"),\r\n                {\r\n                    items: Q.getForm(PatientHealthForm.formKey).filter(x => x.name != \"PatientId\"),\r\n                    useCategories: true\r\n                });\r\n\r\n            this.patientHealthForm = new PatientHealthForm((this.patientHealthGrid as any).idPrefix);\r\n\r\n            //Initialize new instance of LifeStyle grid and form\r\n            this.lifeStyleGrid = new Serenity.PropertyGrid(this.byId(\"LifeStylePropertyGrid\"),\r\n                {\r\n                    items: Q.getForm(LifeStylesForm.formKey).filter(x => x.name != \"PatientId\"),\r\n                    useCategories: true\r\n                });\r\n\r\n            this.lifeStyleForm = new LifeStylesForm((this.lifeStyleGrid as any).idPrefix);\r\n\r\n            //Initialize new instance of LifeStyle grid and form\r\n            this.patientActivityGrid = new Serenity.PropertyGrid(this.byId(\"ActivityPropertyGrid\"),\r\n                {\r\n                    items: Q.getForm(ActivityForm.formKey).filter(x => x.name != \"PatientId\"),\r\n                    useCategories: true\r\n                });\r\n\r\n            this.patientActivityForm = new ActivityForm((this.patientActivityGrid as any).idPrefix);\r\n\r\n\r\n            //Initialize new instance of FileUploads grid and form\r\n            this.patientsFileUploadsGrid = new FIleUploadsForPatientGrid(this.byId(\"FileUploadsPropertyGrid\"));\r\n            this.patientsFileUploadsGrid.element.flexHeightOnly(1);\r\n\r\n            this.patientValidator = this.byId(\"PatientHealthForm\").validate(Q.validateOptions({}));\r\n\r\n            this.patientValidator = this.byId(\"LifeStyleForm\").validate(Q.validateOptions({}));\r\n\r\n            this.patientValidator = this.byId(\"ActivityForm\").validate(Q.validateOptions({}));\r\n\r\n            \r\n            this.byId('NoteList').closest('.field').hide().end().appendTo(this.byId('TabNotes'));\r\n            DialogUtils.pendingChangesConfirmation(this.element, () => this.getSaveState() != this.loadedState);\r\n\r\n            //Add button for saving patient health form\r\n            // ReSharper disable once WrongExpressionStatement\r\n            new Serenity.Toolbar(this.byId(\"PatientHealthToolbar\"),\r\n                {\r\n                    buttons: [\r\n                        {\r\n                            cssClass: \"apply-changes-button\",\r\n                            title: Q.text(\"Controls.EntityDialog.UpdateButton\"),\r\n                            onClick: () => {\r\n                                var id = this.form.PatientId.value;\r\n\r\n                                if (!id)\r\n                                    return;\r\n\r\n                                if (!this.patientValidator.form())\r\n                                    return;\r\n\r\n                                var p = <PatientManagement.PatientHealthRow>{};\r\n                                this.patientHealthGrid.save(p);\r\n\r\n                                PatientManagement.PatientHealthService.Update({\r\n                                    EntityId: id,\r\n                                    Entity: p\r\n                                }, response => {\r\n                                    // reload customer list just in case\r\n                                    Q.reloadLookup(PatientManagement.PatientsRow.lookupKey);\r\n\r\n                                    Q.notifySuccess(Q.text(\"Controls.EntityDialog.SaveSuccessMessage\"));\r\n\r\n                                });\r\n                            }\r\n                        }]\r\n                });\r\n\r\n            //Add button for saving patient life style form\r\n            // ReSharper disable once WrongExpressionStatement\r\n            new Serenity.Toolbar(this.byId(\"LifeStyleToolbar\"),\r\n                {\r\n                    buttons: [\r\n                        {\r\n                            cssClass: \"apply-changes-button\",\r\n                            title: Q.text(\"Controls.EntityDialog.UpdateButton\"),\r\n                            onClick: () => {\r\n                                var id = this.form.PatientId.value;\r\n\r\n                                if (!id)\r\n                                    return;\r\n\r\n                                if (!this.patientValidator.form())\r\n                                    return;\r\n\r\n                                var p = <PatientManagement.LifeStylesRow>{};\r\n                                this.lifeStyleGrid.save(p);\r\n\r\n                                PatientManagement.LifeStylesService.Update({\r\n                                    EntityId: id,\r\n                                    Entity: p\r\n                                }, response => {\r\n                                    // reload customer list just in case\r\n                                    Q.reloadLookup(PatientManagement.PatientsRow.lookupKey);\r\n\r\n                                    Q.notifySuccess(Q.text(\"Controls.EntityDialog.SaveSuccessMessage\"));\r\n                                });\r\n                            }\r\n                        }]\r\n                });\r\n\r\n            //Add button for saving patient activity a form\r\n            // ReSharper disable once WrongExpressionStatement\r\n            new Serenity.Toolbar(this.byId(\"ActivityToolbar\"),\r\n                {\r\n                    buttons: [\r\n                        {\r\n                            cssClass: \"apply-changes-button\",\r\n                            title: Q.text(\"Controls.EntityDialog.UpdateButton\"),\r\n                            onClick: () => {\r\n                                var id = this.form.PatientId.value;\r\n\r\n                                if (!id)\r\n                                    return;\r\n\r\n                                if (!this.patientValidator.form())\r\n                                    return;\r\n\r\n                                var p = <PatientManagement.ActivityRow>{};\r\n                                this.patientActivityGrid.save(p);\r\n\r\n                                PatientManagement.ActivityService.Update({\r\n                                    EntityId: id,\r\n                                    Entity: p\r\n                                }, response => {\r\n                                    // reload customer list just in case\r\n                                    Q.reloadLookup(PatientManagement.PatientsRow.lookupKey);\r\n\r\n                                    Q.notifySuccess(Q.text(\"Controls.EntityDialog.SaveSuccessMessage\"));\r\n                                });\r\n                            }\r\n                        }]\r\n                });\r\n        }\r\n\r\n\r\n        \r\n        getSaveState() {\r\n            try {\r\n                return $.toJSON(this.getSaveEntity());\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        \r\n\r\n\r\n        loadResponse(data) {\r\n            super.loadResponse(data);\r\n            this.loadedState = this.getSaveState();\r\n        }\r\n\r\n        loadEntity(entity: PatientsRow) {\r\n            super.loadEntity(entity);\r\n\r\n            Serenity.TabsExtensions.setDisabled(this.tabs, 'Visits', this.isNewOrDeleted());\r\n            Serenity.TabsExtensions.setDisabled(this.tabs, 'PatientHealth', this.isNewOrDeleted());\r\n            Serenity.TabsExtensions.setDisabled(this.tabs, 'Notes', this.isNewOrDeleted());\r\n            Serenity.TabsExtensions.setDisabled(this.tabs, 'LifeStyle', this.isNewOrDeleted());\r\n            Serenity.TabsExtensions.setDisabled(this.tabs, 'Activity', this.isNewOrDeleted());\r\n            Serenity.TabsExtensions.setDisabled(this.tabs, 'FileUploads', this.isNewOrDeleted());\r\n\r\n            if (this.isNewOrDeleted()) {\r\n                // no patient is selected, just load an empty entity\r\n                this.patientHealthGrid.load({});\r\n                this.patientActivityGrid.load({});\r\n                this.lifeStyleGrid.load({});\r\n\r\n                return;\r\n            } else {\r\n                PatientHealthService.Retrieve({\r\n                    EntityId: entity.PatientId\r\n                }, response => {\r\n                    this.patientHealthGrid.load(response.Entity);\r\n                });\r\n\r\n                LifeStylesService.Retrieve({\r\n                        EntityId: entity.PatientId\r\n                    },\r\n                    response => {\r\n                        this.lifeStyleGrid.load(response.Entity);\r\n                    });\r\n\r\n\r\n                ActivityService.Retrieve({\r\n                        EntityId: entity.PatientId\r\n                    },\r\n                    response => {\r\n                        this.patientActivityGrid.load(response.Entity);\r\n                    });\r\n            }\r\n\r\n\r\n            this.visitsGrid.patientId = entity.PatientId;\r\n\r\n            this.patientsFileUploadsGrid.patientId = entity.PatientId;\r\n        }\r\n\r\n        onSaveSuccess(response) {\r\n            super.onSaveSuccess(response);\r\n\r\n            Q.reloadLookup('PatientManagement.Patients');\r\n        }\r\n\r\n\r\n    }\r\n}","/// <reference path=\"../Patients/PatientsDialog.ts\" />\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class CalendarPatientDialog extends PatientsDialog {\r\n\r\n\r\n        loadEntity(entity: PatientsRow) {\r\n            super.loadEntity(entity);\r\n            console.log(\"something\");\r\n                Serenity.EditorUtils.setReadOnly(this.form.Name, true);\r\n    \r\n        }\r\n    }\r\n}","/// <reference types=\"jquery\" />\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class VisitsDialog extends Serenity.EntityDialog<VisitsRow, any> {\r\n        protected getFormKey() { return VisitsForm.formKey; }\r\n        protected getIdProperty() { return VisitsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return VisitsRow.localTextPrefix; }\r\n        protected getService() { return VisitsService.baseUrl; }\r\n\r\n        protected form = new VisitsForm(this.idPrefix);\r\n\r\n        constructor() {\r\n            super();\r\n            \r\n            this.form.EndDate.addValidationRule(this.uniqueName, e => {\r\n                if (this.form.EndDate.valueAsDate != null &&\r\n                    this.form.StartDate.valueAsDate != null &&\r\n                    this.form.StartDate.valueAsDate > this.form.EndDate.valueAsDate ||\r\n                    this.form.StartDate == this.form.EndDate) {\r\n                    return Q.text(\"Site.Dashboard.ErrorEndDateBiggerThanStartDate\");\r\n                }\r\n                \r\n                return null;\r\n            });\r\n\r\n            this.form.StartDate.change(function (elem) {\r\n                var dateStart = this.form.StartDate.value;\r\n                this.form.EndDate.value = dateStart;\r\n            });\r\n        }\r\n    }\r\n}","/// <reference path=\"../Visits/VisitsDialog.ts\" />\r\n/// <reference types=\"jqueryui\" />\r\n/// <reference types=\"fullcalendar\" />\r\n\r\ndeclare var FullCalendar: any;\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class CalendarVisitsDialog extends VisitsDialog {\r\n        protected updateTitle(): void {\r\n            super.updateTitle();\r\n            if (this.isEditMode()) {\r\n\r\n\r\n                Serenity.EditorUtils.setReadOnly(this.form.PatientId, true);\r\n\r\n            }\r\n        }\r\n        public newPredifinedVisit = (start, end): void => {\r\n\r\n            var p = <PatientManagement.VisitsRow>{};\r\n            var dlg = new PatientManagement.CalendarVisitsDialog();\r\n\r\n            p.StartDate = start;\r\n            p.EndDate = end;\r\n            dlg.loadEntityAndOpenDialog(<PatientManagement.VisitsRow>{\r\n                StartDate: start,\r\n              EndDate: end\r\n            });\r\n        }\r\n        public updateVisit = (visitId, start, end): void => {\r\n\r\n            var p = <PatientManagement.VisitsRow>{};\r\n\r\n            VisitsService.Retrieve(<any>{\r\n                EntityId: visitId\r\n            }, resp => {\r\n\r\n                p = resp.Entity;\r\n                Q.notifyInfo(Q.text(\"Site.Dashboard.SuccessChangedVisitDates\") + p.PatientName);\r\n\r\n            });\r\n\r\n            p.StartDate = start;\r\n            p.EndDate = end;\r\n\r\n            VisitsService.Update({\r\n                    Entity: p,\r\n                    EntityId: visitId\r\n                },\r\n                response => {\r\n                    Q.reloadLookup(PatientManagement.VisitsRow.lookupKey);\r\n\r\n                    $('#VisitsGridDiv .refresh-button').click();\r\n                });\r\n        }\r\n\r\n        public deleteVisit = (visitId): void => {\r\n            var p = <PatientManagement.VisitsRow>{};\r\n\r\n            VisitsService.Retrieve(<any>{\r\n                EntityId: visitId\r\n            }, resp => {\r\n              \r\n                p = resp.Entity;\r\n\r\n                Q.confirm(this.formatAlertMessage(Q.text(\"Site.Dashboard.AlertOnCalendarRemove\"), p.PatientName, (p.StartDate) as any, (p.EndDate) as any), () => {\r\n                    VisitsService.Delete({\r\n                            EntityId: visitId\r\n                        },\r\n                        resp => {\r\n                            Q.notifyInfo(Q.text(\"Site.Dashboard.SuccessDeletingVisitDates\") + p.PatientName);\r\n\r\n                            $(\"#calendar\").fullCalendar('refetchEvents');\r\n                        });\r\n                },{});\r\n\r\n\r\n     \r\n                \r\n            });\r\n\r\n        }\r\n        protected onSaveSuccess(response: Serenity.SaveResponse): void {\r\n            VisitsService.Retrieve(<any>{\r\n                EntityId: response.EntityId\r\n            }, resp => {\r\n                $(\"#calendar\").fullCalendar('refetchEvents');\r\n            });\r\n\r\n        }\r\n\r\n        protected onDeleteSuccess(response: Serenity.DeleteResponse): void {\r\n            console.log(response);\r\n\r\n            $(\"#calendar\").fullCalendar('refetchEvents');\r\n        }\r\n\r\n        protected formatAlertMessage(firstLine, title, startDate: Date, endDate: Date): string {\r\n\r\n            var str = firstLine +\r\n                \"\\n\" +\r\n                Q.text(\"Site.Dashboard.CalendarPatient\") +\r\n                \" \" +\r\n                title +\r\n                \"\\n\\n\" +\r\n                Q.text(\"Site.Dashboard.CalendarStartDate\") +\r\n                \" \" +\r\n                startDate.toLocaleString() +\r\n                \"\\n\" +\r\n                Q.text(\"Site.Dashboard.CalendarEndDate\") +\r\n                \" \" +\r\n                endDate.toLocaleString();\r\n\r\n            return str;\r\n        }\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class VisitsGrid extends Serenity.EntityGrid<VisitsRow, any> {\r\n        protected getColumnsKey() { return 'PatientManagement.Visits'; }\r\n        protected getDialogType() { return VisitsDialog; }\r\n        protected getIdProperty() { return VisitsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return VisitsRow.localTextPrefix; }\r\n        protected getService() { return VisitsService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","/// <reference path=\"../Visits/VisitsGrid.ts\" />\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class CalendarVisitsGrid extends VisitsGrid {\r\n        protected getDialogType() { return CalendarVisitsDialog; }\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n        protected getInitialTitle() {\r\n            return null;\r\n        }\r\n        \r\n\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class LifeStylesDialog extends Serenity.EntityDialog<LifeStylesRow, any> {\r\n        protected getFormKey() { return LifeStylesForm.formKey; }\r\n        protected getIdProperty() { return LifeStylesRow.idProperty; }\r\n        protected getLocalTextPrefix() { return LifeStylesRow.localTextPrefix; }\r\n        protected getNameProperty() { return LifeStylesRow.nameProperty; }\r\n        protected getService() { return LifeStylesService.baseUrl; }\r\n\r\n        protected form = new LifeStylesForm(this.idPrefix);\r\n\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class LifeStylesGrid extends Serenity.EntityGrid<LifeStylesRow, any> {\r\n        protected getColumnsKey() { return 'PatientManagement.LifeStyles'; }\r\n        protected getDialogType() { return LifeStylesDialog; }\r\n        protected getIdProperty() { return LifeStylesRow.idProperty; }\r\n        protected getLocalTextPrefix() { return LifeStylesRow.localTextPrefix; }\r\n        protected getService() { return LifeStylesService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class NotesDialog extends Serenity.TemplatedDialog<any> {\r\n        private textEditor: Serenity.HtmlContentEditor;\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.textEditor = new Serenity.HtmlNoteContentEditor(this.byId('Text'));\r\n        }\r\n\r\n        protected getTemplate() {\r\n            return (\r\n                \"<form id='~_Form' class='s-Form'>\" +\r\n                    \"<textarea id='~_Text' class='required'></textarea>\" +\r\n                    \"</form>\");\r\n        }\r\n\r\n        protected getDialogOptions() {\r\n            var opt = super.getDialogOptions();\r\n\r\n            opt.buttons = [{\r\n                    text: Q.text('Dialogs.OkButton'),\r\n                    click: () => {\r\n                        if (!this.validateForm()) {\r\n                            return;\r\n                        }\r\n\r\n                        this.okClick && this.okClick();\r\n                    }\r\n                }, {\r\n                    text: Q.text('Dialogs.CancelButton'),\r\n                    click: () => this.dialogClose()\r\n                }\r\n            ];\r\n\r\n            return opt;\r\n        }\r\n\r\n        get text(): string {\r\n            return this.textEditor.value;\r\n        }\r\n\r\n        set text(value: string) {\r\n            this.textEditor.value = value;\r\n        }\r\n\r\n        public okClick: () => void;\r\n    }\r\n}","namespace PatientManagement.PatientManagement {\r\n    @Serenity.Decorators.registerEditor([Serenity.IGetEditValue, Serenity.ISetEditValue])\r\n    @Serenity.Decorators.element(\"<div/>\")\r\n    export class NotesEditor extends Serenity.TemplatedWidget<any>\r\n    implements Serenity.IGetEditValue, Serenity.ISetEditValue {\r\n\r\n        private isDirty: boolean;\r\n        private items: NotesRow[];\r\n\r\n        constructor(div: JQuery) {\r\n            super(div);\r\n\r\n            new Serenity.Toolbar(this.byId('Toolbar'), {\r\n                buttons: [{\r\n                    title: 'Add Note',\r\n                    cssClass: 'add-button',\r\n                    onClick: e => {\r\n                        e.preventDefault();\r\n                        this.addClick();\r\n                    }\r\n                }]\r\n            });\r\n        }\r\n\r\n        protected getTemplate() {\r\n            return \"<div><div id='~_Toolbar'></div><ul id='~_NoteList'></ul></div>\";\r\n        }\r\n\r\n        protected updateContent() {\r\n            var noteList = this.byId('NoteList');\r\n            noteList.children().remove();\r\n            if (this.items) {\r\n                var index = 0;\r\n                for (var t1 = 0; t1 < this.items.length; t1++) {\r\n                    var item = this.items[t1];\r\n                    var li = $('<li/>');\r\n                    $('<div/>').addClass('note-text').html(Q.coalesce(item.Text, '')).appendTo(li);\r\n\r\n                    $('<a/>').attr('href', '#').addClass('note-date')\r\n                        .text(item.InsertUserDisplayName + ' - ' +\r\n                            Q.formatDate(item.InsertDate, 'g'))\r\n                        .data('index', index).appendTo(li).click((e) => this.editClick(e));\r\n\r\n                    $('<a/>').attr('href', '#').addClass('note-delete')\r\n                        .attr('title', 'delete note').data('index', index)\r\n                        .appendTo(li).click((e) => this.deleteClick(e));\r\n\r\n                    li.appendTo(noteList);\r\n                    index++;\r\n                }\r\n            }\r\n        }\r\n\r\n        protected addClick() {\r\n            var dlg = new NotesDialog();\r\n            dlg.dialogTitle = 'Add Note';\r\n            dlg.okClick = () => {\r\n                var text = Q.trimToNull(dlg.text);\r\n                if (text == null) {\r\n                    return;\r\n                }\r\n\r\n                this.items = this.items || [];\r\n                Q.insert(this.items, 0, {\r\n                    Text: text,\r\n                    InsertUserDisplayName: Authorization.userDefinition.DisplayName,\r\n                    InsertDate: Q.formatISODateTimeUTC(new Date())\r\n                });\r\n\r\n                this.updateContent();\r\n                dlg.dialogClose();\r\n                this.set_isDirty(true);\r\n                this.onChange && this.onChange();\r\n            };\r\n            dlg.dialogOpen();\r\n        }\r\n\r\n        protected editClick(e) {\r\n            e.preventDefault();\r\n            var index = $(e.target).data('index');\r\n            var old = this.items[index];\r\n            var dlg = new NotesDialog();\r\n            dlg.dialogTitle = 'Edit Note';\r\n            dlg.text = old.Text;\r\n            dlg.okClick = () => {\r\n                var text = Q.trimToNull(dlg.text);\r\n                if (!text) {\r\n                    return;\r\n                }\r\n\r\n                this.items[index].Text = text;\r\n                this.updateContent();\r\n                dlg.dialogClose();\r\n                this.set_isDirty(true);\r\n                this.onChange && this.onChange();\r\n            };\r\n            dlg.dialogOpen();\r\n        }\r\n\r\n        public deleteClick(e) {\r\n            e.preventDefault();\r\n            var index = $(e.target).data('index');\r\n            Q.confirm('Delete this note?', () => {\r\n                this.items.splice(index, 1);\r\n                this.updateContent();\r\n                this.set_isDirty(true);\r\n                this.onChange && this.onChange();\r\n            });\r\n        }\r\n\r\n        public get value() {\r\n            return this.items;\r\n        }\r\n\r\n        public set value(value: NotesRow[]) {\r\n            this.items = value || [];\r\n            this.set_isDirty(false);\r\n            this.updateContent();\r\n        }\r\n\r\n        public getEditValue(prop: Serenity.PropertyItem, target) {\r\n            target[prop.name] = this.value;\r\n        }\r\n\r\n        public setEditValue(source, prop: Serenity.PropertyItem) {\r\n            this.value = source[prop.name] || [];\r\n        }\r\n\r\n        public get_isDirty(): boolean {\r\n            return this.isDirty;\r\n        }\r\n\r\n        public set_isDirty(value): void {\r\n            this.isDirty = value;\r\n        }\r\n\r\n        public onChange: () => void;\r\n    }\r\n}","namespace PatientManagement.PatientManagement {\r\n    @Serenity.Decorators.registerFormatter()\r\n    export class NotificationsUserImageFormatter\r\n    implements Slick.Formatter, Serenity.IInitializeColumn {\r\n\r\n\r\n        format(ctx: Slick.FormatterContext): string {\r\n\r\n            var file = (this.fileProperty ? ctx.item[this.fileProperty] : ctx.value) as string;\r\n            if (!file || !file.length)\r\n                return \"\";\r\n                \r\n            let href = Q.resolveUrl(\"~/upload/\" + file);\r\n\r\n            if (this.thumb) {\r\n                var parts = file.split('.');\r\n                file = parts.slice(0, parts.length - 1).join('.') + '_t.jpg';\r\n            }\r\n\r\n            let src;\r\n\r\n            if (file.indexOf(\"Content\") > 0) {\r\n                src = Q.resolveUrl('~' + file);\r\n\r\n            } else {\r\n                src = Q.resolveUrl('~/upload/' + file);\r\n\r\n            }\r\n            return `<div style='height:50px; width: 50px'><img src=\"${src}\" class='img-responsive img-circle img-thumbnail' /> </div>`;\r\n        }\r\n\r\n        initializeColumn(column: Slick.Column): void {\r\n            if (this.fileProperty) {\r\n                column.referencedFields = column.referencedFields || [];\r\n                column.referencedFields.push(this.fileProperty);\r\n            }\r\n        }\r\n\r\n        @Serenity.Decorators.option()\r\n        public fileProperty: string;\r\n\r\n        @Serenity.Decorators.option()\r\n        public thumb: boolean;\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class NotificationsDialog extends Serenity.EntityDialog<NotificationsRow, any> {\r\n        protected getFormKey() { return NotificationsForm.formKey; }\r\n        protected getIdProperty() { return NotificationsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return NotificationsRow.localTextPrefix; }\r\n        protected getNameProperty() { return NotificationsRow.nameProperty; }\r\n        protected getService() { return NotificationsService.baseUrl; }\r\n\r\n        protected form = new NotificationsForm(this.idPrefix);\r\n\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class NotificationsGrid extends Serenity.EntityGrid<NotificationsRow, any> {\r\n        protected getColumnsKey() { return 'PatientManagement.Notifications'; }\r\n        protected getDialogType() { return NotificationsDialog; }\r\n        protected getIdProperty() { return NotificationsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return NotificationsRow.localTextPrefix; }\r\n        protected getService() { return NotificationsService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected getButtons(): Serenity.ToolButton[] {\r\n        \r\n            var buttons = super.getButtons();\r\n            buttons.splice(Q.indexOf(buttons, x => x.cssClass == \"add-button\"), 1);\r\n\r\n            return buttons;\r\n        }\r\n\r\n        protected getSlickOptions(): Slick.GridOptions {\r\n            let opt = super.getSlickOptions();\r\n            opt.rowHeight = 55;\r\n            return opt;\r\n        }\r\n\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class PatientHealthDialog extends Serenity.EntityDialog<PatientHealthRow, any> {\r\n        protected getFormKey() { return PatientHealthForm.formKey; }\r\n        protected getIdProperty() { return PatientHealthRow.idProperty; }\r\n        protected getLocalTextPrefix() { return PatientHealthRow.localTextPrefix; }\r\n        protected getNameProperty() { return PatientHealthRow.nameProperty; }\r\n        protected getService() { return PatientHealthService.baseUrl; }\r\n\r\n        protected form = new PatientHealthForm(this.idPrefix);\r\n\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class PatientHealthGrid extends Serenity.EntityGrid<PatientHealthRow, any> {\r\n        protected getColumnsKey() { return 'PatientManagement.PatientHealth'; }\r\n        protected getDialogType() { return PatientHealthDialog; }\r\n        protected getIdProperty() { return PatientHealthRow.idProperty; }\r\n        protected getLocalTextPrefix() { return PatientHealthRow.localTextPrefix; }\r\n        protected getService() { return PatientHealthService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class PatientsFileUploadsDialog extends Serenity.EntityDialog<PatientsFileUploadsRow, any> {\r\n        protected getFormKey() { return PatientsFileUploadsForm.formKey; }\r\n        protected getIdProperty() { return PatientsFileUploadsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return PatientsFileUploadsRow.localTextPrefix; }\r\n        protected getNameProperty() { return PatientsFileUploadsRow.nameProperty; }\r\n        protected getService() { return PatientsFileUploadsService.baseUrl; }\r\n\r\n        protected form = new PatientsFileUploadsForm(this.idPrefix);\r\n\r\n    }\r\n}","/// <reference path=\"../PatientsFileUploads/PatientsFileUploadsDialog.ts\" />\r\n\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class FIleUploadsForPatientDialog extends PatientsFileUploadsDialog {\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        updateInterface() {\r\n            super.updateInterface();\r\n\r\n            Serenity.EditorUtils.setReadOnly(this.form.PatientId, true);\r\n        }\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class PatientsFileUploadsGrid extends Serenity.EntityGrid<PatientsFileUploadsRow, any> {\r\n        protected getColumnsKey() { return 'PatientManagement.PatientsFileUploads'; }\r\n        protected getDialogType() { return PatientsFileUploadsDialog; }\r\n        protected getIdProperty() { return PatientsFileUploadsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return PatientsFileUploadsRow.localTextPrefix; }\r\n        protected getService() { return PatientsFileUploadsService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","/// <reference path=\"../PatientsFileUploads/PatientsFileUploadsGrid.ts\"/>\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class FIleUploadsForPatientGrid extends PatientsFileUploadsGrid {\r\n        protected getDialogType() { return FIleUploadsForPatientDialog; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n\r\n        protected getColumns(): Slick.Column[] {\r\n            let fld = PatientsFileUploadsRow.Fields;\r\n            return super.getColumns();\r\n        }\r\n\r\n        protected initEntityDialog(itemType, dialog) {\r\n            super.initEntityDialog(itemType, dialog);\r\n            Serenity.SubDialogHelper.cascade(dialog, this.element.closest('.ui-dialog'));\r\n        }\r\n\r\n        protected addButtonClick() {\r\n            console.log(this.patientId);\r\n            this.editItem({ PatientId: this.patientId });\r\n        }\r\n\r\n        protected getInitialTitle() {\r\n            return null;\r\n        }\r\n\r\n        protected getGridCanLoad() {\r\n            return super.getGridCanLoad() && !!this.patientId;\r\n        }\r\n\r\n        private _patientId: number;\r\n\r\n        get patientId() {\r\n            return this._patientId;\r\n        }\r\n\r\n        set patientId(value: number) {\r\n            if (this._patientId !== value) {\r\n                this._patientId = value;\r\n                this.setEquality('PatientId', value);\r\n                this.refresh();\r\n            }\r\n        }\r\n    }\r\n}","namespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerFormatter([Serenity.ISlickFormatter, Serenity.IInitializeColumn])\r\n    export class PatientsFormatter implements Slick.Formatter {\r\n        format(ctx: Slick.FormatterContext) {\r\n            var text = Q.htmlEncode(ctx.value);\r\n\r\n            if (!this.genderProperty) {\r\n                return text;\r\n            }\r\n            var gender = ctx.item[this.genderProperty];\r\n            return \"<span class='\" + ((gender === Gender.Female) ?\r\n                    'employee-symbol female' : 'employee-symbol male') +\r\n                \"'>\" + text + '</span>';\r\n        }\r\n\r\n        @Serenity.Decorators.option()\r\n        public genderProperty: string;\r\n\r\n        public initializeColumn(column: Slick.Column) {\r\n            column.referencedFields = column.referencedFields || [];\r\n            if (this.genderProperty)\r\n                column.referencedFields.push(this.genderProperty);\r\n        }\r\n    }\r\n\r\n    @Serenity.Decorators.registerFormatter()\r\n    export class PatientsPhoneFormatter implements Slick.Formatter {\r\n        format(ctx: Slick.FormatterContext) {\r\n            return \"<span class='phone-symbol'>\" + Q.htmlEncode(ctx.value) + '</span>'\r\n\r\n        }\r\n    }\r\n\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class PatientsGrid extends Serenity.EntityGrid<PatientsRow, any> {\r\n        protected getColumnsKey() { return 'PatientManagement.Patients'; }\r\n        protected getDialogType() { return PatientsDialog; }\r\n        protected getIdProperty() { return PatientsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return PatientsRow.localTextPrefix; }\r\n        protected getService() { return PatientsService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","/// <reference path=\"../Visits/VisitsDialog.ts\" />\r\n\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class PatientVisitsDialog extends VisitsDialog {\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        updateInterface() {\r\n            super.updateInterface();\r\n\r\n            Serenity.EditorUtils.setReadOnly(this.form.PatientId, true);\r\n        }\r\n    }\r\n}","/// <reference path=\"../Visits/VisitsGrid.ts\" />\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class PatientVisitsGrid extends VisitsGrid {\r\n        protected getDialogType() { return PatientVisitsDialog; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected getColumns(): Slick.Column[] {\r\n            let fld = VisitsRow.Fields;\r\n            return super.getColumns();\r\n        }\r\n\r\n        protected initEntityDialog(itemType, dialog) {\r\n            super.initEntityDialog(itemType, dialog);\r\n            Serenity.SubDialogHelper.cascade(dialog, this.element.closest('.ui-dialog'));\r\n        }\r\n\r\n        protected addButtonClick() {\r\n            console.log(this.patientId);\r\n            this.editItem({ PatientId: this.patientId });\r\n        }\r\n\r\n        protected getInitialTitle() {\r\n            return null;\r\n        }\r\n\r\n        protected getGridCanLoad() {\r\n            return super.getGridCanLoad() && !!this.patientId;\r\n        }\r\n\r\n        private _patientId: number;\r\n\r\n        get patientId() {\r\n            return this._patientId;\r\n        }\r\n\r\n        set patientId(value: number) {\r\n            if (this._patientId !== value) {\r\n                this._patientId = value;\r\n                this.setEquality('PatientId', value);\r\n                this.refresh();\r\n            }\r\n        }\r\n    } \r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class UserNotificationsDialog extends Serenity.EntityDialog<UserNotificationsRow, any> {\r\n        protected getFormKey() { return UserNotificationsForm.formKey; }\r\n        protected getIdProperty() { return UserNotificationsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return UserNotificationsRow.localTextPrefix; }\r\n        protected getService() { return UserNotificationsService.baseUrl; }\r\n\r\n        protected form = new UserNotificationsForm(this.idPrefix);\r\n\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class UserNotificationsGrid extends Serenity.EntityGrid<UserNotificationsRow, any> {\r\n        protected getColumnsKey() { return 'PatientManagement.UserNotifications'; }\r\n        protected getDialogType() { return UserNotificationsDialog; }\r\n        protected getIdProperty() { return UserNotificationsRow.idProperty; }\r\n        protected getLocalTextPrefix() { return UserNotificationsRow.localTextPrefix; }\r\n        protected getService() { return UserNotificationsService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n        protected getButtons(): Serenity.ToolButton[] {\r\n\r\n            var buttons = super.getButtons();\r\n            buttons.splice(Q.indexOf(buttons, x => x.cssClass == \"add-button\"), 1);\r\n\r\n            return buttons;\r\n        }\r\n    }\r\n}","namespace PatientManagement.PatientManagement {\r\n    @Serenity.Decorators.registerFormatter([Serenity.ISlickFormatter, Serenity.IInitializeColumn])\r\n    export class VisitsTypesFormatter implements Slick.Formatter {\r\n        format(ctx: Slick.FormatterContext) {\r\n\r\n            if (!this.backgroundProperty || !this.borderProperty) {\r\n                return text;\r\n            }\r\n            var backgroundColor = ctx.item[this.backgroundProperty];\r\n            var borderColor = ctx.item[this.borderProperty];\r\n\r\n            var text = Q.htmlEncode(ctx.value);\r\n            \r\n            //return \"<span style='background-color: \" + color +\";'>\" + text + '</span>';\r\n\r\n            return \"<span class='visit-type-icon' style='background-color: \" + backgroundColor + \"; border-color: \" + borderColor +\";' >\" + '</span>' + text;\r\n\r\n        }\r\n\r\n\r\n        @Serenity.Decorators.option()\r\n        public backgroundProperty: string;\r\n        @Serenity.Decorators.option()\r\n        public borderProperty: string;\r\n\r\n        public initializeColumn(column: Slick.Column) {\r\n            column.referencedFields = column.referencedFields || [];\r\n\r\n            if (this.backgroundProperty)\r\n                column.referencedFields.push(this.backgroundProperty);\r\n\r\n            if (this.borderProperty)\r\n                column.referencedFields.push(this.borderProperty);\r\n        }\r\n    }\r\n\r\n}","/// <reference types=\"jqueryui\" />\r\n/// <returns type=\"jquery.colorpicker\"></returns>\r\n\r\nnamespace PatientManagement.PatientManagement {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.responsive()\r\n    export class VisitTypesDialog extends Serenity.EntityDialog<VisitTypesRow, any> {\r\n        protected getFormKey() { return VisitTypesForm.formKey; }\r\n        protected getIdProperty() { return VisitTypesRow.idProperty; }\r\n        protected getLocalTextPrefix() { return VisitTypesRow.localTextPrefix; }\r\n        protected getNameProperty() { return VisitTypesRow.nameProperty; }\r\n        protected getService() { return VisitTypesService.baseUrl; }\r\n\r\n        protected form = new VisitTypesForm(this.idPrefix);\r\n\r\n        loadEntity(entity: VisitTypesRow) {\r\n            super.loadEntity(entity);\r\n            console.log(\"entity loadded\");\r\n\r\n            $(\".BorderColor input\").colorpicker();\r\n            $(\".BackgroundColor input\").colorpicker();\r\n\r\n            Serenity.EditorUtils.setReadOnly(this.form.BorderColor, true);\r\n            Serenity.EditorUtils.setReadOnly(this.form.BackgroundColor, true);\r\n\r\n        }\r\n    }\r\n}","\r\nnamespace PatientManagement.PatientManagement {\r\n    \r\n    @Serenity.Decorators.registerClass()\r\n    export class VisitTypesGrid extends Serenity.EntityGrid<VisitTypesRow, any> {\r\n        protected getColumnsKey() { return 'PatientManagement.VisitTypes'; }\r\n        protected getDialogType() { return VisitTypesDialog; }\r\n        protected getIdProperty() { return VisitTypesRow.idProperty; }\r\n        protected getLocalTextPrefix() { return VisitTypesRow.localTextPrefix; }\r\n        protected getService() { return VisitTypesService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","/// <reference types=\"jqueryui\" />\r\n\r\nnamespace PatientManagement {\r\n    @Serenity.Decorators.registerClass()\r\n    export class VisiTypesBottomLeftMenu extends Serenity.Widget<any> {\r\n\r\n        constructor(elem: JQuery, opt: {}) {\r\n            super(elem, opt);\r\n\r\n            PatientManagement.VisitTypesService.List({},\r\n                resp => {\r\n                    if (resp.Entities.length > 0) {\r\n\r\n                        for (var type in resp.Entities) {\r\n                            console.log(resp.Entities[type]);\r\n                            var item = resp.Entities[type]; \r\n\r\n                            var li = $('<li/>');\r\n                            var a = $('<a/>');\r\n                            var i = $('<i/>');\r\n                            i.addClass('fa fa-circle-o');\r\n                            i.css('color', item.BackgroundColor);\r\n                            a.append(i);\r\n\r\n                            var span = $('<span/>');\r\n                            span.text(item.Name);\r\n                            a.append(span);\r\n\r\n\r\n                            li.append(a);\r\n                            elem.after(li);\r\n                        }\r\n                }\r\n                });\r\n        }\r\n\r\n    }\r\n}"]}