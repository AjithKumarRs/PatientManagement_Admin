
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
<link rel="home" id="ApplicationPath" href="~/" />
<link rel="icon" type="image/x-icon" href="~/favicon.ico" />
@Html.Stylesheet("~/Content/font-open-sans.css")
@Html.Stylesheet("~/Content/font-awesome.css")
@Html.Stylesheet("~/Content/simple-line-icons.css")
@Html.Stylesheet("~/Content/ionicons.css")
@Html.Stylesheet("~/Content/aristo/aristo.css")
@Html.Stylesheet("~/Content/bootstrap.css")
@Html.Stylesheet("~/Content/colorbox/jquery.colorbox.css")
@Html.Stylesheet("~/Content/jquery.fileupload.css")
@Html.Stylesheet("~/Content/pace.css")
@Html.Stylesheet("~/Content/slick.grid.css")
@Html.Stylesheet("~/Content/css/select2.css")
@Html.Stylesheet("~/Content/toastr.css")
@Html.Stylesheet("~/Content/serenity/serenity.css")
@Html.Stylesheet("~/Content/bootstrap-switch/bootstrap-switch.css")
@Html.Stylesheet("~/Content/site/site.css")
@Html.Stylesheet("~/Scripts/colorpicker/bootstrap-colorpicker.min.css")
@if (System.Globalization.CultureInfo.CurrentUICulture.TextInfo.IsRightToLeft)
{
    @Html.Stylesheet("~/Content/site/site.rtl.css")
}
@*{var cookie = Request.Cookies["ThemePreference"]; var theme = cookie != null && !cookie.Value.IsEmptyOrNull() ? cookie.Value : "default"; *}*@
<script type="application/json" id="ScriptCulture">
    @Html.Raw(Serenity.JSON.Stringify(new ScriptCulture()))
</script>

<script src="~/Scripts/moment/moment.min.js"></script>
<script type="text/javascript">window.paceOptions = { minTime: 250, ghostTime: 250, restartOnRequestAfter: 250, ajax: { trackMethods: ['GET', 'POST'], trackWebSockets: false, ignoreURLs: [] } };</script>
@Html.Script("~/Scripts/pace.js")
@foreach (var x in CommonIncludes.Scripts)
{ @Html.Script(x) }
@Html.Script("~/Scripts/jquery.cropzoom.js")
@Html.Script("~/Scripts/jquery.fileupload.js")
@Html.Script("~/Scripts/jquery.iframe-transport.js")
@Html.Script("~/Scripts/jquery.maskedinput.js")
@Html.Script("~/Scripts/jquery.slimscroll.js")
@Html.Script("~/Scripts/SlickGrid/Plugins/slick.rowselectionmodel.js")
@Html.Script("~/Scripts/mousetrap.js")
@Html.Script("~/Scripts/fastclick/fastclick.js")
@Html.Script("~/Scripts/adminlte/app.js")
@Html.Script("~/Scripts/site/PatientManagement.Web.js")
@Html.Script("~/Scripts/colorpicker/bootstrap-colorpicker.min.js")
@Html.Script("~/Scripts/jquery.signalR.min.js")
@Html.Script("~/Scripts/bootstrap-switch/bootstrap-switch.js")
<script src="~/DynJS.axd/@HtmlScriptExtensions.GetLocalTextInclude(this.Html, "Site")"></script>
<script src="~/DynJS.axd/@DynamicScriptManager.GetScriptInclude("ColumnsBundle")"></script>
<script src="~/DynJS.axd/@DynamicScriptManager.GetScriptInclude("FormBundle")"></script>
<script src="~/DynJS.axd/@DynamicScriptManager.GetScriptInclude("TemplateBundle")"></script>
<script src="~/DynJS.axd/@DynamicScriptManager.GetScriptInclude("RegisteredScripts")"></script>

<script src="~/signalr/hubs"></script>
<script>
    $(function () {
        var hub = $.connection.notificationHub;

        hub.client.visitChangedNotification = function (userDisplayName, userPicture, notification, start, end) {
            var to = {};
            to.timeOut = 6000;
            to.closeButton = true;
            

            if ($('#NotificationCheck').bootstrapSwitch('state')) {
                Q.notifyInfo(notification, '', to);
            }
            RefreshFullCalendar(start, end);
            
            if ($('#VisitsGridDiv').length){
                $('#VisitsGridDiv .refresh-button').click();
            }
            if ($('.s-VisitsGrid').length) {
                $('.s-VisitsGrid .refresh-button').click();
            }
            if ($('.s-NotificationsGrid').length) {
                $('.s-NotificationsGrid .refresh-button').click();
            }
            var number = +($('.counter-label-notifications').text());
            $('.counter-label-notifications').text(number + 1);
        };

        hub.client.patientChangedNotification = function (userDisplayName, userPicture, notification) {
            var to = {};
        
            if ($('#NotificationCheck').bootstrapSwitch('state')) {
                Q.notifyInfo(notification, '', to);
            }
            
            if ($('.s-PatientsGrid').length) {
                $('.s-PatientsGrid .refresh-button').click();
            }


            if ($('.s-NotificationsGrid').length) {
                $('.s-NotificationsGrid .refresh-button').click();
            }

            var number = +($('.counter-label-notifications').text());
            $('.counter-label-notifications').text(number + 1);
            
        };


        $.connection.hub.start();

    });
</script>
